var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddContactComponent.html",[0,0.174,1,0.454]],["body/components/AddContactComponent.html",[0,0.295,1,0.635,2,0.507,3,0.142,4,0.124,5,0.358,6,0.358,7,0.358,8,0.124,9,5.601,10,5.601,11,2.028,12,0.245,13,0.711,14,0.759,15,0.654,16,3.909,17,3.96,18,2.725,19,2.459,20,3.081,21,0.77,22,0.358,23,1.064,24,0.919,25,0.544,26,0.683,27,0.544,28,1.165,29,2.974,30,0.635,31,0.635,32,0.544,33,3.622,34,0.544,35,3.622,36,0.142,37,0.667,38,5.756,39,3.726,40,4.897,41,1.392,42,2.592,43,2.725,44,0.584,45,4.463,46,4.161,47,4.891,48,2.552,49,3.081,50,4.891,51,3.296,52,1.085,53,2.717,54,2.247,55,3.726,56,4.38,57,3.472,58,3.572,59,0.419,60,0.024,61,0.729,62,0.788,63,1.4,64,0.565,65,2.384,66,2.384,67,3.68,68,2.384,69,2.384,70,2.384,71,4.161,72,2.028,73,2.384,74,3.622,75,2.247,76,0.891,77,1.487,78,2.384,79,2.247,80,3.622,81,1.226,82,2.384,83,3.622,84,2.925,85,2.459,86,3.622,87,4.161,88,4.891,89,3.622,90,3.622,91,3.081,92,3.081,93,3.622,94,1.578,95,1.787,96,1.787,97,2.384,98,3.081,99,3.081,100,0.071,101,1.919,102,1.467,103,2.459,104,3.622,105,0.299,106,2.459,107,2.07,108,2.247,109,3.622,110,1.919,111,3.081,112,4.161,113,2.384,114,3.081,115,3.436,116,3.081,117,1.787,118,2.321,119,2.504,120,0.53,121,0.498,122,3.622,123,2.384,124,3.622,125,2.247,126,2.061,127,2.028,128,1.479,129,1.794,130,1.363,131,1.619,132,2.384,133,2.384,134,2.384,135,2.459,136,2.384,137,2.028,138,0.449,139,1.023,140,3.035,141,1.099,142,0.221,143,0.598,144,1.619,145,1.363,146,1.619,147,1.479,148,1.794,149,1.794,150,1.479,151,1.619,152,2.028,153,1.619,154,0.142,155,2.384,156,2.384,157,2.028,158,2.028,159,2.384,160,2.384,161,2.384,162,2.384,163,2.384,164,0.563,165,2.028,166,2.028,167,2.384,168,3.622,169,2.384,170,0.634,171,3.622,172,1.176,173,2.384,174,2.384,175,0.854,176,2.384,177,1.794,178,1.263,179,2.028,180,1.794,181,2.384,182,1.794,183,5.538,184,2.247,185,3.622,186,3.081,187,3.622,188,5.931,189,3.622,190,3.081,191,3.622,192,3.622,193,4.891,194,3.622,195,2.459,196,3.622,197,3.622,198,3.081,199,1.085,200,1.222,201,3.081,202,0.358,203,0.507,204,0.507,205,0.358,206,0.735,207,0.358,208,0.358,209,0.333,210,0.358,211,0.309,212,0.358,213,0.309,214,0.358,215,0.333,216,0.544,217,0.309,218,0.358,219,0.358,220,0.309,221,0.242,222,0.544,223,0.333,224,0.358,225,0.309,226,0.358,227,0.309,228,0.358,229,0.309,230,0.358,231,0.309,232,0.544,233,0.358,234,0.309,235,0.358,236,0.309,237,0.358,238,0.309,239,0.358,240,0.358,241,0.309,242,0.333,243,0.358,244,0.309,245,0.358,246,0.309,247,0.309,248,0.544,249,0.358,250,0.358,251,0.309,252,0.333,253,0.333,254,0.358,255,0.358,256,0.333,257,0.309,258,0.358,259,0.309,260,0.333,261,0.358,262,0.358,263,0.309,264,0.358,265,0.309,266,0.358,267,0.309,268,0.358,269,0.309,270,0.453,271,0.358,272,0.309,273,0.358,274,0.333,275,0.358,276,0.309,277,0.358,278,0.309,279,0.358,280,0.358,281,0.358,282,0.358,283,0.035,284,0.035]],["title/components/AppComponent.html",[0,0.174,211,0.454]],["body/components/AppComponent.html",[0,0.292,1,0.328,2,0.53,3,0.151,4,0.132,5,0.38,6,0.38,7,0.38,8,0.132,12,0.256,14,0.419,15,0.234,21,0.328,22,0.38,23,1.07,24,0.926,25,0.569,26,0.654,27,0.569,28,1.208,30,0.328,31,0.328,32,0.569,34,0.569,36,0.151,37,0.928,41,2.211,42,2.671,44,0.61,48,2.323,53,2.35,59,0.408,60,0.024,61,0.799,62,0.848,63,1.337,64,0.581,76,0.945,77,1.42,81,1.353,94,1.607,95,2.794,96,1.868,100,0.041,101,2.671,105,0.236,117,1.868,120,0.562,121,0.948,125,2.35,126,2.211,130,2.881,135,2.572,138,0.489,141,1.166,142,0.234,143,0.634,153,1.718,154,0.151,164,0.597,170,1.208,195,2.572,200,1.277,202,0.38,203,0.53,204,0.53,205,0.38,206,0.758,207,0.38,208,0.38,209,0.354,210,0.38,211,0.654,212,0.38,213,0.328,214,0.38,215,0.354,216,0.569,217,0.328,218,0.38,219,0.682,220,0.328,221,0.257,222,0.569,223,0.354,224,0.38,225,0.328,226,0.38,227,0.328,228,0.38,229,0.654,230,0.38,231,0.328,232,0.569,233,0.38,234,0.328,235,0.38,236,0.328,237,0.38,238,0.328,239,0.38,240,0.38,241,0.328,242,0.755,243,0.38,244,0.654,245,0.38,246,0.328,247,0.328,248,0.569,249,0.38,250,0.38,251,0.328,252,0.354,253,0.354,254,0.38,255,0.38,256,0.354,257,0.328,258,0.38,259,0.328,260,0.354,261,0.38,262,0.38,263,0.328,264,0.38,265,0.328,266,0.38,267,0.328,268,0.38,269,0.328,270,0.467,271,0.38,272,0.328,273,0.38,274,0.354,275,0.38,276,0.328,277,0.38,278,0.328,279,0.38,280,0.38,281,0.38,282,0.38,283,0.037,284,0.037,285,2.153,286,2.85,287,3.223,288,3.788,289,3.788,290,3.788,291,1.745,292,2.405,293,3.416,294,2.165,295,4.54,296,2.817,297,3.788,298,3.788,299,1.918,300,3.863,301,3.423,302,3.127,303,4.54,304,4.54,305,4.54,306,5.665,307,4.54,308,4.54,309,4.54,310,2.486,311,3.863,312,4.54,313,5.04,314,4.288,315,5.04,316,3.423,317,5.04,318,4.288,319,0.804,320,1.718,321,3.225,322,3.788,323,2.323,324,4.288,325,2.572,326,3.223,327,4.82,328,3.788,329,3.788,330,3.223,331,3.788,332,2.53,333,3.223,334,2.572,335,2.35,336,3.223,337,2.53,338,3.002,339,3.793,340,0.835,341,2.165,342,2.53,343,3.788,344,3.223,345,2.007,346,2.53,347,2.85,348,2.53,349,2.53,350,3.788,351,3.788,352,3.223,353,3.788,354,2.53,355,3.788,356,3.793,357,3.788,358,2.572,359,3.788,360,3.046,361,2.35,362,2.53,363,2.53,364,3.788,365,2.53,366,1.839,367,2.239,368,2.53,369,2.53,370,2.53,371,2.53,372,2.572,373,3.788,374,1.745,375,2.007,376,2.53,377,2.572,378,3.788,379,3.788,380,2.53,381,2.35,382,2.53,383,2.35,384,2.53,385,2.53,386,2.53,387,1.092,388,2.53,389,2.53,390,1.446,391,1.025,392,1.248,393,1.57,394,2.53,395,1.166,396,1.341,397,1.904,398,2.153,399,2.153,400,1.904,401,2.53,402,2.53,403,2.53,404,2.153,405,3.788,406,2.53,407,2.53,408,2.53,409,3.223,410,3.788,411,4.54,412,2.53,413,2.53,414,2.53,415,2.53,416,2.153,417,2.53,418,2.53,419,2.53]],["title/classes/AppUser.html",[100,0.057,366,1.417]],["body/classes/AppUser.html",[3,0.227,4,0.198,8,0.198,12,0.341,15,0.64,24,0.655,36,0.227,37,1.191,44,0.814,59,0.446,60,0.024,63,1.192,64,0.571,76,1.008,81,1.785,84,1.874,95,2.983,96,2.491,100,0.093,102,2.716,105,0.295,108,3.134,120,1.122,121,1.263,125,3.134,138,0.429,154,0.227,164,1.192,170,1.675,172,1.874,175,1.361,199,1.938,200,1.703,221,0.513,283,0.049,284,0.049,319,1.207,323,2.327,340,1.158,366,2.621,375,3.335,395,1.751,396,2.013,420,2.172,421,5.834,422,2.859,423,2.676,424,3.801,425,5.051,426,4.485,427,2.887,428,5.355,429,2.675,430,6.046,431,5.144,432,5.051,433,3.751,434,3.134,435,5.051,436,3.134,437,2.327,438,3.799,439,3.799,440,3.799,441,3.799,442,2.676,443,3.799,444,3.43,445,4.297,446,4.395,447,4.297,448,5.051,449,3.799,450,3.799,451,3.134,452,3.751,453,2.676,454,3.134,455,3.134,456,3.134,457,2.327,458,3.134,459,3.134,460,2.357,461,2.859,462,3.134,463,3.134,464,2.614,465,3.799,466,3.799,467,3.799,468,4.827,469,4.297,470,5.051,471,5.051,472,3.799,473,3.232,474,3.799,475,3.799]],["title/components/ArrowBackBtnComponent.html",[0,0.174,213,0.454]],["body/components/ArrowBackBtnComponent.html",[0,0.323,1,0.541,2,0.75,3,0.249,4,0.217,5,0.626,6,0.626,7,0.626,8,0.217,12,0.282,13,1.053,14,0.593,15,0.386,21,0.541,22,0.626,23,1.106,24,0.955,25,0.806,26,0.696,27,0.626,30,0.541,31,0.541,32,0.806,34,0.806,60,0.023,79,3.328,100,0.068,105,0.279,138,0.315,142,0.386,154,0.249,202,0.626,203,0.75,204,0.75,205,0.626,206,0.942,207,0.626,208,0.626,209,0.583,210,0.626,211,0.541,212,0.626,213,0.813,214,1.039,215,0.981,216,0.806,217,0.541,218,0.626,219,0.626,220,0.541,221,0.423,222,0.806,223,0.583,224,0.626,225,0.541,226,0.626,227,0.541,228,0.626,229,0.541,230,0.626,231,0.541,232,0.806,233,0.626,234,0.541,235,0.626,236,0.541,237,0.626,238,0.541,239,0.626,240,0.626,241,0.541,242,0.583,243,0.626,244,0.541,245,0.626,246,0.541,247,0.541,248,0.806,249,0.626,250,0.626,251,0.541,252,0.583,253,0.583,254,0.626,255,0.626,256,0.583,257,0.541,258,0.626,259,0.541,260,0.583,261,0.626,262,0.626,263,0.541,264,0.626,265,0.541,266,0.626,267,0.541,268,0.626,269,0.541,270,0.58,271,0.626,272,0.541,273,0.626,274,0.583,275,0.626,276,0.541,277,0.626,278,0.541,279,0.626,280,0.626,281,0.626,282,0.626,283,0.052,284,0.052,476,3.544,477,2.829,478,3.135,479,4.564,480,4.564,481,5.364,482,5.364,483,4.564,484,4.564,485,4.564]],["title/injectables/AuthService.html",[299,1.332,486,1.417]],["body/injectables/AuthService.html",[3,0.146,4,0.127,8,0.127,12,0.378,36,0.146,37,0.68,41,1.175,44,0.596,59,0.422,60,0.024,61,0.444,62,0.578,63,1.171,64,0.56,76,1.025,77,1.499,81,1.799,84,3.45,85,3.368,94,1.185,96,3.077,100,0.04,102,2.7,105,0.324,107,2.114,120,1.329,121,1.249,126,0.878,138,0.424,142,0.227,154,0.146,164,1.496,170,1.591,172,2.626,195,2.511,199,1.334,200,1.247,242,0.917,247,0.905,257,0.48,260,0.745,283,0.036,284,0.036,294,1.401,299,1.888,302,3.711,319,1.175,321,2.866,325,4.361,338,3.169,340,1.276,341,3.199,345,2.628,358,4.061,366,2.422,367,2.626,387,1.057,391,0.992,392,1.209,395,1.129,396,1.298,400,2.782,409,3.789,429,2.009,437,1.704,442,2.628,457,2.286,486,2.009,487,1.401,488,2.085,489,2.511,490,3.024,491,4.96,492,4.96,493,4.96,494,3.698,495,3.732,496,4.96,497,4.22,498,3.984,499,5.324,500,3.698,501,4.453,502,3.698,503,4.96,504,3.698,505,1.664,506,3.368,507,3.698,508,2.294,509,2.45,510,2.294,511,3.146,512,3.698,513,4.006,514,4.061,515,5.981,516,3.473,517,2.45,518,3.698,519,2.45,520,4.96,521,4.212,522,4.96,523,4.96,524,3.698,525,2.45,526,2.511,527,3.698,528,3.698,529,4.96,530,2.782,531,2.835,532,3.698,533,2.45,534,4.361,535,2.45,536,3.698,537,2.511,538,2.45,539,3.146,540,3.698,541,2.45,542,3.351,543,3.698,544,2.45,545,2.782,546,3.698,547,4.96,548,2.45,549,2.782,550,3.698,551,3.698,552,2.45,553,2.085,554,2.45,555,2.511,556,2.782,557,3.146,558,2.782,559,3.146,560,2.782,561,3.146,562,3.698,563,3.698,564,3.698,565,2.45,566,3.698,567,4.22,568,3.146,569,3.303,570,2.45,571,1.664,572,1.844,573,1.664,574,1.52,575,2.064,576,3.801,577,4.694,578,2.45,579,2.085,580,4.006,581,2.45,582,2.45,583,1.664,584,1.057,585,1.664,586,2.45,587,3.698,588,2.45,589,1.844,590,2.782,591,2.45,592,2.45,593,2.45,594,2.45,595,2.45,596,2.45,597,2.45,598,2.45,599,2.45,600,2.45,601,2.45,602,2.085,603,2.45,604,2.45,605,2.45,606,2.45]],["title/classes/AuthUser.html",[100,0.057,426,2.376]],["body/classes/AuthUser.html",[3,0.273,4,0.238,8,0.238,12,0.385,36,0.273,37,1.193,44,0.917,59,0.451,60,0.024,64,0.56,76,0.855,81,1.146,84,3.198,100,0.101,102,2.845,105,0.238,120,1.016,121,0.955,154,0.273,164,1.08,170,1.217,199,1.704,200,1.919,247,0.593,283,0.055,284,0.055,319,1.453,323,2.622,325,3.105,340,1.193,420,2.614,422,3.441,423,2.423,426,3.864,427,2.614,429,2.625,433,4.022,434,3.531,436,3.531,437,2.622,451,3.531,452,4.022,453,3.015,454,3.531,455,3.531,456,3.531,457,2.855,458,3.531,459,3.531,460,2.837,462,3.531,463,3.531,464,2.107,542,4.878,579,3.89,607,5.784,608,4.573,609,4.573,610,3.89,611,3.441,612,4.573,613,5.69,614,4.573,615,4.573,616,4.573,617,4.573,618,4.573,619,4.573,620,4.841,621,4.841,622,4.573]],["title/injectables/AutoscrollService.html",[486,1.417,623,2.633]],["body/injectables/AutoscrollService.html",[3,0.268,4,0.233,8,0.233,12,0.435,36,0.268,44,0.906,59,0.415,60,0.024,62,0.836,64,0.516,76,0.923,77,1.54,100,0.073,105,0.319,120,1.365,121,1.283,138,0.34,142,0.416,154,0.268,164,1.45,199,1.929,203,0.901,204,0.997,283,0.054,284,0.054,294,2.566,340,1.245,429,2.608,486,2.608,487,2.566,489,4.373,574,2.785,575,1.952,623,4.232,624,3.819,625,5.624,626,6.766,627,5.624,628,5.624,629,5.624,630,5.624,631,4.488,632,6.44,633,4.232,634,6.44,635,5.479,636,5.624,637,4.488,638,5.624,639,5.624,640,4.488,641,4.785,642,5.624,643,4.232,644,6.143,645,5.624,646,5.624,647,4.488,648,4.488,649,4.488,650,3.819,651,4.488,652,4.488,653,4.488,654,4.488,655,4.488,656,4.488,657,4.488]],["title/components/BoardComponent.html",[0,0.174,217,0.454]],["body/components/BoardComponent.html",[0,0.311,1,0.265,2,0.45,3,0.122,4,0.106,5,0.307,6,0.307,7,0.307,8,0.106,12,0.368,13,0.631,14,0.719,15,0.189,17,3.963,19,3.939,21,0.265,22,0.307,23,1.049,24,0.906,25,0.483,26,0.585,27,0.483,28,1.058,29,2.699,30,0.265,31,0.265,32,0.483,34,0.483,36,0.122,37,0.592,41,1.654,44,0.518,53,2.466,58,3.061,59,0.427,60,0.024,61,0.713,62,0.771,63,0.938,64,0.564,75,2.796,76,0.95,77,1.489,81,0.997,94,0.856,96,2.567,100,0.033,102,1.61,103,1.388,105,0.293,106,2.699,107,2.975,108,2.466,117,1.586,118,2.106,120,1.156,121,1.087,125,3.499,138,0.449,141,0.942,142,0.189,143,0.513,147,1.268,154,0.122,164,1.157,170,0.544,178,1.083,180,1.538,184,3.041,199,1.963,202,0.307,203,0.728,204,0.83,205,0.307,206,0.677,207,0.307,208,0.307,209,0.63,210,0.307,211,0.265,212,0.307,213,0.265,214,0.307,215,0.286,216,0.483,217,0.585,218,0.307,219,0.782,220,0.265,221,0.497,222,0.483,223,0.286,224,0.307,225,0.265,226,0.307,227,0.265,228,0.307,229,0.265,230,0.307,231,0.265,232,0.483,233,0.307,234,0.265,235,0.307,236,0.265,237,0.307,238,0.265,239,0.307,240,0.307,241,0.265,242,0.286,243,0.307,244,0.265,245,0.307,246,0.265,247,0.265,248,0.483,249,0.307,250,0.307,251,0.265,252,0.286,253,0.286,254,0.307,255,0.307,256,0.286,257,0.265,258,0.307,259,0.265,260,0.286,261,0.307,262,0.307,263,0.265,264,0.307,265,0.265,266,0.307,267,0.265,268,0.307,269,0.265,270,0.666,271,0.307,272,0.265,273,0.307,274,0.63,275,0.307,276,0.585,277,0.307,278,0.265,279,0.307,280,0.307,281,0.307,282,0.307,283,0.031,284,0.031,310,2.223,321,2.929,334,2.184,335,1.995,340,0.592,367,2.685,374,2.673,381,1.995,387,0.882,391,0.828,393,1.268,427,2.576,429,2.689,464,2.508,510,3.228,526,2.184,530,2.42,531,2.801,558,3.391,569,3.041,584,2.613,610,3.382,633,3.391,658,1.739,659,1.995,660,3.216,661,2.736,662,3.208,663,3.216,664,3.216,665,3.216,666,3.216,667,3.975,668,4.901,669,4.901,670,3.975,671,4.901,672,3.975,673,3.975,674,5.444,675,3.216,676,4.507,677,4.507,678,2.736,679,4.507,680,4.507,681,3.216,682,3.216,683,3.216,684,4.507,685,3.216,686,3.216,687,3.975,688,2.044,689,3.216,690,3.975,691,3.975,692,5.203,693,5.203,694,3.382,695,3.916,696,3.688,697,4.427,698,3.975,699,3.975,700,2.272,701,3.975,702,3.382,703,4.096,704,3.975,705,2.699,706,2.699,707,3.975,708,3.382,709,3.975,710,3.975,711,3.382,712,2.044,713,3.461,714,3.461,715,2.986,716,2.044,717,1.008,718,1.388,719,2.044,720,2.044,721,3.499,722,3.216,723,2.044,724,3.216,725,3.216,726,3.216,727,3.216,728,2.736,729,2.044,730,3.216,731,2.044,732,3.216,733,1.538,734,3.216,735,3.216,736,2.044,737,5.801,738,3.216,739,4.507,740,4.507,741,3.216,742,2.044,743,3.216,744,2.044,745,2.736,746,3.216,747,2.736,748,2.736,749,2.044,750,3.216,751,3.216,752,2.044,753,2.736,754,2.044,755,3.216,756,2.044,757,2.044,758,2.42,759,2.044,760,2.044,761,2.044,762,2.044,763,2.044,764,2.044,765,2.044,766,2.044,767,1.268,768,1.538,769,2.044,770,1.739,771,2.044,772,1.268,773,2.044,774,2.044,775,3.216,776,3.975,777,2.044,778,2.044,779,2.044,780,2.044,781,2.044,782,3.216,783,2.044,784,2.044,785,2.044,786,2.42,787,4.507]],["title/components/CloseBtnComponent.html",[0,0.174,31,0.454]],["body/components/CloseBtnComponent.html",[0,0.322,1,0.537,2,0.747,3,0.247,4,0.215,5,0.621,6,0.621,7,0.621,8,0.215,12,0.279,13,1.047,14,0.591,15,0.383,21,0.537,22,0.621,23,1.105,24,0.954,25,0.802,26,0.693,27,0.802,28,1.573,30,0.537,31,0.811,32,0.802,34,0.802,36,0.247,52,1.599,59,0.279,60,0.023,64,0.347,79,3.312,94,1.421,100,0.067,105,0.278,138,0.404,139,1.507,142,0.383,143,1.037,150,3.312,154,0.247,202,0.621,203,0.747,204,0.747,205,0.621,206,0.939,207,0.621,208,0.621,209,0.578,210,0.621,211,0.537,212,0.621,213,0.537,214,0.621,215,0.578,216,0.802,217,0.537,218,0.621,219,1.013,220,0.537,221,0.42,222,0.802,223,0.578,224,0.621,225,0.537,226,0.621,227,0.537,228,0.621,229,0.537,230,0.621,231,0.537,232,0.802,233,0.621,234,0.537,235,0.621,236,0.537,237,0.621,238,0.537,239,0.621,240,0.621,241,0.537,242,0.578,243,0.621,244,0.537,245,0.621,246,0.537,247,0.537,248,0.802,249,0.621,250,0.621,251,0.537,252,0.578,253,0.578,254,0.621,255,0.621,256,0.578,257,0.537,258,0.621,259,0.537,260,0.578,261,0.621,262,0.621,263,0.537,264,0.621,265,0.537,266,0.621,267,0.537,268,0.621,269,0.537,270,0.579,271,0.621,272,0.537,273,0.621,274,0.578,275,0.621,276,0.537,277,0.621,278,0.537,279,0.621,280,0.621,281,0.621,282,0.621,283,0.052,284,0.052,478,3.111,483,4.542,484,4.542,485,4.542,788,4.542,789,5.339,790,5.339,791,5.912,792,4.135]],["title/classes/Contact.html",[15,0.324,100,0.057]],["body/classes/Contact.html",[3,0.239,4,0.209,8,0.209,12,0.354,15,0.609,36,0.239,37,1.137,44,0.843,59,0.452,60,0.024,64,0.57,76,0.928,81,1.647,84,3.047,100,0.105,102,2.804,105,0.333,110,3.272,120,0.891,121,1.338,138,0.304,154,0.239,164,0.947,170,1.393,172,2.582,198,5.254,199,1.85,200,1.765,283,0.051,284,0.051,286,3.939,319,1.275,323,2.412,340,1.284,375,2.773,395,1.848,396,2.125,420,2.293,423,2.773,424,3.939,428,5.254,429,2.594,431,5.254,433,3.832,434,3.248,436,3.248,437,2.412,444,3.554,445,4.453,446,4.462,447,4.453,451,3.248,452,4.076,453,2.773,454,3.248,455,3.248,456,3.248,457,2.412,458,3.248,459,3.248,460,2.489,462,3.615,463,3.248,464,2.846,468,4.957,469,4.453,473,3.413,575,1.275,620,4.453,621,4.453,793,3.413,794,5.234,795,5.234,796,3.939,797,2.992,798,5.234,799,4.011,800,4.011,801,4.011,802,4.011,803,4.011,804,4.011,805,4.453,806,4.453,807,5.234,808,5.234,809,4.011,810,4.011,811,3.018,812,3.413]],["title/components/ContactListItemComponent.html",[0,0.174,220,0.454]],["body/components/ContactListItemComponent.html",[0,0.308,1,0.466,2,0.68,3,0.214,4,0.187,5,0.54,6,0.54,7,0.54,8,0.187,12,0.243,13,0.954,14,0.538,15,0.622,21,0.466,22,0.54,23,1.096,24,0.947,25,0.731,26,0.631,27,0.731,28,1.468,30,0.767,31,0.466,32,0.731,34,0.731,36,0.214,52,1.457,59,0.43,60,0.023,61,0.741,62,0.802,64,0.535,84,2.72,94,1.573,100,0.059,105,0.356,126,2.117,138,0.447,139,1.838,142,0.333,143,0.901,144,2.439,145,2.053,146,2.439,154,0.214,172,2.399,202,0.54,203,0.68,204,0.68,205,0.54,206,0.888,207,0.54,208,0.54,209,0.502,210,0.54,211,0.466,212,0.54,213,0.466,214,0.54,215,0.502,216,0.731,217,0.466,218,0.54,219,0.54,220,0.767,221,0.726,222,0.731,223,0.502,224,0.54,225,0.767,226,0.54,227,0.466,228,0.54,229,0.466,230,0.54,231,0.466,232,0.731,233,0.54,234,0.466,235,0.54,236,0.466,237,0.54,238,0.466,239,0.54,240,0.54,241,0.466,242,0.502,243,0.54,244,0.466,245,0.54,246,0.466,247,0.466,248,0.731,249,0.54,250,0.54,251,0.466,252,0.502,253,0.502,254,0.54,255,0.54,256,0.502,257,0.466,258,0.54,259,0.466,260,0.502,261,0.54,262,0.54,263,0.466,264,0.54,265,0.466,266,0.54,267,0.466,268,0.54,269,0.466,270,0.59,271,0.54,272,0.466,273,0.54,274,0.502,275,0.54,276,0.466,277,0.54,278,0.466,279,0.54,280,0.54,281,0.54,282,0.54,283,0.047,284,0.047,323,2.541,340,1.172,375,3.132,446,3.745,521,3.66,721,3.018,813,5.539,814,4.899,815,2.703,816,3.303,817,3.66,818,4.138,819,4.138,820,5.515,821,5.515,822,4.864,823,3.592,824,3.592,825,3.056,826,3.592,827,3.056,828,3.592,829,3.592,830,4.864]],["title/injectables/ContactsService.html",[301,2.376,486,1.417]],["body/injectables/ContactsService.html",[3,0.159,4,0.138,8,0.138,12,0.39,14,0.572,15,0.682,36,0.159,37,0.724,41,1.25,44,0.634,46,3.347,57,3.299,59,0.414,60,0.024,61,0.32,62,0.345,63,1.22,64,0.526,76,0.97,77,1.447,81,1.537,100,0.043,105,0.31,110,2.738,115,3.206,120,1.327,121,1.247,138,0.437,142,0.247,148,2.003,154,0.159,164,1.363,170,1.536,172,2.847,175,1.409,199,1.729,201,3.347,221,0.706,270,0.364,283,0.038,284,0.038,294,1.522,299,2.273,301,2.671,319,1.25,338,3.581,341,2.954,375,3.557,391,1.078,395,1.227,396,1.41,429,2.769,442,3.248,444,2.671,457,1.813,464,2.381,486,1.593,487,1.522,498,4.055,505,1.808,506,3.509,508,2.441,511,4.397,516,4.133,530,3.889,534,4.589,545,4.343,555,2.671,559,4.91,560,4.612,561,3.347,567,4.91,569,3.421,571,1.808,573,1.808,574,1.652,575,1.989,576,3.509,577,3.889,580,2.003,583,2.671,584,1.149,585,1.808,831,2.265,832,3.934,833,3.934,834,3.934,835,5.168,836,3.934,837,3.934,838,3.934,839,3.934,840,2.662,841,6.661,842,5.772,843,3.347,844,4.323,845,5.816,846,5.772,847,3.934,848,2.662,849,5.772,850,5.772,851,3.934,852,2.662,853,3.347,854,3.98,855,3.934,856,2.662,857,3.934,858,2.662,859,3.347,860,3.934,861,2.662,862,3.919,863,3.934,864,3.934,865,4.691,866,3.509,867,3.934,868,2.662,869,2.003,870,5.971,871,2.662,872,5.514,873,2.662,874,2.662,875,2.662,876,2.662,877,5.168,878,2.662,879,3.934,880,2.662,881,5.168,882,2.662,883,2.265,884,5.168,885,3.934,886,3.934,887,2.662,888,3.347,889,2.671,890,2.662,891,2.265,892,2.662]],["title/components/EmailComponent.html",[0,0.174,225,0.454]],["body/components/EmailComponent.html",[0,0.323,1,0.543,2,0.752,3,0.25,4,0.218,5,0.629,6,0.629,7,0.629,8,0.218,12,0.283,13,1.055,14,0.595,15,0.388,21,0.543,22,0.629,23,1.106,24,0.955,25,0.808,26,0.698,27,0.629,30,0.543,31,0.543,32,0.808,34,0.808,36,0.25,52,1.611,59,0.283,60,0.023,61,0.502,62,0.543,64,0.352,84,3.463,85,3.653,100,0.068,105,0.28,138,0.317,139,1.519,142,0.388,154,0.25,202,0.629,203,0.752,204,0.752,205,0.629,206,0.943,207,0.629,208,0.629,209,0.585,210,0.629,211,0.543,212,0.629,213,0.543,214,0.629,215,0.585,216,0.808,217,0.543,218,0.629,219,0.629,220,0.543,221,0.425,222,0.808,223,0.585,224,0.629,225,0.814,226,0.629,227,0.543,228,0.629,229,0.543,230,0.629,231,0.543,232,0.808,233,0.629,234,0.543,235,0.629,236,0.543,237,0.629,238,0.543,239,0.629,240,0.629,241,0.543,242,0.585,243,0.629,244,0.543,245,0.629,246,0.543,247,0.543,248,0.808,249,0.629,250,0.629,251,0.543,252,0.585,253,0.585,254,0.629,255,0.629,256,0.585,257,0.543,258,0.629,259,0.543,260,0.585,261,0.629,262,0.629,263,0.543,264,0.629,265,0.543,266,0.629,267,0.543,268,0.629,269,0.543,270,0.581,271,0.629,272,0.543,273,0.629,274,0.585,275,0.629,276,0.543,277,0.629,278,0.543,279,0.629,280,0.629,281,0.629,282,0.629,283,0.052,284,0.052,340,0.99,893,3.559,894,5.379,895,5.379,896,5.379,897,4.184]],["title/components/GreetingComponent.html",[0,0.174,227,0.454]],["body/components/GreetingComponent.html",[0,0.314,1,0.416,2,0.629,3,0.191,4,0.167,5,0.482,6,0.482,7,0.482,8,0.167,12,0.304,13,0.882,14,0.497,15,0.297,21,0.416,22,0.482,23,1.089,24,0.942,25,0.676,26,0.583,27,0.482,30,0.416,31,0.416,32,0.676,34,0.676,36,0.191,37,0.827,41,1.65,44,0.724,48,2.594,59,0.304,60,0.024,61,0.623,62,0.674,63,1.226,64,0.531,76,0.891,77,1.541,81,1.682,100,0.052,103,3.823,105,0.34,107,3.218,120,0.712,121,0.669,138,0.426,141,1.476,142,0.297,154,0.191,164,0.756,202,0.482,203,0.629,204,0.629,205,0.482,206,0.846,207,0.482,208,0.482,209,0.448,210,0.482,211,0.416,212,0.482,213,0.416,214,0.482,215,0.448,216,0.676,217,0.416,218,0.482,219,0.482,220,0.416,221,0.325,222,0.676,223,0.448,224,0.482,225,0.416,226,0.482,227,0.731,228,0.482,229,0.416,230,0.482,231,0.416,232,0.676,233,0.482,234,0.416,235,0.482,236,0.416,237,0.482,238,0.416,239,0.482,240,0.482,241,0.416,242,0.726,243,0.482,244,0.416,245,0.482,246,0.416,247,0.416,248,0.676,249,0.482,250,0.482,251,0.416,252,0.448,253,0.448,254,0.482,255,0.482,256,0.448,257,0.416,258,0.482,259,0.416,260,0.448,261,0.482,262,0.482,263,0.416,264,0.482,265,0.416,266,0.482,267,0.416,268,0.482,269,0.416,270,0.522,271,0.482,272,0.416,273,0.482,274,0.448,275,0.482,276,0.416,277,0.482,278,0.416,279,0.482,280,0.482,281,0.482,282,0.482,283,0.044,284,0.044,291,2.071,292,2.752,293,3.908,299,2.143,300,4.418,302,3.222,316,3.823,325,3.053,326,3.825,340,1.091,347,3.383,358,3.053,360,2.925,361,2.789,366,2.49,367,3.339,390,1.832,391,1.298,392,1.58,398,2.726,404,2.726,514,3.053,526,3.053,531,2.57,542,4.626,558,3.383,575,1.018,589,2.411,590,2.411,706,3.823,711,3.825,717,2.218,748,3.825,796,3.383,898,2.726,899,3.825,900,5.571,901,5.63,902,4.496,903,4.237,904,4.496,905,4.496,906,5.045,907,6.147,908,4.496,909,3.204,910,3.383,911,4.496,912,4.496,913,3.204,914,3.825,915,3.825,916,3.204,917,3.204,918,2.789,919,4.496,920,4.496,921,3.825,922,3.204,923,3.204,924,3.204,925,3.204,926,3.204,927,3.204,928,3.204,929,3.825,930,3.204,931,3.204,932,3.204,933,3.204,934,4.496]],["title/components/HeaderComponent.html",[0,0.174,229,0.454]],["body/components/HeaderComponent.html",[0,0.32,1,0.444,2,0.658,3,0.204,4,0.178,5,0.514,6,0.514,7,0.514,8,0.178,12,0.231,13,0.923,14,0.52,15,0.317,21,0.444,22,0.514,23,1.093,24,0.944,25,0.707,26,0.611,27,0.707,28,1.431,30,0.752,31,0.444,32,0.707,34,0.707,36,0.204,37,0.866,41,1.994,44,0.758,52,1.409,54,2.919,59,0.363,60,0.024,61,0.646,62,0.698,63,0.808,64,0.54,67,3.337,76,0.707,77,1.18,81,1.348,94,1.252,100,0.056,105,0.245,117,2.321,118,2.493,119,2.69,126,1.685,128,2.919,131,3.195,138,0.475,139,1.518,140,2.919,141,1.576,142,0.317,143,0.858,144,2.323,145,1.956,146,2.323,154,0.204,202,0.514,203,0.658,204,0.658,205,0.514,206,0.87,207,0.514,208,0.514,209,0.478,210,0.514,211,0.444,212,0.514,213,0.444,214,0.514,215,0.478,216,0.707,217,0.444,218,0.514,219,0.514,220,0.444,221,0.347,222,0.707,223,0.478,224,0.514,225,0.444,226,0.514,227,0.444,228,0.514,229,0.752,230,0.514,231,0.444,232,0.707,233,0.514,234,0.444,235,0.514,236,0.444,237,0.514,238,0.444,239,0.808,240,0.514,241,0.444,242,0.849,243,0.514,244,0.444,245,0.514,246,0.444,247,0.444,248,0.707,249,0.514,250,0.514,251,0.444,252,0.478,253,0.478,254,0.808,255,0.514,256,0.478,257,0.444,258,0.514,259,0.444,260,0.478,261,0.514,262,0.514,263,0.444,264,0.514,265,0.444,266,0.514,267,0.444,268,0.514,269,0.444,270,0.536,271,0.514,272,0.444,273,0.514,274,0.478,275,0.514,276,0.444,277,0.514,278,0.444,279,0.514,280,0.514,281,0.514,282,0.514,283,0.046,284,0.046,296,3.337,299,2.388,302,3.337,321,2.857,333,4.927,334,3.933,335,3.593,344,4.003,345,3.325,361,2.919,366,2.178,367,2.321,377,3.195,387,1.476,390,1.956,392,1.688,427,2.69,497,4.927,537,3.195,697,4.003,758,3.54,796,3.54,817,3.54,935,2.911,936,4.705,937,4.705,938,4.705,939,4.927,940,4.575,941,5.378,942,3.421,943,3.421,944,3.421,945,3.421,946,3.195,947,3.54,948,2.69,949,3.421,950,3.421,951,3.421,952,4.003,953,3.421,954,3.421,955,2.574,956,4.003,957,3.195,958,4.003,959,4.003,960,4.705,961,2.919,962,3.195]],["title/components/HeadlineOtherComponent.html",[0,0.174,231,0.454]],["body/components/HeadlineOtherComponent.html",[0,0.309,1,0.475,2,0.833,3,0.218,4,0.19,5,0.549,6,0.549,7,0.549,8,0.19,12,0.247,13,0.966,14,0.545,15,0.339,21,0.475,22,0.549,23,1.098,24,0.948,25,0.74,26,0.639,27,0.74,30,0.475,31,0.475,32,0.74,34,0.74,36,0.218,37,0.906,41,2.034,44,0.793,52,1.474,59,0.247,60,0.023,61,0.668,62,0.722,64,0.5,76,0.549,77,0.917,79,3.054,100,0.06,105,0.256,138,0.451,139,1.39,141,1.685,142,0.339,151,2.483,154,0.218,202,0.549,203,0.688,204,0.688,205,0.549,206,0.895,207,0.549,208,0.549,209,0.511,210,0.549,211,0.475,212,0.549,213,0.773,214,0.962,215,0.915,216,0.74,217,0.475,218,0.549,219,0.549,220,0.475,221,0.371,222,0.74,223,0.511,224,0.549,225,0.475,226,0.549,227,0.475,228,0.549,229,0.475,230,0.549,231,0.773,232,1.057,233,0.549,234,0.475,235,0.549,236,0.475,237,0.549,238,0.475,239,0.549,240,0.549,241,0.475,242,0.511,243,0.549,244,0.475,245,0.549,246,0.475,247,0.475,248,0.74,249,0.549,250,0.549,251,0.475,252,0.511,253,0.511,254,0.549,255,0.549,256,0.511,257,0.475,258,0.549,259,0.475,260,0.511,261,0.549,262,0.549,263,0.475,264,0.549,265,0.475,266,0.549,267,0.475,268,0.549,269,0.475,270,0.552,271,0.549,272,0.475,273,0.549,274,0.511,275,0.549,276,0.475,277,0.549,278,0.475,279,0.549,280,0.549,281,0.549,282,0.549,283,0.048,284,0.048,299,2.266,321,2.937,340,0.906,352,4.188,356,4.48,361,3.054,372,3.343,387,1.578,390,2.09,477,2.483,575,1.162,650,4.188,705,3.343,717,2.428,758,3.704,946,3.343,947,3.704,948,3.403,955,2.751,963,4.676,964,4.22,965,3.111,966,4.188,967,4.923,968,4.188,969,4.923,970,4.923,971,5.954,972,3.656,973,3.656,974,4.188,975,3.656,976,3.656,977,4.923,978,3.656,979,3.656]],["title/components/HeadlineSloganComponent.html",[0,0.174,234,0.454]],["body/components/HeadlineSloganComponent.html",[0,0.319,1,0.52,2,0.732,3,0.239,4,0.208,5,0.602,6,0.602,7,0.602,8,0.208,12,0.271,13,1.026,14,0.579,15,0.371,21,0.52,22,0.602,23,1.103,24,0.953,25,0.786,26,0.679,27,0.602,30,0.52,31,0.52,32,0.786,34,0.786,36,0.239,52,1.567,59,0.353,60,0.023,61,0.628,62,0.679,64,0.44,100,0.065,105,0.272,138,0.303,139,1.644,142,0.371,154,0.239,202,0.602,203,0.732,204,0.732,205,0.602,206,0.928,207,0.602,208,0.602,209,0.56,210,0.602,211,0.52,212,0.602,213,0.52,214,0.602,215,0.56,216,0.786,217,0.52,218,0.602,219,0.602,220,0.52,221,0.407,222,0.786,223,0.56,224,0.602,225,0.52,226,0.602,227,0.52,228,0.602,229,0.52,230,0.602,231,0.52,232,1.069,233,0.602,234,0.801,235,0.602,236,0.52,237,0.602,238,0.52,239,0.602,240,0.602,241,0.52,242,0.56,243,0.602,244,0.52,245,0.602,246,0.52,247,0.52,248,0.786,249,0.602,250,0.602,251,0.52,252,0.56,253,0.56,254,0.602,255,0.602,256,0.56,257,0.52,258,0.602,259,0.52,260,0.56,261,0.602,262,0.602,263,0.52,264,0.602,265,0.52,266,0.602,267,0.52,268,0.602,269,0.52,270,0.572,271,0.602,272,0.52,273,0.602,274,0.56,275,0.602,276,0.52,277,0.602,278,0.52,279,0.602,280,0.602,281,0.602,282,0.602,283,0.051,284,0.051,340,1.136,424,3.936,480,4.45,963,4.382,966,4.45,980,4.382,981,3.409,982,6.861,983,5.231,984,5.231,985,5.231,986,5.231,987,4.007,988,4.007]],["title/components/HelpComponent.html",[0,0.174,236,0.454]],["body/components/HelpComponent.html",[0,0.28,1,0.363,2,0.57,3,0.167,4,0.145,5,0.42,6,0.42,7,0.42,8,0.145,12,0.325,13,0.8,14,0.585,15,0.521,21,0.363,22,0.42,23,1.078,24,0.931,25,0.613,26,0.529,27,0.613,30,0.363,31,0.363,32,0.613,34,0.613,57,2.33,60,0.022,61,0.635,63,1.249,79,2.529,81,1.022,100,0.046,101,2.16,105,0.275,108,3.282,110,2.802,130,2.33,138,0.364,142,0.259,154,0.167,184,3.855,186,3.468,190,3.468,200,1.375,202,0.42,203,0.57,204,0.57,205,0.42,206,0.795,207,0.42,208,0.42,209,0.391,210,0.42,211,0.363,212,0.42,213,0.363,214,0.42,215,0.391,216,0.613,217,0.363,218,0.42,219,0.42,220,0.363,221,0.615,222,0.613,223,0.391,224,0.42,225,0.686,226,0.42,227,0.363,228,0.42,229,0.363,230,0.42,231,0.686,232,0.613,233,0.42,234,0.363,235,0.42,236,0.686,237,0.42,238,0.363,239,0.42,240,0.42,241,0.363,242,0.673,243,0.42,244,0.363,245,0.42,246,0.363,247,0.363,248,0.613,249,0.42,250,0.42,251,0.363,252,0.391,253,0.391,254,0.42,255,0.42,256,0.391,257,0.363,258,0.42,259,0.363,260,0.391,261,0.42,262,0.42,263,0.363,264,0.42,265,0.363,266,0.42,267,0.363,268,0.42,269,0.363,270,0.611,271,0.42,272,0.363,273,0.42,274,0.391,275,0.42,276,0.363,277,0.42,278,0.363,279,0.42,280,0.42,281,0.42,282,0.42,283,0.039,284,0.039,338,2.16,374,3.095,375,3.412,377,4.22,383,4.406,423,2.16,427,2.33,553,3.468,584,1.759,659,2.529,696,4.418,700,3.357,705,3.592,713,3.024,714,2.33,715,2.609,718,3.592,721,3.855,797,2.33,844,2.768,853,3.468,866,2.768,948,2.33,956,5.287,957,4.22,958,4.5,959,4.5,964,1.897,989,2.377,990,3.98,991,4.076,992,4.076,993,4.076,994,2.102,995,2.377,996,2.377,997,4.076,998,5.289,999,5.872,1000,2.794,1001,4.076,1002,4.076,1003,4.076,1004,5.289,1005,4.076,1006,3.468,1007,4.076,1008,3.468,1009,3.468,1010,3.468,1011,3.067,1012,3.468,1013,3.468,1014,3.468,1015,4.076,1016,4.076,1017,4.076,1018,4.076,1019,4.076,1020,4.076,1021,4.076,1022,4.5,1023,4.076,1024,4.076,1025,4.076,1026,4.076,1027,4.076,1028,4.076,1029,4.076,1030,5.289,1031,4.076,1032,4.076,1033,4.076,1034,4.076,1035,4.076,1036,3.468,1037,5.289,1038,3.468,1039,3.468,1040,3.468,1041,4.076,1042,5.289,1043,4.076,1044,4.076,1045,4.076,1046,3.468,1047,4.5,1048,3.468,1049,3.468,1050,3.468,1051,4.076,1052,3.468,1053,3.468,1054,5.289,1055,3.468,1056,2.794,1057,4.076,1058,4.076,1059,4.076,1060,4.076,1061,4.076,1062,3.468,1063,4.076,1064,5.289,1065,5.289,1066,3.067,1067,4.076,1068,6.599,1069,4.076,1070,2.794,1071,4.076,1072,4.076,1073,3.468,1074,4.076,1075,4.076,1076,4.076,1077,2.768,1078,2.33,1079,4.076,1080,4.076,1081,4.076,1082,4.076,1083,3.98,1084,4.076,1085,4.076,1086,4.076,1087,4.076,1088,5.872,1089,4.076,1090,4.076,1091,4.076,1092,3.067,1093,4.076,1094,4.076,1095,4.076,1096,4.076,1097,3.067,1098,4.076,1099,3.067,1100,3.468,1101,4.076,1102,4.076,1103,2.794,1104,4.076,1105,2.794,1106,2.794,1107,2.794,1108,2.794]],["title/components/LegalNoticeComponent.html",[0,0.174,238,0.454]],["body/components/LegalNoticeComponent.html",[0,0.278,1,0.356,2,0.562,3,0.164,4,0.143,5,0.412,6,0.412,7,0.412,8,0.143,12,0.185,13,0.789,14,0.445,15,0.441,21,0.356,22,0.412,23,1.077,24,0.93,25,0.604,26,0.522,27,0.604,30,0.356,31,0.356,32,0.604,34,0.604,60,0.022,100,0.045,102,1.628,105,0.209,108,2.495,118,2.131,138,0.36,142,0.254,154,0.164,202,0.412,203,0.562,204,0.562,205,0.412,206,0.788,207,0.412,208,0.412,209,0.384,210,0.412,211,0.356,212,0.412,213,0.356,214,0.412,215,0.384,216,0.604,217,0.356,218,0.412,219,0.412,220,0.356,221,0.278,222,0.604,223,0.384,224,0.412,225,0.68,226,0.412,227,0.356,228,0.412,229,0.356,230,0.412,231,0.68,232,0.604,233,0.412,234,0.356,235,0.412,236,0.356,237,0.412,238,0.68,239,0.998,240,0.412,241,0.356,242,0.384,243,0.412,244,0.356,245,0.412,246,0.356,247,0.356,248,0.604,249,0.715,250,0.412,251,0.356,252,0.384,253,0.384,254,0.412,255,0.412,256,0.384,257,0.356,258,0.412,259,0.356,260,0.384,261,0.412,262,0.412,263,0.356,264,0.412,265,0.356,266,0.412,267,0.356,268,0.412,269,0.356,270,0.486,271,0.412,272,0.356,273,0.412,274,0.384,275,0.412,276,0.356,277,0.412,278,0.356,279,0.412,280,0.412,281,0.412,282,0.412,283,0.039,284,0.039,345,2.778,374,1.853,383,4.329,694,3.421,696,3.026,700,3.758,706,4.198,717,1.983,797,2.299,816,4.198,862,2.731,866,2.731,957,2.731,961,3.836,964,1.862,990,3.026,994,2.064,995,2.333,996,2.333,1006,3.421,1008,5.259,1009,3.421,1010,3.421,1011,3.026,1012,3.421,1013,5.455,1014,5.455,1036,3.421,1038,4.46,1039,3.421,1040,3.421,1046,3.421,1047,3.421,1048,3.421,1049,3.421,1050,3.421,1052,3.421,1053,3.421,1055,3.421,1078,2.299,1092,3.026,1100,3.421,1109,2.333,1110,2.333,1111,2.333,1112,4.021,1113,4.021,1114,4.021,1115,4.021,1116,4.021,1117,4.021,1118,4.021,1119,4.021,1120,4.021,1121,4.021,1122,4.021,1123,4.021,1124,4.021,1125,4.021,1126,4.021,1127,4.021,1128,4.021,1129,5.834,1130,4.021,1131,6.182,1132,4.021,1133,5.243,1134,4.021,1135,5.243,1136,4.021,1137,4.021,1138,4.021,1139,4.021,1140,4.021,1141,6.182,1142,3.421,1143,4.46,1144,4.021,1145,4.021,1146,4.021,1147,4.021,1148,5.834,1149,5.243,1150,4.021,1151,5.243,1152,4.021,1153,5.834,1154,5.243,1155,4.021,1156,4.021,1157,4.021,1158,4.021,1159,4.021,1160,5.243,1161,5.243,1162,5.834,1163,5.243,1164,3.421,1165,4.021,1166,4.021,1167,4.021,1168,4.021,1169,4.021,1170,4.021,1171,4.021,1172,4.021,1173,4.021,1174,4.021,1175,4.021,1176,4.021,1177,4.021,1178,4.021,1179,4.021,1180,4.021,1181,4.021,1182,4.021,1183,4.021,1184,4.021,1185,4.021,1186,5.243,1187,4.021,1188,5.243,1189,4.021,1190,4.021,1191,4.021,1192,4.021,1193,5.243,1194,5.243,1195,4.021,1196,4.021,1197,4.021,1198,4.021,1199,4.021,1200,4.021,1201,4.021,1202,4.021,1203,4.021,1204,4.021,1205,4.021,1206,4.021,1207,5.834,1208,5.243,1209,4.021,1210,4.021,1211,4.021,1212,4.021,1213,4.021,1214,4.021,1215,4.021,1216,5.243,1217,3.421,1218,4.021,1219,4.021,1220,4.021,1221,4.021,1222,4.021,1223,4.021,1224,4.021,1225,4.021,1226,4.021,1227,4.021,1228,4.021,1229,4.021,1230,4.021,1231,4.021,1232,4.021,1233,4.021,1234,4.021,1235,4.021,1236,4.021,1237,4.021,1238,4.021,1239,4.021,1240,4.021,1241,3.421,1242,4.021,1243,4.021]],["title/components/LogInPageComponent.html",[0,0.174,241,0.454]],["body/components/LogInPageComponent.html",[0,0.335,1,0.444,2,0.658,3,0.204,4,0.178,5,0.514,6,0.514,7,0.514,8,0.178,12,0.231,14,0.52,15,0.317,17,3.593,21,0.444,22,0.514,23,1.093,24,0.944,25,0.707,26,0.752,27,0.707,28,1.431,30,0.444,31,0.444,32,0.707,34,0.707,36,0.204,37,0.866,44,0.758,48,2.669,53,2.919,59,0.318,60,0.024,61,0.565,62,0.611,64,0.487,75,3.593,76,0.707,77,1.18,81,1.18,94,1.252,100,0.056,105,0.245,126,1.225,138,0.438,142,0.317,143,0.858,154,0.204,178,1.813,202,0.514,203,0.658,204,0.658,205,0.514,206,0.87,207,0.514,208,0.514,209,0.478,210,0.514,211,0.444,212,0.514,213,0.444,214,0.514,215,0.478,216,0.707,217,0.444,218,0.514,219,0.514,220,0.444,221,0.347,222,0.707,223,0.478,224,0.514,225,0.444,226,0.514,227,0.444,228,0.514,229,0.444,230,0.514,231,0.444,232,0.707,233,0.514,234,0.444,235,0.514,236,0.444,237,0.514,238,0.444,239,0.808,240,0.514,241,0.752,242,0.991,243,0.514,244,0.444,245,0.514,246,0.444,247,0.444,248,0.707,249,0.514,250,0.514,251,0.444,252,0.478,253,0.478,254,0.808,255,0.514,256,0.81,257,0.814,258,0.514,259,0.444,260,0.478,261,0.514,262,0.514,263,0.444,264,0.514,265,0.444,266,0.514,267,0.444,268,0.514,269,0.444,270,0.536,271,0.514,272,0.444,273,0.514,274,0.478,275,0.514,276,0.444,277,0.514,278,0.444,279,0.514,280,0.514,281,0.514,282,0.514,283,0.046,284,0.046,291,2.168,292,2.849,296,3.337,383,2.919,387,1.476,423,2.493,495,3.54,914,4.003,918,4.122,947,3.54,948,3.587,961,2.919,962,3.195,974,4.003,1244,5.166,1245,5.166,1246,2.911,1247,4.705,1248,4.705,1249,4.705,1250,5.792,1251,4.705,1252,4.705,1253,4.705,1254,4.705,1255,5.378,1256,5.378,1257,5.792,1258,3.421,1259,4.705,1260,4.705,1261,4.705,1262,5.378,1263,4.705,1264,3.421,1265,4.705,1266,3.54,1267,6.428,1268,3.421,1269,3.421,1270,2.911,1271,3.421,1272,3.421,1273,5.378,1274,4.705]],["title/components/MenuComponent.html",[0,0.174,244,0.454]],["body/components/MenuComponent.html",[0,0.314,1,0.497,2,0.71,3,0.229,4,0.199,5,0.575,6,0.575,7,0.575,8,0.199,12,0.343,13,0.996,14,0.671,15,0.355,21,0.497,22,0.575,23,1.101,24,0.95,25,0.763,26,0.659,27,0.763,28,1.516,30,0.497,31,0.497,32,0.763,34,0.763,36,0.229,44,0.818,59,0.259,60,0.023,64,0.427,76,0.763,81,1.273,100,0.063,105,0.296,120,0.851,121,0.8,138,0.431,142,0.355,143,0.96,154,0.229,164,0.904,170,1.019,200,1.712,202,0.575,203,0.71,204,0.71,205,0.575,206,0.912,207,0.575,208,0.575,209,0.536,210,0.575,211,0.497,212,0.575,213,0.497,214,0.575,215,0.536,216,0.763,217,0.497,218,0.575,219,0.575,220,0.497,221,0.389,222,0.763,223,0.536,224,0.575,225,0.497,226,0.575,227,0.497,228,0.575,229,0.497,230,0.575,231,0.497,232,0.763,233,0.575,234,0.497,235,0.575,236,0.497,237,0.575,238,0.497,239,0.856,240,0.575,241,0.497,242,0.536,243,0.575,244,0.787,245,0.575,246,0.497,247,0.497,248,0.763,249,0.575,250,0.575,251,0.497,252,0.536,253,0.536,254,0.856,255,0.575,256,0.536,257,0.497,258,0.575,259,0.497,260,0.536,261,0.575,262,0.575,263,0.497,264,0.575,265,0.497,266,0.575,267,0.497,268,0.575,269,0.497,270,0.601,271,0.575,272,0.497,273,0.575,274,0.536,275,0.575,276,0.497,277,0.575,278,0.497,279,0.575,280,0.575,281,0.575,282,0.575,283,0.049,284,0.049,296,3.534,314,5.16,319,1.217,320,2.6,321,3.458,323,2.795,335,3.763,338,3.214,339,3.82,341,2.902,356,3.82,372,3.448,374,2.339,375,2.69,387,1.653,397,2.881,416,3.258,961,3.15,962,3.448,1275,3.258,1276,5.077,1277,5.077,1278,5.077,1279,4.319,1280,5.077,1281,5.077,1282,3.829,1283,3.829]],["title/components/PasswordIconComponent.html",[0,0.174,246,0.454]],["body/components/PasswordIconComponent.html",[0,0.319,1,0.52,2,0.732,3,0.239,4,0.208,5,0.602,6,0.602,7,0.602,8,0.208,12,0.271,13,1.026,14,0.579,15,0.371,21,0.52,22,0.602,23,1.103,24,0.953,25,0.786,26,0.679,27,0.786,28,1.55,30,0.52,31,0.52,32,0.786,34,0.786,36,0.239,52,1.567,59,0.271,60,0.023,61,0.769,62,0.52,64,0.337,100,0.065,105,0.272,130,3.661,138,0.396,139,1.854,142,0.371,143,1.005,154,0.239,202,0.602,203,0.732,204,0.732,205,0.602,206,0.928,207,0.602,208,0.602,209,0.56,210,0.602,211,0.52,212,0.602,213,0.52,214,0.602,215,0.56,216,0.786,217,0.52,218,0.602,219,0.602,220,0.52,221,0.407,222,0.786,223,0.56,224,0.602,225,0.52,226,0.602,227,0.52,228,0.602,229,0.52,230,0.602,231,0.52,232,0.786,233,0.602,234,0.52,235,0.602,236,0.52,237,0.602,238,0.52,239,0.602,240,0.602,241,0.52,242,0.56,243,0.602,244,0.52,245,0.602,246,0.801,247,0.905,248,0.786,249,0.602,250,0.602,251,0.52,252,0.56,253,0.56,254,0.602,255,0.602,256,0.56,257,0.52,258,0.602,259,0.52,260,0.56,261,0.602,262,0.602,263,0.52,264,0.602,265,0.52,266,0.602,267,0.52,268,0.602,269,0.52,270,0.572,271,0.602,272,0.52,273,0.602,274,0.56,275,0.602,276,0.52,277,0.602,278,0.52,279,0.602,280,0.602,281,0.602,282,0.602,283,0.051,284,0.051,1284,4.45,1285,3.936,1286,3.015,1287,5.252,1288,5.231,1289,4.45,1290,5.231,1291,4.45,1292,4.45,1293,4.45,1294,4.45,1295,4.45,1296,3.936,1297,4.007]],["title/components/PersonBadgeComponent.html",[0,0.174,30,0.454]],["body/components/PersonBadgeComponent.html",[0,0.307,1,0.466,2,0.68,3,0.214,4,0.187,5,0.539,6,0.539,7,0.539,8,0.187,12,0.243,13,0.954,14,0.538,15,0.332,21,0.466,22,0.539,23,1.096,24,0.947,25,0.731,26,0.631,27,0.731,28,1.467,30,0.767,31,0.466,32,0.731,34,0.731,36,0.214,44,0.783,52,1.456,59,0.417,60,0.024,61,0.584,62,0.631,64,0.535,76,0.731,94,1.572,100,0.059,105,0.338,121,1.016,138,0.368,139,1.797,142,0.332,143,0.9,145,3.721,154,0.214,170,0.955,175,1.741,202,0.539,203,0.68,204,0.68,205,0.539,206,0.888,207,0.539,208,0.539,209,0.502,210,0.539,211,0.466,212,0.539,213,0.466,214,0.539,215,0.502,216,0.731,217,0.466,218,0.539,219,0.539,220,0.466,221,0.364,222,0.731,223,0.502,224,0.539,225,0.466,226,0.539,227,0.466,228,0.539,229,0.466,230,0.539,231,0.466,232,0.731,233,0.539,234,0.466,235,0.539,236,0.466,237,0.539,238,0.466,239,0.539,240,0.539,241,0.466,242,0.502,243,0.539,244,0.466,245,0.539,246,0.466,247,0.466,248,0.731,249,0.978,250,0.539,251,0.466,252,0.502,253,0.502,254,0.539,255,0.539,256,0.502,257,0.466,258,0.539,259,0.466,260,0.502,261,0.539,262,0.539,263,0.466,264,0.539,265,0.466,266,0.539,267,0.466,268,0.539,269,0.466,270,0.547,271,0.539,272,0.466,273,0.539,274,0.502,275,0.539,276,0.466,277,0.539,278,0.466,279,0.539,280,0.539,281,0.539,282,0.539,283,0.047,284,0.047,302,3.42,330,4.136,340,1.136,446,4.193,575,1.545,812,4.136,817,4.446,1073,4.136,1292,4.136,1298,5.538,1299,3.053,1300,4.861,1301,4.861,1302,6.366,1303,4.861,1304,3.658,1305,4.861,1306,4.861,1307,4.861,1308,4.861,1309,6.366,1310,5.513,1311,5.513,1312,3.589,1313,3.589,1314,3.589,1315,3.589,1316,4.861,1317,3.589,1318,3.589,1319,5.513,1320,3.589,1321,3.589,1322,3.589,1323,3.589,1324,3.589,1325,4.136,1326,4.861]],["title/components/PrioIconComponent.html",[0,0.174,251,0.454]],["body/components/PrioIconComponent.html",[0,0.317,1,0.51,2,0.722,3,0.234,4,0.204,5,0.59,6,0.59,7,0.59,8,0.204,12,0.265,13,1.013,14,0.571,15,0.364,21,0.51,22,0.59,23,1.102,24,0.952,25,0.776,26,0.67,27,0.59,30,0.51,31,0.51,32,0.776,34,0.776,36,0.234,52,1.546,59,0.265,60,0.024,61,0.471,62,0.51,64,0.33,100,0.064,105,0.268,117,2.546,138,0.297,139,1.457,142,0.364,154,0.234,202,0.59,203,0.722,204,0.722,205,0.59,206,0.92,207,0.59,208,0.59,209,0.549,210,0.59,211,0.51,212,0.59,213,0.51,214,0.59,215,0.549,216,0.776,217,0.51,218,0.59,219,0.59,220,0.51,221,0.398,222,0.776,223,0.549,224,0.59,225,0.51,226,0.59,227,0.51,228,0.59,229,0.51,230,0.59,231,0.51,232,0.776,233,0.59,234,0.51,235,0.59,236,0.51,237,0.59,238,0.51,239,0.59,240,0.59,241,0.51,242,0.549,243,0.59,244,0.51,245,0.59,246,0.51,247,0.51,248,0.776,249,0.59,250,0.59,251,0.795,252,0.965,253,0.549,254,0.59,255,0.59,256,0.549,257,0.51,258,0.59,259,0.51,260,0.549,261,0.59,262,0.59,263,0.51,264,0.59,265,0.51,266,0.59,267,0.51,268,0.59,269,0.51,270,0.567,271,0.59,272,0.51,273,0.59,274,0.549,275,0.59,276,0.51,277,0.59,278,0.51,279,0.59,280,0.59,281,0.59,282,0.59,283,0.05,284,0.05,340,0.722,1083,3.884,1286,2.954,1287,5.211,1291,5.211,1293,4.391,1294,4.391,1295,4.391,1327,4.391,1328,3.505,1329,4.609,1330,5.161,1331,5.161,1332,4.159,1333,5.211,1334,5.211,1335,3.926,1336,6.531]],["title/components/ResetPasswordComponent.html",[0,0.174,259,0.454]],["body/components/ResetPasswordComponent.html",[0,0.274,1,0.273,2,0.46,3,0.126,4,0.109,5,0.316,6,0.316,7,0.316,8,0.109,12,0.372,13,0.646,14,0.364,15,0.195,17,4.087,21,0.273,22,0.316,23,1.052,24,0.908,25,0.495,26,0.526,27,0.495,28,1.078,29,2.751,30,0.273,31,0.273,32,0.495,34,0.495,36,0.126,37,0.606,39,3.446,41,1.287,44,0.53,48,2.11,49,2.8,53,2.042,59,0.456,60,0.024,61,0.661,62,0.792,63,0.777,64,0.557,76,0.945,77,1.321,94,1.516,95,2.81,96,2.259,100,0.034,105,0.304,111,2.8,112,4.981,114,3.897,115,2.842,117,1.623,119,2.618,120,1.301,121,1.15,126,1.178,128,2.842,138,0.431,139,1.831,142,0.195,143,0.528,147,1.306,154,0.126,164,1.244,165,1.791,166,1.791,170,1.219,175,2.144,178,1.744,202,0.316,203,0.737,204,0.867,205,0.316,206,0.688,207,0.316,208,0.316,209,0.294,210,0.316,211,0.273,212,0.316,213,0.273,214,0.316,215,0.294,216,0.495,217,0.273,218,0.316,219,0.316,220,0.273,221,0.214,222,0.495,223,0.294,224,0.316,225,0.273,226,0.316,227,0.273,228,0.316,229,0.273,230,0.316,231,0.273,232,0.495,233,0.316,234,0.273,235,0.316,236,0.273,237,0.316,238,0.273,239,0.609,240,0.316,241,0.273,242,0.294,243,0.316,244,0.273,245,0.316,246,0.594,247,0.929,248,0.495,249,0.316,250,0.316,251,0.273,252,0.294,253,0.294,254,0.609,255,0.316,256,0.294,257,0.76,258,0.316,259,0.594,260,0.899,261,0.316,262,0.316,263,0.273,264,0.316,265,0.273,266,0.316,267,0.273,268,0.316,269,0.273,270,0.424,271,0.316,272,0.273,273,0.316,274,0.294,275,0.316,276,0.273,277,0.316,278,0.594,279,0.609,280,0.609,281,0.316,282,0.316,283,0.032,284,0.032,291,1.516,292,2.146,296,2.513,299,2.095,319,1.046,320,1.43,321,2.599,338,1.744,339,3.739,340,0.843,360,1.998,367,2.259,387,0.909,390,1.203,391,0.853,442,1.115,444,2.235,495,2.476,513,4.405,539,2.8,635,3.897,733,2.476,753,2.8,816,2.235,955,1.584,961,2.042,962,2.235,1092,2.476,1097,2.476,1285,1.584,1289,5.347,1296,4.591,1337,5.676,1338,5.676,1339,1.791,1340,3.291,1341,3.291,1342,3.291,1343,3.291,1344,4.969,1345,4.051,1346,4.051,1347,4.051,1348,4.051,1349,4.051,1350,4.051,1351,5.268,1352,3.291,1353,3.291,1354,3.291,1355,3.291,1356,3.291,1357,4.58,1358,4.58,1359,3.291,1360,2.105,1361,4.58,1362,4.58,1363,3.291,1364,5.988,1365,3.291,1366,4.683,1367,2.105,1368,4.58,1369,2.8,1370,3.291,1371,3.291,1372,4.981,1373,2.105,1374,3.897,1375,3.291,1376,3.291,1377,3.291,1378,2.105,1379,3.291,1380,4.58,1381,2.105,1382,3.291,1383,2.105,1384,3.291,1385,3.291,1386,2.105,1387,2.8,1388,3.291,1389,3.291,1390,2.105,1391,3.291,1392,2.8,1393,3.291,1394,2.8,1395,2.105,1396,3.291,1397,3.291,1398,2.105,1399,3.291,1400,2.105,1401,3.291,1402,2.105,1403,2.105,1404,3.291,1405,2.105,1406,2.105,1407,2.105,1408,2.105,1409,1.791,1410,2.105,1411,1.584,1412,2.105,1413,1.584,1414,2.105,1415,2.105,1416,2.105,1417,4.051,1418,2.105,1419,2.105,1420,2.105,1421,2.105,1422,2.105,1423,2.105,1424,2.105,1425,2.105,1426,2.105,1427,2.105,1428,2.105,1429,1.791,1430,1.791,1431,1.791,1432,2.105,1433,2.105,1434,2.105,1435,2.105,1436,2.105,1437,2.105,1438,2.105,1439,4.051,1440,2.105,1441,2.105,1442,2.105,1443,2.105,1444,2.105,1445,2.105,1446,2.105,1447,2.105,1448,3.291,1449,3.291,1450,3.291,1451,3.291,1452,3.291,1453,3.291,1454,3.291,1455,3.291,1456,2.8,1457,3.291,1458,3.291,1459,2.105,1460,2.105,1461,2.105,1462,2.105]],["title/components/SlideComponent.html",[0,0.174,21,0.454]],["body/components/SlideComponent.html",[0,0.349,1,0.464,2,0.678,3,0.213,4,0.186,5,0.537,6,0.537,7,0.537,8,0.186,12,0.242,14,0.536,15,0.331,18,3.649,19,3.293,21,0.766,22,0.537,23,1.096,24,0.947,25,0.729,26,0.766,27,0.537,30,0.464,31,0.464,32,0.729,34,0.729,36,0.213,37,0.892,43,4.64,44,0.781,48,2.718,51,4.439,54,3.009,58,4.763,59,0.328,60,0.023,61,0.429,62,0.464,63,0.844,64,0.496,67,3.414,76,0.729,77,1.379,91,4.125,94,1.29,100,0.09,101,2.569,103,3.293,105,0.252,118,2.569,119,3.372,128,3.009,129,3.649,130,3.372,131,3.293,138,0.271,140,3.009,142,0.331,154,0.213,177,2.691,178,1.894,202,0.537,203,0.678,204,0.678,205,0.537,206,0.887,207,0.537,208,0.537,209,0.5,210,0.537,211,0.464,212,0.537,213,0.464,214,0.537,215,0.5,216,0.729,217,0.464,218,0.537,219,0.537,220,0.464,221,0.363,222,0.729,223,0.5,224,0.537,225,0.464,226,0.537,227,0.464,228,0.537,229,0.464,230,0.537,231,0.464,232,0.729,233,0.537,234,0.464,235,0.537,236,0.464,237,0.537,238,0.464,239,0.537,240,0.537,241,0.464,242,0.5,243,0.537,244,0.464,245,0.537,246,0.464,247,0.464,248,0.729,249,0.537,250,0.537,251,0.464,252,0.5,253,0.5,254,0.537,255,0.537,256,0.5,257,0.464,258,0.537,259,0.464,260,0.5,261,0.537,262,0.537,263,0.464,264,0.537,265,0.464,266,0.537,267,0.464,268,0.537,269,0.464,270,0.546,271,0.537,272,0.464,273,0.537,274,0.5,275,0.537,276,0.464,277,0.537,278,0.464,279,0.537,280,0.537,281,0.537,282,0.537,291,2.234,292,2.915,345,2.569,464,1.648,531,2.772,700,2.772,703,3.649,717,2.392,918,3.009,921,5.019,990,3.649,1022,4.125,1097,4.439,1463,3.042,1464,5.019,1465,4.125,1466,4.849,1467,4.849,1468,4.849,1469,4.849,1470,5.899,1471,4.849,1472,4.849,1473,4.125,1474,4.849,1475,4.849,1476,4.849,1477,3.576,1478,3.576,1479,4.849,1480,3.576,1481,3.576,1482,5.502,1483,3.576]],["title/components/StatsItemComponent.html",[0,0.174,263,0.454]],["body/components/StatsItemComponent.html",[0,0.306,1,0.461,2,0.675,3,0.212,4,0.185,5,0.534,6,0.534,7,0.534,8,0.185,12,0.326,13,0.947,14,0.534,15,0.329,21,0.461,22,0.534,23,1.096,24,0.946,25,0.726,26,0.627,27,0.726,28,1.459,30,0.461,31,0.461,32,0.726,34,0.726,36,0.212,44,0.778,52,1.446,59,0.398,60,0.024,61,0.658,62,0.857,64,0.517,76,0.534,77,0.891,100,0.058,105,0.343,120,0.789,121,0.742,138,0.415,139,1.661,142,0.329,143,0.891,154,0.212,164,0.839,175,1.729,199,1.446,200,1.628,202,0.534,203,0.675,204,0.675,205,0.534,206,0.884,207,0.534,208,0.534,209,0.497,210,0.534,211,0.461,212,0.534,213,0.461,214,0.534,215,0.497,216,0.726,217,0.461,218,0.534,219,0.534,220,0.461,221,0.361,222,0.726,223,0.497,224,0.534,225,0.461,226,0.534,227,0.461,228,0.534,229,0.461,230,0.534,231,0.461,232,0.726,233,0.534,234,0.461,235,0.534,236,0.461,237,0.534,238,0.461,239,0.534,240,0.534,241,0.461,242,0.497,243,0.534,244,0.461,245,0.534,246,0.461,247,0.461,248,0.726,249,0.534,250,0.534,251,0.461,252,0.497,253,0.497,254,0.534,255,0.534,256,0.497,257,0.461,258,0.534,259,0.461,260,0.497,261,0.534,262,0.534,263,0.764,264,0.976,265,0.461,266,0.534,267,0.461,268,0.534,269,0.461,270,0.588,271,0.534,272,0.461,273,0.534,274,0.497,275,0.534,276,0.461,277,0.534,278,0.461,279,0.534,280,0.534,281,0.534,282,0.534,283,0.047,284,0.047,319,1.129,320,2.413,321,3.372,323,2.711,340,1.168,374,2.225,387,1.533,397,2.673,521,4.427,815,2.673,818,4.107,819,4.107,825,4.107,827,3.023,946,3.278,948,3.363,1325,4.107,1332,3.278,1484,5.399,1485,4.776,1486,4.828,1487,4.828,1488,4.828,1489,5.884,1490,5.524,1491,3.553,1492,3.553,1493,3.553,1494,4.828,1495,3.553,1496,3.553,1497,3.553,1498,4.828,1499,3.553,1500,3.553,1501,3.553]],["title/classes/Subtask.html",[100,0.057,1502,1.854]],["body/classes/Subtask.html",[3,0.27,4,0.235,8,0.235,12,0.382,36,0.27,37,1.188,44,0.91,59,0.458,60,0.024,64,0.57,76,0.849,100,0.101,102,2.815,105,0.346,120,1.004,121,0.944,154,0.27,164,1.067,170,1.203,199,1.934,200,1.905,270,0.419,283,0.055,284,0.055,319,1.436,323,2.603,340,1.04,420,2.584,423,2.395,429,2.496,433,4.005,434,3.505,436,3.505,437,2.603,451,3.505,452,4.206,453,2.993,454,3.505,455,3.505,456,3.505,457,2.603,458,3.505,459,3.505,460,2.804,462,3.823,463,3.505,464,2.84,575,1.436,662,3.184,715,2.787,805,4.806,806,4.806,811,3.401,1502,3.265,1503,3.845,1504,3.845,1505,6.162,1506,5.649,1507,4.52,1508,4.52,1509,4.52,1510,4.52,1511,5.649,1512,5.649,1513,4.806,1514,4.806]],["title/components/SubtaskComponent.html",[0,0.174,265,0.454]],["body/components/SubtaskComponent.html",[0,0.321,1,0.364,2,0.572,3,0.167,4,0.146,5,0.421,6,0.421,7,0.421,8,0.146,12,0.276,13,0.802,14,0.452,15,0.26,16,3.598,17,3.287,21,0.364,22,0.421,23,1.078,24,0.931,25,0.614,26,0.626,27,0.614,28,1.283,29,3.274,30,0.364,31,0.364,32,0.614,34,0.614,36,0.167,37,0.752,41,1.532,44,0.658,45,4.424,48,2.441,52,1.224,54,2.535,57,2.756,59,0.42,60,0.024,61,0.676,62,0.731,63,1.469,64,0.569,67,3.494,76,0.912,77,1.522,94,1.087,100,0.046,101,2.165,105,0.34,106,4.434,107,3.029,118,3.115,119,2.336,120,0.623,121,0.586,126,1.727,138,0.426,139,1.66,140,2.992,142,0.26,143,0.703,147,1.74,154,0.167,164,0.662,175,1.004,178,1.486,182,2.11,202,0.421,203,0.572,204,0.741,205,0.421,206,0.796,207,0.421,208,0.421,209,0.392,210,0.421,211,0.364,212,0.421,213,0.364,214,0.421,215,0.392,216,0.614,217,0.364,218,0.421,219,0.421,220,0.364,221,0.285,222,0.614,223,0.392,224,0.421,225,0.364,226,0.421,227,0.364,228,0.421,229,0.364,230,0.421,231,0.364,232,0.614,233,0.421,234,0.364,235,0.421,236,0.364,237,0.421,238,0.364,239,0.421,240,0.421,241,0.364,242,0.392,243,0.421,244,0.364,245,0.421,246,0.364,247,0.364,248,0.614,249,0.421,250,0.421,251,0.364,252,0.392,253,0.392,254,0.421,255,0.421,256,0.392,257,0.364,258,0.421,259,0.364,260,0.392,261,0.421,262,0.421,263,0.364,264,0.421,265,0.688,266,0.421,267,0.364,268,0.421,269,0.364,270,0.618,271,0.421,272,0.364,273,0.421,274,0.392,275,0.421,276,0.364,277,0.421,278,0.364,279,0.421,280,0.421,281,0.421,282,0.421,283,0.04,284,0.04,286,3.075,291,1.883,292,2.555,316,3.598,340,0.752,360,2.378,391,1.136,568,3.477,572,4.238,575,0.891,662,2.016,705,2.775,708,4.508,733,2.11,1366,2.386,1369,3.477,1372,4.102,1409,2.386,1429,2.386,1430,2.386,1431,2.386,1456,4.102,1502,3.63,1515,5.796,1516,2.386,1517,4.087,1518,4.087,1519,4.087,1520,4.087,1521,4.087,1522,4.087,1523,4.822,1524,4.822,1525,4.822,1526,4.087,1527,3.987,1528,5.298,1529,4.822,1530,4.822,1531,2.804,1532,2.804,1533,2.804,1534,2.804,1535,2.804,1536,4.087,1537,4.087,1538,2.804,1539,4.087,1540,2.804,1541,4.087,1542,2.804,1543,2.804,1544,4.087,1545,5.298,1546,4.087,1547,5.298,1548,2.804,1549,4.087,1550,3.477,1551,2.804,1552,4.087,1553,4.087,1554,2.804,1555,4.087,1556,4.087,1557,3.477,1558,4.087,1559,3.477,1560,2.804,1561,4.087,1562,2.804,1563,2.804,1564,2.804,1565,2.386,1566,2.804,1567,2.804,1568,4.822,1569,4.822,1570,2.804,1571,4.822,1572,2.804,1573,4.087,1574,2.804,1575,2.804,1576,2.804,1577,2.804,1578,2.804,1579,4.087,1580,2.804,1581,4.087,1582,2.804]],["title/components/SummaryComponent.html",[0,0.174,267,0.454]],["body/components/SummaryComponent.html",[0,0.276,1,0.349,2,0.554,3,0.16,4,0.14,5,0.404,6,0.404,7,0.404,8,0.14,12,0.318,13,1.018,14,0.438,15,0.249,21,0.349,22,0.404,23,1.075,24,0.928,25,0.595,26,0.514,27,0.595,28,1.251,30,0.349,31,0.349,32,0.595,34,0.595,36,0.16,37,0.729,41,1.84,44,0.638,59,0.318,60,0.024,61,0.565,62,0.814,63,0.634,64,0.55,75,2.457,76,0.994,77,0.993,81,0.993,100,0.044,105,0.32,107,2.263,120,0.88,121,0.827,125,2.457,138,0.465,141,1.238,142,0.249,143,0.673,154,0.16,164,0.935,170,1.669,175,1.684,184,4.247,199,1.734,200,1.335,202,0.404,203,0.554,204,0.554,205,0.404,206,0.78,207,0.404,208,0.404,209,0.376,210,0.404,211,0.349,212,0.404,213,0.349,214,0.404,215,0.376,216,0.595,217,0.349,218,0.404,219,0.404,220,0.349,221,0.273,222,0.595,223,0.376,224,0.404,225,0.349,226,0.404,227,0.674,228,0.404,229,0.349,230,0.404,231,0.349,232,0.595,233,0.404,234,0.674,235,0.404,236,0.349,237,0.404,238,0.349,239,0.404,240,0.404,241,0.349,242,0.658,243,0.404,244,0.349,245,0.404,246,0.349,247,0.349,248,0.595,249,0.404,250,0.404,251,0.349,252,0.376,253,0.376,254,0.404,255,0.404,256,0.376,257,0.349,258,0.404,259,0.349,260,0.376,261,0.404,262,0.404,263,0.674,264,0.595,265,0.349,266,0.404,267,0.674,268,0.404,269,0.349,270,0.618,271,0.404,272,0.349,273,0.404,274,0.376,275,0.404,276,0.349,277,0.404,278,0.349,279,0.404,280,0.404,281,0.404,282,0.404,283,0.038,284,0.038,291,1.825,293,3.539,299,1.975,310,2.56,316,3.525,318,4.416,319,1.494,324,3.369,340,1.217,345,2.098,347,2.98,358,2.689,360,2.56,361,2.457,367,2.954,372,3.525,374,2.392,381,2.457,390,1.535,393,1.666,399,2.285,453,2.098,531,2.263,575,1.759,584,2.03,602,3.369,662,2.856,713,2.688,714,2.688,715,2.32,717,1.953,767,1.666,889,2.689,899,3.369,900,4.416,903,2.98,906,4.001,910,2.98,915,3.369,929,2.285,980,2.021,994,2.021,1077,4.173,1078,2.688,1083,2.98,1241,2.285,1279,3.369,1329,3.906,1332,3.758,1485,2.021,1490,3.369,1583,2.285,1584,3.96,1585,4.416,1586,3.96,1587,3.96,1588,3.96,1589,3.96,1590,3.96,1591,4.703,1592,3.369,1593,5.19,1594,5.19,1595,5.19,1596,3.96,1597,3.96,1598,3.369,1599,2.686,1600,5.228,1601,3.525,1602,2.686,1603,5.19,1604,2.686,1605,3.96,1606,2.686,1607,2.686,1608,3.96,1609,2.686,1610,3.96,1611,4.416,1612,2.686,1613,3.96,1614,2.98,1615,3.96,1616,2.686,1617,2.686,1618,2.686,1619,2.285,1620,2.686,1621,2.686,1622,3.96,1623,2.686,1624,2.285,1625,2.686,1626,2.686,1627,2.686,1628,2.686,1629,3.96,1630,2.686,1631,2.686,1632,2.686,1633,2.686,1634,2.686,1635,2.686,1636,2.686,1637,2.686,1638,2.686,1639,2.686,1640,2.686,1641,2.686,1642,2.686,1643,2.686,1644,2.686,1645,2.686,1646,2.686,1647,2.686,1648,2.686,1649,2.686,1650,2.686,1651,2.686,1652,3.369,1653,2.686,1654,2.686]],["title/classes/Task.html",[100,0.057,270,0.324]],["body/classes/Task.html",[3,0.196,4,0.171,8,0.171,12,0.419,36,0.196,37,1.048,44,0.738,59,0.463,60,0.024,61,0.719,62,0.684,64,0.58,76,0.932,81,1.652,94,1.219,95,2.954,96,2.259,100,0.086,102,2.627,105,0.238,120,1.018,121,1.19,126,1.179,138,0.347,154,0.196,164,1.081,170,1.219,172,2.81,175,1.179,199,1.943,200,1.545,252,0.797,270,0.61,283,0.044,284,0.044,311,4.846,319,1.046,323,2.111,340,1.261,366,2.425,392,1.623,420,1.881,423,2.427,429,2.134,433,3.534,434,2.842,436,2.842,437,2.111,451,2.842,452,3.847,453,3.285,454,2.842,455,2.842,456,2.842,457,2.111,458,2.842,459,2.842,460,2.042,462,3.269,463,2.842,464,2.111,575,1.81,584,1.977,662,2.81,695,3.447,713,2.618,714,2.618,715,2.259,717,2.259,747,3.897,811,2.476,903,2.476,1066,4.506,1077,4.405,1078,3.544,1296,3.447,1332,3.11,1333,4.482,1334,3.897,1502,3.018,1504,3.897,1513,3.897,1514,3.897,1611,4.482,1652,2.8,1655,2.476,1656,4.846,1657,3.868,1658,5.268,1659,5.696,1660,4.58,1661,4.58,1662,3.291,1663,4.482,1664,3.897,1665,3.291,1666,3.291,1667,3.291,1668,3.291,1669,3.291,1670,3.291,1671,4.58,1672,3.291,1673,3.291,1674,3.291,1675,4.58,1676,3.897,1677,3.897,1678,3.897,1679,4.58,1680,3.897,1681,4.58,1682,4.58,1683,3.291,1684,3.291,1685,4.58,1686,4.58,1687,4.58,1688,4.58,1689,5.268,1690,4.58,1691,5.268,1692,4.58,1693,2.476,1694,4.58,1695,4.58,1696,4.58,1697,4.58,1698,3.291,1699,3.291,1700,3.291,1701,3.291,1702,3.291,1703,4.58,1704,3.291,1705,3.291,1706,3.291,1707,3.291,1708,3.291,1709,3.291,1710,3.291,1711,3.291,1712,3.291,1713,3.291]],["title/components/TaskCardComponent.html",[0,0.174,269,0.454]],["body/components/TaskCardComponent.html",[0,0.3,1,0.356,2,0.562,3,0.164,4,0.143,5,0.412,6,0.412,7,0.412,8,0.143,12,0.418,13,0.789,14,0.445,15,0.254,16,2.729,21,0.356,22,0.412,23,1.076,24,0.93,25,0.604,26,0.522,27,0.604,28,1.266,30,0.68,31,0.68,32,0.604,34,0.604,36,0.164,37,0.74,41,1.512,42,2.777,44,0.647,48,2.415,52,1.204,59,0.394,60,0.024,61,0.7,62,0.757,63,1.237,64,0.552,76,0.929,77,1.462,81,1.399,94,1.266,95,2.347,96,1.352,100,0.045,105,0.272,120,0.893,121,0.84,126,1.704,135,2.729,138,0.498,139,1.343,141,1.263,142,0.254,143,0.687,144,1.861,145,1.567,146,1.861,149,2.062,150,1.701,151,2.729,153,1.861,154,0.164,170,0.729,175,1.999,199,1.425,202,0.412,203,0.562,204,0.562,205,0.412,206,0.788,207,0.412,208,0.412,209,0.383,210,0.412,211,0.356,212,0.412,213,0.68,214,0.412,215,0.666,216,0.604,217,0.356,218,0.412,219,0.412,220,0.356,221,0.278,222,0.604,223,0.383,224,0.412,225,0.356,226,0.412,227,0.356,228,0.412,229,0.356,230,0.412,231,0.356,232,0.604,233,0.412,234,0.356,235,0.412,236,0.356,237,0.412,238,0.356,239,0.412,240,0.412,241,0.356,242,0.383,243,0.412,244,0.356,245,0.412,246,0.356,247,0.356,248,0.604,249,0.412,250,0.412,251,0.68,252,0.383,253,0.383,254,0.412,255,0.412,256,0.383,257,0.356,258,0.412,259,0.356,260,0.383,261,0.412,262,0.412,263,0.356,264,0.412,265,0.356,266,0.412,267,0.356,268,0.412,269,0.68,270,0.648,271,0.412,272,0.68,273,0.412,274,0.383,275,0.412,276,0.356,277,0.412,278,0.356,279,0.412,280,0.412,281,0.412,282,0.412,283,0.039,284,0.039,291,1.852,292,2.521,310,2.585,334,2.729,335,2.494,340,0.965,360,1.982,366,1.927,367,1.982,374,1.852,381,2.494,391,1.11,392,1.352,393,1.701,437,1.852,477,1.861,479,3.419,490,3.231,510,2.952,531,1.567,572,4.199,584,2.408,662,2.347,695,3.944,703,3.024,713,3.19,714,3.19,715,2.973,718,2.729,721,3.252,767,1.701,772,4.119,786,3.024,797,3.19,918,2.494,939,4.459,940,4.049,952,4.049,1266,2.062,1328,1.861,1411,2.062,1464,3.419,1550,3.419,1557,3.419,1601,2.729,1657,3.231,1680,3.419,1714,4.508,1715,4.508,1716,2.332,1717,4.019,1718,4.019,1719,4.759,1720,4.019,1721,5.241,1722,4.019,1723,4.759,1724,2.741,1725,2.741,1726,2.741,1727,2.741,1728,2.741,1729,2.741,1730,2.741,1731,2.741,1732,2.741,1733,2.741,1734,2.741,1735,4.019,1736,4.019,1737,4.019,1738,2.741,1739,4.019,1740,4.019,1741,4.019,1742,4.019,1743,4.019,1744,4.019,1745,4.019,1746,4.019,1747,4.019,1748,2.741,1749,2.741,1750,2.741,1751,2.741,1752,2.741,1753,2.741,1754,1.861,1755,2.332,1756,2.332,1757,2.741,1758,2.062,1759,2.332,1760,2.741,1761,2.741,1762,2.741,1763,4.019,1764,2.741,1765,2.741,1766,2.741,1767,2.741,1768,2.741,1769,2.741,1770,3.419,1771,4.019,1772,4.019,1773,3.419,1774,3.419,1775,3.419,1776,3.419]],["title/components/TaskCategoryComponent.html",[0,0.174,272,0.454]],["body/components/TaskCategoryComponent.html",[0,0.294,1,0.533,2,0.744,3,0.245,4,0.214,5,0.617,6,0.617,7,0.617,8,0.214,14,0.588,15,0.381,21,0.533,22,0.617,23,1.105,24,0.954,25,0.799,26,0.69,27,0.799,28,1.568,30,0.533,31,0.533,32,0.799,34,0.799,36,0.245,52,1.592,59,0.278,60,0.023,61,0.493,62,0.533,64,0.345,81,1.333,100,0.067,105,0.276,138,0.402,139,1.501,142,0.381,143,1.03,154,0.245,202,0.617,203,0.744,204,0.744,205,0.617,206,0.937,207,0.617,208,0.617,209,0.575,210,0.617,211,0.533,212,0.617,213,0.533,214,0.617,215,0.575,216,0.799,217,0.533,218,0.617,219,0.617,220,0.533,221,0.417,222,0.799,223,0.575,224,0.617,225,0.533,226,0.617,227,0.533,228,0.617,229,0.533,230,0.617,231,0.533,232,0.799,233,0.617,234,0.533,235,0.617,236,0.533,237,0.617,238,0.533,239,0.617,240,0.617,241,0.533,242,0.575,243,0.617,244,0.533,245,0.617,246,0.533,247,0.533,248,0.799,249,0.617,250,0.617,251,0.533,252,0.575,253,0.575,254,0.617,255,0.617,256,0.575,257,0.533,258,0.617,259,0.533,260,0.575,261,0.617,262,0.617,263,0.533,264,0.617,265,0.533,266,0.617,267,0.533,268,0.617,269,0.533,270,0.658,271,0.617,272,0.809,273,0.617,274,0.575,275,0.617,276,0.533,277,0.617,278,0.533,279,0.617,280,0.617,281,0.617,282,0.617,283,0.051,284,0.051,772,3.299,1656,5.726,1663,5.303,1664,4.523,1714,3.61,1715,3.61,1754,3.61,1777,3.496,1778,5.317,1779,5.317,1780,4.109]],["title/components/TaskViewComponent.html",[0,0.174,276,0.454]],["body/components/TaskViewComponent.html",[0,0.317,1,0.347,2,0.552,3,0.159,4,0.139,5,0.401,6,0.401,7,0.401,8,0.139,12,0.266,13,0.774,14,0.436,15,0.247,16,3.515,18,2.967,19,3.515,20,3.355,21,0.796,22,0.401,23,1.074,24,0.928,25,0.593,26,0.608,27,0.593,28,1.247,30,0.347,31,0.672,32,0.593,34,0.593,36,0.357,37,0.726,41,1.49,42,2.743,43,2.967,44,0.635,45,4.348,48,2.663,51,3.528,52,1.181,54,2.447,55,3.988,57,2.959,58,3.75,59,0.404,60,0.024,61,0.621,62,0.672,63,0.931,64,0.564,67,3.585,71,4.404,72,2.272,75,2.447,76,0.868,77,1.449,81,0.67,94,0.711,98,3.355,99,4.698,100,0.077,101,2.089,105,0.244,106,2.678,116,3.355,117,1.945,118,2.484,119,2.68,120,0.593,121,0.558,127,2.272,128,2.909,129,2.01,130,1.527,131,1.814,135,2.678,137,2.272,138,0.489,139,1.323,140,2.909,141,1.231,142,0.247,143,0.67,149,2.01,150,1.657,151,1.814,152,2.272,153,1.814,154,0.159,157,2.272,158,2.272,164,0.631,175,1.854,177,2.01,178,1.415,179,2.272,180,2.01,182,2.01,199,1.404,202,0.401,203,0.552,204,0.552,205,0.401,206,0.778,207,0.401,208,0.401,209,0.374,210,0.401,211,0.347,212,0.401,213,0.347,214,0.401,215,0.374,216,0.593,217,0.347,218,0.401,219,0.401,220,0.672,221,0.476,222,0.593,223,0.374,224,0.401,225,0.347,226,0.401,227,0.347,228,0.401,229,0.347,230,0.401,231,0.347,232,0.593,233,0.401,234,0.347,235,0.401,236,0.347,237,0.401,238,0.347,239,0.401,240,0.401,241,0.347,242,0.374,243,0.401,244,0.347,245,0.401,246,0.347,247,0.347,248,0.593,249,0.401,250,0.401,251,0.672,252,0.374,253,0.374,254,0.401,255,0.401,256,0.374,257,0.347,258,0.401,259,0.347,260,0.374,261,0.401,262,0.401,263,0.347,264,0.401,265,0.347,266,0.401,267,0.347,268,0.401,269,0.347,270,0.659,271,0.401,272,0.672,273,0.401,274,0.374,275,0.401,276,0.672,277,0.401,278,0.347,279,0.401,280,0.401,281,0.401,282,0.401,283,0.038,284,0.038,310,2.553,319,1.755,327,3.355,366,1.898,381,2.447,392,1.318,393,1.657,427,2.254,490,3.183,498,2.909,575,0.849,584,1.153,633,2.967,662,1.945,715,2.312,721,2.447,767,1.657,768,4.921,772,1.657,786,3.895,797,3.156,814,2.01,862,2.678,866,2.678,1066,2.967,1077,2.678,1078,2.254,1099,2.967,1164,3.355,1266,2.967,1328,1.814,1329,2.967,1411,2.01,1473,3.355,1502,3.424,1527,3.895,1601,3.515,1619,2.272,1657,2.678,1714,4.441,1715,1.814,1754,1.814,1755,2.272,1756,2.272,1758,2.01,1759,2.272,1770,3.355,1773,3.355,1774,3.355,1775,3.355,1776,3.355,1781,2.272,1782,5.779,1783,3.943,1784,3.943,1785,3.943,1786,3.943,1787,5.176,1788,3.943,1789,4.688,1790,3.943,1791,2.671,1792,2.671,1793,2.671,1794,2.671,1795,2.671,1796,2.671,1797,3.943,1798,2.671,1799,3.943,1800,2.671,1801,3.943,1802,3.943,1803,2.671,1804,3.943,1805,3.355,1806,2.671,1807,2.671,1808,3.943,1809,2.671,1810,2.671,1811,3.943,1812,2.671,1813,2.671,1814,2.671,1815,3.943,1816,3.943,1817,3.943,1818,3.943,1819,3.943]],["title/injectables/TasksService.html",[310,1.726,486,1.417]],["body/injectables/TasksService.html",[3,0.121,4,0.105,8,0.105,12,0.415,14,0.698,26,0.263,36,0.191,37,0.587,41,1.014,44,0.514,57,3.213,59,0.442,60,0.024,61,0.538,62,0.582,63,1.059,64,0.563,76,1.002,77,1.485,94,0.849,100,0.033,101,1.691,102,1.293,105,0.328,110,2.093,115,2.782,117,1.575,120,1.401,121,1.317,126,1.415,138,0.411,142,0.188,154,0.121,164,1.471,170,1.607,172,1.575,175,1.415,184,4.284,199,1.865,200,1.077,221,0.324,270,0.675,283,0.031,284,0.031,294,1.158,299,2.065,310,1.575,319,1.014,341,3.213,360,1.575,391,0.82,395,0.933,396,1.073,429,2.796,437,1.471,442,2.376,457,2.829,464,2.248,486,1.816,487,1.158,489,2.168,490,2.683,498,4.197,505,1.375,506,3.045,508,1.98,514,2.168,516,3.487,534,4.502,549,2.402,555,3.519,556,3.374,557,3.815,560,3.374,569,3.027,571,1.375,573,1.375,574,1.256,575,2.094,576,3.817,577,4.23,580,2.402,583,2.683,584,2.341,585,2.168,611,2.402,641,2.716,643,2.402,661,3.815,662,2.676,678,2.716,706,2.168,713,2.789,714,2.789,715,1.949,717,1.575,718,2.168,728,2.716,767,1.256,816,2.168,844,2.168,845,5.224,854,4.15,859,3.815,862,4.169,865,3.815,869,1.524,883,2.716,888,3.361,889,2.683,891,2.716,1143,4.409,1392,2.716,1502,3.637,1527,2.402,1565,1.723,1592,2.716,1598,2.716,1600,3.815,1601,3.817,1614,2.402,1657,4.443,1805,5.477,1820,1.723,1821,2.716,1822,2.716,1823,3.192,1824,3.951,1825,3.951,1826,3.192,1827,3.192,1828,3.192,1829,3.192,1830,3.192,1831,4.484,1832,3.192,1833,3.192,1834,3.815,1835,4.484,1836,4.484,1837,3.192,1838,3.192,1839,3.192,1840,3.192,1841,3.192,1842,2.025,1843,3.192,1844,2.025,1845,3.192,1846,3.192,1847,2.025,1848,3.192,1849,2.025,1850,3.192,1851,2.025,1852,5.183,1853,2.025,1854,3.192,1855,3.192,1856,3.192,1857,3.192,1858,2.025,1859,3.192,1860,2.025,1861,3.192,1862,2.025,1863,2.025,1864,2.025,1865,2.025,1866,2.716,1867,3.192,1868,3.192,1869,2.025,1870,3.192,1871,2.025,1872,3.192,1873,2.025,1874,4.484,1875,3.192,1876,2.025,1877,3.192,1878,2.025,1879,2.025,1880,2.025,1881,2.025,1882,1.723,1883,2.716,1884,2.025,1885,2.025,1886,2.025,1887,1.723,1888,3.192,1889,2.025,1890,3.192,1891,2.025,1892,2.025,1893,2.025,1894,2.025,1895,4.878,1896,2.025,1897,3.192,1898,2.025,1899,2.025,1900,2.025,1901,2.025,1902,2.025,1903,2.025,1904,2.025,1905,4.484,1906,3.951,1907,4.484,1908,3.192,1909,2.025,1910,2.025,1911,3.192,1912,2.025,1913,4.484,1914,2.025,1915,3.192,1916,2.025,1917,2.025,1918,2.025,1919,2.025,1920,2.025,1921,2.025,1922,3.192,1923,3.192]],["title/components/ToastNotificationComponent.html",[0,0.174,278,0.454]],["body/components/ToastNotificationComponent.html",[0,0.317,1,0.513,2,0.725,3,0.236,4,0.205,5,0.594,6,0.594,7,0.594,8,0.205,12,0.267,13,1.017,14,0.573,15,0.366,21,0.513,22,0.594,23,1.102,24,0.952,25,0.779,26,0.673,27,0.779,28,1.539,30,0.513,31,0.513,32,0.779,34,0.779,36,0.236,52,1.552,59,0.35,60,0.023,61,0.622,62,0.673,64,0.435,94,1.379,100,0.064,105,0.269,110,2.746,126,1.856,138,0.392,139,1.633,142,0.366,143,0.99,154,0.236,202,0.594,203,0.725,204,0.725,205,0.594,206,0.923,207,0.594,208,0.594,209,0.552,210,0.594,211,0.513,212,0.594,213,0.513,214,0.594,215,0.552,216,0.779,217,0.513,218,0.594,219,0.594,220,0.513,221,0.401,222,0.779,223,0.552,224,0.594,225,0.513,226,0.594,227,0.513,228,0.594,229,0.513,230,0.594,231,0.513,232,0.779,233,0.594,234,0.513,235,0.594,236,0.513,237,0.594,238,0.513,239,0.594,240,0.594,241,0.513,242,0.552,243,0.594,244,0.513,245,0.594,246,0.513,247,0.513,248,0.779,249,0.594,250,0.594,251,0.513,252,0.552,253,0.552,254,0.594,255,0.594,256,0.552,257,0.513,258,0.594,259,0.513,260,0.552,261,0.594,262,0.594,263,0.513,264,0.594,265,0.513,266,0.594,267,0.513,268,0.594,269,0.513,270,0.606,271,0.594,272,0.513,273,0.594,274,0.552,275,0.594,276,0.513,277,0.594,278,0.797,279,1.028,280,0.958,281,0.594,282,0.594,283,0.05,284,0.05,340,0.954,374,2.388,702,4.409,745,4.92,1413,4.352,1465,4.409,1585,5.424,1924,4.92,1925,3.36,1926,5.182,1927,5.182,1928,5.182,1929,3.95,1930,3.95,1931,5.182]],["title/injectables/UsersService.html",[42,1.854,486,1.417]],["body/injectables/UsersService.html",[3,0.18,4,0.157,8,0.157,12,0.392,14,0.477,15,0.63,24,0.869,26,0.783,36,0.18,37,0.794,40,3.67,41,1.371,42,2.285,44,0.695,59,0.42,60,0.024,61,0.518,62,0.56,63,1.369,64,0.543,76,0.997,77,0.758,81,1.819,84,3.332,85,4.096,87,3.67,92,3.67,94,1.46,95,3.131,100,0.049,102,1.747,105,0.302,110,2.285,115,2.676,120,1.289,121,1.212,126,2.077,138,0.47,142,0.28,148,2.274,154,0.18,164,1.295,170,1.543,195,4.549,199,1.806,200,1.455,221,0.665,257,0.712,283,0.042,284,0.042,294,1.728,299,2.363,319,1.371,340,0.926,341,1.728,360,2.128,366,2.616,391,1.224,392,1.491,395,1.393,396,1.601,429,2.756,437,1.988,442,3.363,457,1.988,461,4.127,486,2.221,487,1.728,489,2.929,498,3.121,505,2.052,506,3.725,508,2.676,514,2.929,516,3.403,526,2.929,534,3.725,537,2.929,549,4.127,555,2.929,556,3.246,569,3.599,571,2.052,573,2.052,574,1.875,575,1.598,576,2.052,583,2.929,584,1.304,585,2.052,589,2.274,590,2.274,611,3.246,643,3.246,700,2.466,797,3.992,843,3.67,844,2.929,869,2.274,889,2.929,918,2.676,1217,3.67,1614,4.127,1624,3.67,1758,2.274,1821,3.67,1822,3.67,1834,4.667,1866,3.67,1882,2.571,1883,2.571,1887,2.571,1932,2.571,1933,4.313,1934,4.313,1935,4.313,1936,5.485,1937,4.313,1938,4.313,1939,3.022,1940,4.313,1941,3.022,1942,3.022,1943,4.313,1944,4.313,1945,4.313,1946,4.313,1947,4.313,1948,3.022,1949,5.485,1950,4.313,1951,3.022,1952,4.313,1953,3.022,1954,4.313,1955,4.313,1956,3.022,1957,3.022,1958,4.313,1959,3.022,1960,3.022,1961,3.022,1962,3.022,1963,3.022,1964,3.022,1965,4.313,1966,3.022,1967,3.022,1968,3.022,1969,3.022,1970,3.022,1971,3.022]],["title/coverage.html",[1972,4.065]],["body/coverage.html",[0,0.364,1,0.494,8,0.198,9,3.236,10,3.236,11,3.236,15,0.352,21,0.494,30,0.494,31,0.494,42,2.015,59,0.257,60,0.024,63,0.898,100,0.103,145,2.174,150,2.36,175,2.166,209,0.532,211,0.494,213,0.494,215,0.707,217,0.494,220,0.494,221,0.513,223,0.532,225,0.494,227,0.494,229,0.494,231,0.494,234,0.494,236,0.494,238,0.494,241,0.494,244,0.494,246,0.494,251,0.494,253,0.532,256,0.532,259,0.494,263,0.494,265,0.494,267,0.494,269,0.494,270,0.352,272,0.494,274,0.532,276,0.494,278,0.494,283,0.049,284,0.049,285,3.236,299,1.447,301,2.583,310,1.876,366,1.54,395,2.329,421,3.236,422,3.803,426,2.583,476,3.236,477,2.583,478,3.803,486,2.55,488,3.236,510,2.36,607,3.236,623,2.862,624,3.236,658,3.236,768,2.862,770,3.236,772,3.522,788,3.236,793,3.236,813,3.236,814,2.862,815,3.803,831,3.236,893,3.236,898,3.236,935,3.236,963,3.803,964,2.583,965,3.236,980,2.862,981,3.236,989,3.236,1109,3.236,1110,3.236,1111,3.236,1244,4.3,1245,3.236,1246,3.236,1270,3.236,1275,3.236,1284,3.236,1285,2.862,1286,3.803,1298,3.236,1299,3.236,1327,3.236,1328,2.583,1337,3.236,1338,3.236,1339,3.236,1387,5.146,1394,3.236,1413,2.862,1463,3.236,1484,3.236,1485,2.862,1502,2.015,1503,3.236,1515,4.3,1516,3.236,1583,3.236,1655,3.803,1693,2.862,1714,4.107,1715,3.432,1716,3.236,1754,2.583,1777,3.236,1781,3.236,1820,3.236,1924,3.236,1925,3.236,1932,3.236,1972,3.236,1973,3.803,1974,3.803,1975,3.803,1976,3.803,1977,3.236,1978,3.236,1979,5.676,1980,6.049,1981,5.054,1982,3.803,1983,3.803,1984,3.803,1985,3.803,1986,3.803,1987,3.803,1988,6.791,1989,5.054,1990,3.803,1991,3.803,1992,3.803,1993,3.803,1994,3.803,1995,3.803,1996,5.054,1997,3.803,1998,5.054,1999,3.803,2000,3.803,2001,3.803,2002,3.803,2003,5.054,2004,3.803,2005,6.049,2006,3.803,2007,5.054,2008,3.803,2009,3.803,2010,6.606,2011,6.297,2012,3.803,2013,3.803,2014,3.803,2015,3.803,2016,3.803,2017,3.803,2018,3.236,2019,3.236,2020,3.236,2021,5.054,2022,3.803,2023,3.803,2024,3.803,2025,3.803,2026,3.803,2027,3.803,2028,3.803,2029,3.803,2030,3.803,2031,3.803,2032,3.803,2033,5.676,2034,5.054,2035,3.803,2036,3.803,2037,3.236,2038,3.236,2039,3.803,2040,3.803,2041,3.803,2042,3.803,2043,3.803,2044,3.803,2045,3.803]],["title/dependencies.html",[2046,2.197,2047,3.58]],["body/dependencies.html",[60,0.023,142,0.502,143,1.359,147,3.364,283,0.061,284,0.061,387,2.34,391,2.195,2047,4.612,2048,5.421,2049,7.182,2050,5.421,2051,6.304,2052,6.304,2053,5.421,2054,5.421,2055,5.421,2056,5.421,2057,5.421,2058,5.421,2059,5.421,2060,5.421]],["title/miscellaneous/functions.html",[2061,1.983,2062,3.58]],["body/miscellaneous/functions.html",[36,0.331,60,0.021,61,0.666,76,0.96,283,0.062,284,0.062,338,3.384,340,1.175,453,2.938,510,3.44,1078,3.846,1655,4.173,1676,4.718,1677,4.718,1678,4.718,1693,5.063,2061,3.765,2062,4.718,2063,5.545]],["title/index.html",[36,0.174,2064,2.92,2065,2.92]],["body/index.html",[0,0.321,4,0.259,14,0.552,60,0.019,63,1.178,95,2.461,105,0.259,283,0.058,284,0.058,287,5.477,291,2.299,345,2.644,377,4.372,383,3.096,516,3.724,537,4.076,659,3.096,700,3.68,910,4.844,946,3.388,948,2.852,957,4.076,968,4.245,1011,3.755,1062,4.245,1099,3.755,1142,4.245,1374,4.245,1559,4.245,2046,3.755,2066,4.99,2067,6.438,2068,4.245,2069,4.99,2070,6.835,2071,7.02,2072,4.99,2073,4.99,2074,4.99,2075,4.99,2076,4.99,2077,4.99,2078,4.99,2079,4.99,2080,4.99,2081,6.68,2082,4.99,2083,4.99,2084,4.99,2085,6.002,2086,6.002,2087,6.68,2088,4.99,2089,6.002,2090,4.99,2091,6.942,2092,4.99,2093,4.99,2094,4.99,2095,6.002,2096,4.99,2097,4.99,2098,4.99,2099,4.99,2100,4.99]],["title/modules.html",[2101,4.065]],["body/modules.html",[60,0.021,283,0.063,284,0.063,2101,4.878]],["title/overview.html",[659,2.964]],["body/overview.html",[2,0.795,60,0.021,283,0.063,284,0.063,420,3.249,487,3.249,659,3.526,2102,5.683,2103,6.478]],["title/properties.html",[37,0.774,2046,2.197]],["body/properties.html",[37,1.05,60,0.022,283,0.063,284,0.063,2068,4.856,2104,5.708]],["title/miscellaneous/variables.html",[1304,3.167,2061,1.983]],["body/miscellaneous/variables.html",[36,0.279,59,0.441,60,0.024,61,0.784,62,0.848,63,1.103,170,1.243,283,0.056,284,0.056,336,3.975,395,3.01,400,4.339,442,3.055,461,3.515,508,2.899,513,5.142,545,4.339,575,1.485,1304,3.515,1977,3.975,1978,4.906,2018,3.975,2019,4.906,2020,4.906,2037,3.975,2038,3.975,2061,3.172,2105,4.672,2106,4.672,2107,4.672,2108,4.672,2109,4.672,2110,4.672,2111,4.672,2112,4.672,2113,4.672,2114,4.672,2115,4.672,2116,4.672,2117,4.672,2118,4.672,2119,4.672,2120,4.672,2121,4.672,2122,4.672,2123,5.766,2124,5.766,2125,5.766,2126,5.766,2127,5.766,2128,5.766,2129,5.766,2130,5.766,2131,5.766,2132,5.766,2133,5.766,2134,5.766,2135,5.766,2136,5.766,2137,5.766,2138,5.766,2139,5.766,2140,5.766,2141,5.766,2142,5.766,2143,5.766,2144,5.766,2145,5.766,2146,5.766,2147,5.766,2148,5.766,2149,5.766,2150,5.766,2151,4.672,2152,4.672]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":175,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/ContactsService.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["0\">{{printdescription",{"_index":1771,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["0\">{{task.description",{"_index":1815,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["0.0.0",{"_index":2104,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["05cdd7",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":464,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/SlideComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["1.1.25",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["10/20",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":180,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/TaskViewComponent.html":{}}}],["125ms",{"_index":1469,"title":{},"body":{"components/SlideComponent.html":{}}}],["13/23",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["14/35",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["160",{"_index":755,"title":{},"body":{"components/BoardComponent.html":{}}}],["17.2.0",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["17.2.1",{"_index":2069,"title":{},"body":{"index.html":{}}}],["19/23",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":1243,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["23/37",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":810,"title":{},"body":{"classes/Contact.html":{}}}],["26",{"_index":1242,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["26/40",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["26123",{"_index":1126,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["28",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["2aec8b",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2afdc3",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2fb287",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["309cf4",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":2102,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["33/55",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["33da81",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1763,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["36",{"_index":1765,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["36b3f0",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["38b",{"_index":1125,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["4/4",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["42f9b9",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2103,"title":{},"body":{"overview.html":{}}}],["5/13",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["5/15",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["58ac47",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1454,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["6/10",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["6dd44a",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1447,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["768",{"_index":779,"title":{},"body":{"components/BoardComponent.html":{}}}],["8/10",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["8/19",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["8/23",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1262,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["809283",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["8ea906",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"injectables/UsersService.html":{}}}],["9/13",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUser.html":{}}}],["a.due.localecompare(b.due",{"_index":1635,"title":{},"body":{"components/SummaryComponent.html":{}}}],["a8ee51",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a9ddc7",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aborted",{"_index":1547,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["acceptance",{"_index":1128,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["accessing",{"_index":1130,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["accordance",{"_index":1172,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["according",{"_index":1384,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accuracy",{"_index":1050,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["acknowledge",{"_index":1132,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["action",{"_index":1094,"title":{},"body":{"components/HelpComponent.html":{}}}],["activatedroute",{"_index":1358,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["active",{"_index":796,"title":{},"body":{"classes/Contact.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{}}}],["activities",{"_index":1177,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["actual",{"_index":748,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["actual_component",{"_index":282,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["add",{"_index":14,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["add/edit",{"_index":122,"title":{},"body":{"components/AddContactComponent.html":{}}}],["add_task",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["addcontact",{"_index":832,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontact(contact",{"_index":839,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontactcomponent",{"_index":1,"title":{"components/AddContactComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["addcontactlocally",{"_index":833,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontactlocally(contact",{"_index":847,"title":{},"body":{"injectables/ContactsService.html":{}}}],["added",{"_index":110,"title":{},"body":{"components/AddContactComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["adding",{"_index":718,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["additional",{"_index":424,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"components/HeadlineSloganComponent.html":{}}}],["address",{"_index":85,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/AuthService.html":{},"components/EmailComponent.html":{},"injectables/UsersService.html":{}}}],["addsubtask",{"_index":1826,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtask(subtask",{"_index":1841,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtaskstotasks",{"_index":1827,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtaskstotasks(subtasksdata",{"_index":1843,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtasktotask",{"_index":1828,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtasktotask(subtask",{"_index":1846,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtask",{"_index":1829,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtask(task",{"_index":1848,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtaskcomponent",{"_index":209,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["addtasklocally",{"_index":1830,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtasklocally(task",{"_index":1850,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtostatus",{"_index":675,"title":{},"body":{"components/BoardComponent.html":{}}}],["addtostatus(status",{"_index":712,"title":{},"body":{"components/BoardComponent.html":{}}}],["adress",{"_index":193,"title":{},"body":{"components/AddContactComponent.html":{}}}],["advised",{"_index":1214,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["affiliates",{"_index":1224,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["afterwards",{"_index":1393,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["against",{"_index":1230,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["agents",{"_index":1228,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["agree",{"_index":1133,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["akademie",{"_index":1014,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["allows",{"_index":1784,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["already",{"_index":87,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/UsersService.html":{}}}],["amendments",{"_index":1138,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["and/or",{"_index":1238,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["angular",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":143,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":142,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":147,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1255,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["animation",{"_index":75,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["another",{"_index":108,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["app.component.html",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["app/main",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["app/other",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{}}}],["appcomponent",{"_index":211,"title":{"components/AppComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1173,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["application",{"_index":2075,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1075,"title":{},"body":{"components/HelpComponent.html":{}}}],["appuser",{"_index":366,"title":{"classes/AppUser.html":{}},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["appuser(udata",{"_index":1963,"title":{},"body":{"injectables/UsersService.html":{}}}],["appuser(userdata",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["april",{"_index":1643,"title":{},"body":{"components/SummaryComponent.html":{}}}],["arguments",{"_index":688,"title":{},"body":{"components/BoardComponent.html":{}}}],["arising",{"_index":1216,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["array",{"_index":1601,"title":{},"body":{"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["array).foreach(cdata",{"_index":873,"title":{},"body":{"injectables/ContactsService.html":{}}}],["array).foreach(tdata",{"_index":1892,"title":{},"body":{"injectables/TasksService.html":{}}}],["array).foreach(udata",{"_index":1959,"title":{},"body":{"injectables/UsersService.html":{}}}],["arrow",{"_index":214,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["arrowbackbtncomponent",{"_index":213,"title":{"components/ArrowBackBtnComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["artifacts",{"_index":2082,"title":{},"body":{"index.html":{}}}],["ascontact",{"_index":430,"title":{},"body":{"classes/AppUser.html":{}}}],["aside",{"_index":1164,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{}}}],["aspect",{"_index":1152,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["aspects",{"_index":1051,"title":{},"body":{"components/HelpComponent.html":{}}}],["assigned",{"_index":1066,"title":{},"body":{"components/HelpComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{}}}],["assigned_to",{"_index":1706,"title":{},"body":{"classes/Task.html":{}}}],["assignees",{"_index":1079,"title":{},"body":{"components/HelpComponent.html":{}}}],["assignment",{"_index":1776,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["associated",{"_index":1166,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["associates",{"_index":1870,"title":{},"body":{"injectables/TasksService.html":{}}}],["async",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["attribute",{"_index":635,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/ResetPasswordComponent.html":{}}}],["august",{"_index":1645,"title":{},"body":{"components/SummaryComponent.html":{}}}],["auth",{"_index":461,"title":{},"body":{"classes/AppUser.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":869,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["auth_token_headers",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_token_interceptor",{"_index":2020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["authentication",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/GreetingComponent.html":{}}}],["autherror",{"_index":1344,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["authorization",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":299,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice.currentuser",{"_index":1613,"title":{},"body":{"components/SummaryComponent.html":{}}}],["authservice.user",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["authsub",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["authuser",{"_index":426,"title":{"classes/AuthUser.html":{}},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"coverage.html":{}}}],["authuser(obj.user",{"_index":466,"title":{},"body":{"classes/AppUser.html":{}}}],["automatic",{"_index":625,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["automatically",{"_index":2076,"title":{},"body":{"index.html":{}}}],["autoscrollservice",{"_index":623,"title":{"injectables/AutoscrollService.html":{}},"body":{"injectables/AutoscrollService.html":{},"coverage.html":{}}}],["availability",{"_index":1048,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["available",{"_index":1949,"title":{},"body":{"injectables/UsersService.html":{}}}],["await",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1634,"title":{},"body":{"components/SummaryComponent.html":{}}}],["b579d2",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b663f3",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":215,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["backend",{"_index":457,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["background",{"_index":1303,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge",{"_index":817,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["badge'},{'name",{"_index":250,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["badge.component",{"_index":146,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["badge.component.html",{"_index":1307,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.scss",{"_index":1308,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts",{"_index":1299,"title":{},"body":{"components/PersonBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:17",{"_index":1315,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:18",{"_index":1312,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1314,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:20",{"_index":1313,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:21",{"_index":1317,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:28",{"_index":1318,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge/person",{"_index":145,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{}}}],["badge_colors",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base_url",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1003,"title":{},"body":{"components/HelpComponent.html":{}}}],["before",{"_index":1855,"title":{},"body":{"injectables/TasksService.html":{}}}],["behavior",{"_index":648,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["being",{"_index":915,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["below",{"_index":702,"title":{},"body":{"components/BoardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["benefit",{"_index":1002,"title":{},"body":{"components/HelpComponent.html":{}}}],["bengt",{"_index":1115,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["berg",{"_index":1124,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["best",{"_index":1043,"title":{},"body":{"components/HelpComponent.html":{}}}],["better",{"_index":185,"title":{},"body":{"components/AddContactComponent.html":{}}}],["between",{"_index":1266,"title":{},"body":{"components/LogInPageComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["bf59f2",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billboard",{"_index":1018,"title":{},"body":{"components/HelpComponent.html":{}}}],["blue",{"_index":480,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/HeadlineSloganComponent.html":{}}}],["board",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["board'},{'name",{"_index":218,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["board.component.html",{"_index":665,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.scss",{"_index":666,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":217,"title":{"components/BoardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["body",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["boolean",{"_index":94,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["bootcamp",{"_index":1012,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["both",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["bottom",{"_index":638,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["breach",{"_index":1239,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["bright",{"_index":791,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["browser",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":483,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn'},{'name",{"_index":216,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["btn.component",{"_index":151,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["btn.component.html",{"_index":484,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn.component.scss",{"_index":485,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn.component.ts",{"_index":478,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{},"coverage.html":{}}}],["btn.component.ts:16",{"_index":792,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["btn/arrow",{"_index":477,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{}}}],["btn/close",{"_index":150,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["build",{"_index":2081,"title":{},"body":{"index.html":{}}}],["built",{"_index":1005,"title":{},"body":{"components/HelpComponent.html":{}}}],["bull;{{task.name",{"_index":1580,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["business",{"_index":1040,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["button",{"_index":79,"title":{},"body":{"components/AddContactComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{}}}],["c.id",{"_index":886,"title":{},"body":{"injectables/ContactsService.html":{}}}],["c27177",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c7acc0",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/TaskViewComponent.html":{}}}],["calls",{"_index":1556,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["cancel",{"_index":45,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["canceloverlay",{"_index":55,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["cancels",{"_index":1536,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["capabilities",{"_index":2099,"title":{},"body":{"index.html":{}}}],["capitalized",{"_index":1319,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["capitalized.substring(0,3",{"_index":1324,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["card",{"_index":721,"title":{},"body":{"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"components/HelpComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["card'},{'name",{"_index":271,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["card.component.html",{"_index":1717,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.scss",{"_index":1718,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts",{"_index":1716,"title":{},"body":{"components/TaskCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:26",{"_index":1752,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:27",{"_index":1725,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:28",{"_index":1750,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:29",{"_index":1724,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:30",{"_index":1753,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:31",{"_index":1751,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:38",{"_index":1734,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:50",{"_index":1738,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:71",{"_index":1729,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:81",{"_index":1726,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:90",{"_index":1749,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:95",{"_index":1748,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card/task",{"_index":1715,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["cards",{"_index":1068,"title":{},"body":{"components/HelpComponent.html":{}}}],["case",{"_index":107,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{}}}],["case('done",{"_index":1496,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case('to",{"_index":1495,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case('urgent",{"_index":1497,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'done",{"_index":1500,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'to",{"_index":1499,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'urgent",{"_index":1501,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["catch((err",{"_index":1437,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["catch(e",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["category",{"_index":1656,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["category'},{'name",{"_index":273,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["category.component",{"_index":1755,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["category.component.html",{"_index":1778,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category.component.scss",{"_index":1779,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category.component.ts",{"_index":1777,"title":{},"body":{"components/TaskCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":1780,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category/task",{"_index":1754,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["caution",{"_index":1093,"title":{},"body":{"components/HelpComponent.html":{}}}],["certain",{"_index":703,"title":{},"body":{"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskCardComponent.html":{}}}],["cesura/break",{"_index":1731,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["change",{"_index":1142,"title":{},"body":{"components/LegalNoticeComponent.html":{},"index.html":{}}}],["changed",{"_index":93,"title":{},"body":{"components/AddContactComponent.html":{}}}],["char",{"_index":1733,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["character",{"_index":1550,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["characters",{"_index":1455,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["check",{"_index":95,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["checking",{"_index":1799,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["checkpasswordconfirmation",{"_index":1351,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["checks",{"_index":83,"title":{},"body":{"components/AddContactComponent.html":{}}}],["child",{"_index":722,"title":{},"body":{"components/BoardComponent.html":{}}}],["choice",{"_index":2094,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1231,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["class",{"_index":100,"title":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":420,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"overview.html":{}}}],["clear",{"_index":1854,"title":{},"body":{"injectables/TasksService.html":{}}}],["clearsubtasks",{"_index":1831,"title":{},"body":{"injectables/TasksService.html":{}}}],["cli",{"_index":2067,"title":{},"body":{"index.html":{}}}],["click",{"_index":705,"title":{},"body":{"components/BoardComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/SubtaskComponent.html":{}}}],["clicked",{"_index":1557,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["clicks",{"_index":1736,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["close",{"_index":219,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["closebtncomponent",{"_index":31,"title":{"components/CloseBtnComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["closedropdown",{"_index":1723,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["closeheaderdropdown",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["closes",{"_index":725,"title":{},"body":{"components/BoardComponent.html":{}}}],["closest",{"_index":1603,"title":{},"body":{"components/SummaryComponent.html":{}}}],["closetaskstatusdropdown",{"_index":676,"title":{},"body":{"components/BoardComponent.html":{}}}],["closetaskview",{"_index":677,"title":{},"body":{"components/BoardComponent.html":{}}}],["closing",{"_index":1464,"title":{},"body":{"components/SlideComponent.html":{},"components/TaskCardComponent.html":{}}}],["closingtaskstatusdropdown",{"_index":667,"title":{},"body":{"components/BoardComponent.html":{}}}],["code",{"_index":2078,"title":{},"body":{"index.html":{}}}],["collaborate",{"_index":1061,"title":{},"body":{"components/HelpComponent.html":{}}}],["color",{"_index":446,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["color_id",{"_index":428,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["column",{"_index":1586,"title":{},"body":{"components/SummaryComponent.html":{}}}],["command",{"_index":2095,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":28,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["communicate",{"_index":849,"title":{},"body":{"injectables/ContactsService.html":{}}}],["communicating",{"_index":1852,"title":{},"body":{"injectables/TasksService.html":{}}}],["communication",{"_index":1823,"title":{},"body":{"injectables/TasksService.html":{}}}],["compared",{"_index":425,"title":{},"body":{"classes/AppUser.html":{}}}],["complete",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["completed",{"_index":1089,"title":{},"body":{"components/HelpComponent.html":{}}}],["completely",{"_index":1797,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["compodoc/compodoc",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/overlay",{"_index":726,"title":{},"body":{"components/BoardComponent.html":{}}}],["component_template",{"_index":207,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1135,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["confirm",{"_index":1526,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["confirm(enter",{"_index":1537,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["confirmation",{"_index":1364,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirms",{"_index":1539,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["connection",{"_index":1217,"title":{},"body":{"components/LegalNoticeComponent.html":{},"injectables/UsersService.html":{}}}],["consequential",{"_index":1205,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["consider",{"_index":920,"title":{},"body":{"components/GreetingComponent.html":{}}}],["considered",{"_index":92,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/UsersService.html":{}}}],["consistent",{"_index":1047,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["console.error('task",{"_index":888,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["console.error(e",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(resp",{"_index":1435,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["const",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/PersonBadgeComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1278,"title":{},"body":{"components/MenuComponent.html":{}}}],["constructor",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(http",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(obj",{"_index":434,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["constructor(private",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{}}}],["constructor(router",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{}}}],["contact",{"_index":15,"title":{"classes/Contact.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["contact'},{'name",{"_index":208,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["contact(cdata",{"_index":875,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact(this.inputcontact.tojson",{"_index":161,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.html",{"_index":33,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.scss",{"_index":35,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts",{"_index":11,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:22",{"_index":66,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:23",{"_index":65,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:24",{"_index":133,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:25",{"_index":68,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:26",{"_index":69,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:27",{"_index":70,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:28",{"_index":134,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:29",{"_index":132,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:30",{"_index":136,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:50",{"_index":113,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:66",{"_index":82,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:77",{"_index":123,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:85",{"_index":73,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:95",{"_index":78,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.email",{"_index":1970,"title":{},"body":{"injectables/UsersService.html":{}}}],["contact.id",{"_index":881,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact.tojson",{"_index":879,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact/add",{"_index":10,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["contactform.submitted",{"_index":188,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contactlistitemcomponent",{"_index":220,"title":{"components/ContactListItemComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["contacts",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{}}}],["contacts'},{'name",{"_index":224,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["contacts/contact",{"_index":1807,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["contactsarrayindex",{"_index":884,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contactscomponent",{"_index":223,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["contactsservice",{"_index":301,"title":{"injectables/ContactsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ContactsService.html":{},"coverage.html":{}}}],["contactsubmission",{"_index":56,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contain",{"_index":1453,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["container",{"_index":1376,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containerref",{"_index":1375,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containerref.nativeelement.getelementsbytagname('input')[0",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containing",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{}}}],["contains",{"_index":427,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/TaskViewComponent.html":{}}}],["contexts",{"_index":1306,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["converts",{"_index":451,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["copyrighted",{"_index":1167,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["corresponding",{"_index":117,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["corresponds",{"_index":902,"title":{},"body":{"components/GreetingComponent.html":{}}}],["cost",{"_index":1234,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["coverage",{"_index":1972,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":200,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"classes/Contact.html":{},"components/SubtaskComponent.html":{}}}],["creating",{"_index":1060,"title":{},"body":{"components/HelpComponent.html":{}}}],["current",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["currenthour",{"_index":931,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currently",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["currentuser",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["currentuser.user.email.slice",{"_index":928,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currentuser.user.username",{"_index":930,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currentuser?.id",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["currentusername",{"_index":906,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["custom",{"_index":1379,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["cut",{"_index":1744,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["d1d1d1",{"_index":812,"title":{},"body":{"classes/Contact.html":{},"components/PersonBadgeComponent.html":{}}}],["d2fa60",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1233,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["damages",{"_index":1207,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["daniel",{"_index":1117,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["data",{"_index":102,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"components/LegalNoticeComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":1805,"title":{},"body":{"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["datainitafterauthcomplete",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":1078,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"miscellaneous/functions.html":{}}}],["date().gethours",{"_index":932,"title":{},"body":{"components/GreetingComponent.html":{}}}],["date(due",{"_index":1638,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.getdate",{"_index":1651,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.getfullyear",{"_index":1653,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.now",{"_index":1671,"title":{},"body":{"classes/Task.html":{}}}],["day",{"_index":903,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["dc3df5",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":1678,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["dd/mm/yyyy",{"_index":1679,"title":{},"body":{"classes/Task.html":{}}}],["dddddd",{"_index":822,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["deadline",{"_index":1490,"title":{},"body":{"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{}}}],["december",{"_index":1649,"title":{},"body":{"components/SummaryComponent.html":{}}}],["decorators",{"_index":733,"title":{},"body":{"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["dedicated",{"_index":1007,"title":{},"body":{"components/HelpComponent.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1221,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["defined",{"_index":64,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":57,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["deletecontact",{"_index":46,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{}}}],["deletecontact(id",{"_index":851,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deletecontactlocally",{"_index":834,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deletecontactlocally(id",{"_index":855,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deleted",{"_index":854,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["deletelocalsessiontoken",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["deletes",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"components/SubtaskComponent.html":{}}}],["deletesubtask",{"_index":1832,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletesubtask(id",{"_index":1857,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetask",{"_index":1527,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["deletetask(id",{"_index":1859,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetasklocally",{"_index":1833,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetasklocally(id",{"_index":1861,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleting",{"_index":1088,"title":{},"body":{"components/HelpComponent.html":{}}}],["demand",{"_index":1232,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["dependencies",{"_index":2047,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depending",{"_index":1290,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["depends",{"_index":691,"title":{},"body":{"components/BoardComponent.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["descriptions",{"_index":1743,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["design",{"_index":1153,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["designateasyou",{"_index":820,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["designed",{"_index":1004,"title":{},"body":{"components/HelpComponent.html":{}}}],["desired",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"components/SummaryComponent.html":{}}}],["desktop",{"_index":1316,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["destroyed",{"_index":1553,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["detail",{"_index":454,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["detailed",{"_index":1783,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["details",{"_index":1076,"title":{},"body":{"components/HelpComponent.html":{}}}],["dev",{"_index":2073,"title":{},"body":{"index.html":{}}}],["developed",{"_index":1146,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["developer",{"_index":1013,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["development",{"_index":1011,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"index.html":{}}}],["devices",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["different",{"_index":1292,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["direct",{"_index":1201,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["directive",{"_index":205,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["directives",{"_index":281,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2080,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1558,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["directors",{"_index":1227,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["directory",{"_index":968,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"index.html":{}}}],["disable",{"_index":104,"title":{},"body":{"components/AddContactComponent.html":{}}}],["disabled",{"_index":80,"title":{},"body":{"components/AddContactComponent.html":{}}}],["disables",{"_index":1261,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["disappearing",{"_index":1472,"title":{},"body":{"components/SlideComponent.html":{}}}],["disclaimer",{"_index":1185,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["displaydropdown",{"_index":940,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["displayed",{"_index":695,"title":{},"body":{"components/BoardComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["displaying",{"_index":753,"title":{},"body":{"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["displays",{"_index":13,"title":{},"body":{"components/AddContactComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["dist",{"_index":2084,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1158,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["document.activeelement",{"_index":1574,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["document.getelementbyid('pagewrapper",{"_index":655,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["document.getelementbyid(elementid",{"_index":646,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["documentation",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["don\\'t",{"_index":1459,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["don\\\\'t",{"_index":1461,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["done",{"_index":715,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["done').length",{"_index":1767,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["dots",{"_index":1746,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["drag",{"_index":642,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["dragcardheight",{"_index":668,"title":{},"body":{"components/BoardComponent.html":{}}}],["dragged",{"_index":740,"title":{},"body":{"components/BoardComponent.html":{}}}],["dragging",{"_index":1086,"title":{},"body":{"components/HelpComponent.html":{}}}],["dragstartstatus",{"_index":669,"title":{},"body":{"components/BoardComponent.html":{}}}],["dropdown",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["dropping",{"_index":1087,"title":{},"body":{"components/HelpComponent.html":{}}}],["due",{"_index":1077,"title":{},"body":{"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{}}}],["due.length",{"_index":1637,"title":{},"body":{"components/SummaryComponent.html":{}}}],["during",{"_index":641,"title":{},"body":{"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{}}}],["dynamic",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["e07d47",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":2092,"title":{},"body":{"index.html":{}}}],["e98366",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1363,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["edit",{"_index":16,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["editable",{"_index":1519,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["editing",{"_index":106,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["editinputref",{"_index":1523,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["edits",{"_index":1544,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["edittask",{"_index":1787,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["editthistask",{"_index":1789,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["educational",{"_index":1036,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["effective",{"_index":1020,"title":{},"body":{"components/HelpComponent.html":{}}}],["effectively",{"_index":1096,"title":{},"body":{"components/HelpComponent.html":{}}}],["efficiency",{"_index":1025,"title":{},"body":{"components/HelpComponent.html":{}}}],["element",{"_index":204,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["element.scrollheight",{"_index":653,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["element.scrollintoview",{"_index":647,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["element.scrolltop",{"_index":652,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["elementid",{"_index":634,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["elementref",{"_index":1372,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["email",{"_index":84,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"injectables/UsersService.html":{}}}],["email'},{'name",{"_index":226,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["email.component.html",{"_index":895,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":896,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.valid",{"_index":192,"title":{},"body":{"components/AddContactComponent.html":{}}}],["email/email.component",{"_index":829,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["email/phone",{"_index":795,"title":{},"body":{"classes/Contact.html":{}}}],["emailcomponent",{"_index":225,"title":{"components/EmailComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["emailtaken",{"_index":38,"title":{},"body":{"components/AddContactComponent.html":{}}}],["emit",{"_index":131,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["emits",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["emitting",{"_index":116,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["employees",{"_index":1229,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["empty",{"_index":747,"title":{},"body":{"components/BoardComponent.html":{},"classes/Task.html":{}}}],["end",{"_index":2091,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":1104,"title":{},"body":{"components/HelpComponent.html":{}}}],["ensure",{"_index":1042,"title":{},"body":{"components/HelpComponent.html":{}}}],["enter",{"_index":1456,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["enter.stoppropagation",{"_index":1575,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["entered",{"_index":86,"title":{},"body":{"components/AddContactComponent.html":{}}}],["environment",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.badge_colors[this.color_id",{"_index":473,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["environment.base_url",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["environments/environment.development",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1080,"title":{},"body":{"components/HelpComponent.html":{}}}],["even",{"_index":1213,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["event",{"_index":118,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["eventemitter",{"_index":67,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["events",{"_index":643,"title":{},"body":{"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["eventsource(environment.base_url",{"_index":1883,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":91,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{}}}],["execute",{"_index":2089,"title":{},"body":{"index.html":{}}}],["executed",{"_index":1874,"title":{},"body":{"injectables/TasksService.html":{}}}],["exemplary",{"_index":1206,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["exercise",{"_index":1037,"title":{},"body":{"components/HelpComponent.html":{}}}],["exist",{"_index":1681,"title":{},"body":{"classes/Task.html":{}}}],["existing",{"_index":863,"title":{},"body":{"injectables/ContactsService.html":{}}}],["exists",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":1045,"title":{},"body":{"components/HelpComponent.html":{}}}],["exploring",{"_index":1055,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["export",{"_index":154,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":1192,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["extend",{"_index":98,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["extended",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["extending",{"_index":1468,"title":{},"body":{"components/SlideComponent.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["extensive",{"_index":1039,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["false",{"_index":126,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["fddc2f",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fe68c4",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["february",{"_index":1641,"title":{},"body":{"components/SummaryComponent.html":{}}}],["feedback",{"_index":714,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["feel",{"_index":1101,"title":{},"body":{"components/HelpComponent.html":{}}}],["fees",{"_index":1236,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["fetched",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetches",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":1289,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":2077,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1064,"title":{},"body":{"components/HelpComponent.html":{}}}],["filter",{"_index":664,"title":{},"body":{"components/BoardComponent.html":{}}}],["filtered",{"_index":1600,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["find",{"_index":1057,"title":{},"body":{"components/HelpComponent.html":{}}}],["first",{"_index":2097,"title":{},"body":{"index.html":{}}}],["fit",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["fitness",{"_index":1196,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["flow",{"_index":1026,"title":{},"body":{"components/HelpComponent.html":{}}}],["focus",{"_index":1368,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuses",{"_index":1549,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["focuslastcharacter",{"_index":1352,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuslastcharacter(input",{"_index":1365,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuslastposition",{"_index":1528,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["following",{"_index":1134,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["for(assignment",{"_index":1774,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["form",{"_index":17,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["form'},{'name",{"_index":258,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["form.component",{"_index":1271,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["form.component.ts",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["form.form.valid",{"_index":166,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.submitted",{"_index":165,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form/overlay",{"_index":74,"title":{},"body":{"components/AddContactComponent.html":{}}}],["form/registration",{"_index":1270,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["format",{"_index":453,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["formatted",{"_index":455,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["formclick",{"_index":1529,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["formdata",{"_index":39,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formmode",{"_index":1256,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["formsmodule",{"_index":29,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["formsubscription",{"_index":1524,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["formula",{"_index":901,"title":{},"body":{"components/GreetingComponent.html":{}}}],["found",{"_index":889,"title":{},"body":{"injectables/ContactsService.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["four",{"_index":1058,"title":{},"body":{"components/HelpComponent.html":{}}}],["frederic",{"_index":1119,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["free",{"_index":1102,"title":{},"body":{"components/HelpComponent.html":{}}}],["frontend",{"_index":612,"title":{},"body":{"classes/AuthUser.html":{}}}],["früchtenicht",{"_index":1116,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["full",{"_index":730,"title":{},"body":{"components/BoardComponent.html":{}}}],["function",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functional",{"_index":967,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["functions",{"_index":2062,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functon",{"_index":724,"title":{},"body":{"components/BoardComponent.html":{}}}],["further",{"_index":2100,"title":{},"body":{"index.html":{}}}],["general",{"_index":974,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{}}}],["generate",{"_index":910,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["generated",{"_index":2066,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1821,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["getcolor",{"_index":431,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["getcurrentdate",{"_index":1693,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentroute",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["getcurrentuid",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["getduetotext",{"_index":1659,"title":{},"body":{"classes/Task.html":{}}}],["getfieldcontainerrefinput",{"_index":1353,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getfieldcontainerrefinput(containerref",{"_index":1371,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getfilteredtasks",{"_index":1592,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["getfilteredtasks(status",{"_index":1598,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["getgreeting",{"_index":907,"title":{},"body":{"components/GreetingComponent.html":{}}}],["getinitials",{"_index":1309,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["getlocalrememberme",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmosturgent",{"_index":1593,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getsubtasksdonenumber",{"_index":1719,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["getsubtasksdonenumber()}}/{{task.subtasks.length",{"_index":1772,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["gettaskbyid",{"_index":678,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(id",{"_index":728,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["gettasknumber",{"_index":1594,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getting",{"_index":2064,"title":{"index.html":{}},"body":{}}],["geturgent",{"_index":1595,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getuserbyappid",{"_index":1933,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyappid(id",{"_index":1938,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyauthid",{"_index":1934,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyauthid(id",{"_index":1940,"title":{},"body":{"injectables/UsersService.html":{}}}],["gmbh",{"_index":1148,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["go",{"_index":1062,"title":{},"body":{"components/HelpComponent.html":{},"index.html":{}}}],["goodwill",{"_index":1210,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gotoboard",{"_index":1489,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["greeting",{"_index":900,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["greeting'},{'name",{"_index":228,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["greeting.component.html",{"_index":904,"title":{},"body":{"components/GreetingComponent.html":{}}}],["greeting.component.scss",{"_index":905,"title":{},"body":{"components/GreetingComponent.html":{}}}],["greeting/greeting.component",{"_index":1621,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcomponent",{"_index":227,"title":{"components/GreetingComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["group",{"_index":1006,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["guarantee",{"_index":1046,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["guest",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["guestlogin",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["guestsub",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["guide",{"_index":998,"title":{},"body":{"components/HelpComponent.html":{}}}],["guidelines",{"_index":1137,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["handle",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["handled",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["handles",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["harass",{"_index":1178,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["harm",{"_index":1179,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["harmless",{"_index":1223,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["hasuserincontacts",{"_index":432,"title":{},"body":{"classes/AppUser.html":{}}}],["hasuserincontacts(appuser",{"_index":448,"title":{},"body":{"classes/AppUser.html":{}}}],["header",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":230,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["header.component.html",{"_index":937,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":938,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":229,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headline",{"_index":232,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["headlineothercomponent",{"_index":231,"title":{"components/HeadlineOtherComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["headlineslogancomponent",{"_index":234,"title":{"components/HeadlineSloganComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["height",{"_index":737,"title":{},"body":{"components/BoardComponent.html":{}}}],["help",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"index.html":{}}}],["help'},{'name",{"_index":237,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["help.component.html",{"_index":992,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.scss",{"_index":993,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpcomponent",{"_index":236,"title":{"components/HelpComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["here",{"_index":999,"title":{},"body":{"components/HelpComponent.html":{}}}],["hex",{"_index":447,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["hexadecimal",{"_index":445,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["hide",{"_index":732,"title":{},"body":{"components/BoardComponent.html":{}}}],["hidetaskform",{"_index":679,"title":{},"body":{"components/BoardComponent.html":{}}}],["highly",{"_index":1019,"title":{},"body":{"components/HelpComponent.html":{}}}],["hold",{"_index":1222,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["hook",{"_index":1260,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["hostlistener",{"_index":766,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlistener('window:resize",{"_index":734,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlisteners",{"_index":686,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":203,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["htmlinputelement",{"_index":1366,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["http",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2074,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["httpheaders().set('authorization",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1330,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["icon",{"_index":1287,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon'},{'name",{"_index":248,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["icon.component",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["icon.component.html",{"_index":1294,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon.component.scss",{"_index":1295,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon.component.ts",{"_index":1286,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:15",{"_index":1335,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["icon.component.ts:17",{"_index":1297,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["icon/password",{"_index":1285,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["icon/prio",{"_index":1328,"title":{},"body":{"components/PrioIconComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["icons",{"_index":1293,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["id",{"_index":429,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1394,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["if(!editing",{"_index":1581,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["if(!isuser",{"_index":194,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((email.touched",{"_index":191,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((name.touched",{"_index":187,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((password.touched",{"_index":1449,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if((phone.touched",{"_index":196,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if(assignment",{"_index":1817,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["if(autherror.includes('wrong",{"_index":1460,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(autherror.includes(\\'wrong",{"_index":1462,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(currenthour",{"_index":933,"title":{},"body":{"components/GreetingComponent.html":{}}}],["if(currentuser",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(currentusername",{"_index":934,"title":{},"body":{"components/GreetingComponent.html":{}}}],["if(designateasyou",{"_index":830,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["if(editing",{"_index":1579,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["if(formdata.password.length",{"_index":1448,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(formdata.passwordconfirmation.length",{"_index":1457,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(formmode",{"_index":1274,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["if(message",{"_index":1931,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["if(mode",{"_index":183,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if(name",{"_index":1325,"title":{},"body":{"components/PersonBadgeComponent.html":{},"components/StatsItemComponent.html":{}}}],["if(password.value.length",{"_index":1452,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(passwordconfirmation.touched",{"_index":1458,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(prio",{"_index":1336,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["if(taskformid",{"_index":787,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(tasksarrayindex",{"_index":1915,"title":{},"body":{"injectables/TasksService.html":{}}}],["if(wrapper",{"_index":656,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["illegal",{"_index":1176,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["immediately",{"_index":1473,"title":{},"body":{"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["implements",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"index.html":{}}}],["implied",{"_index":1193,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["import",{"_index":138,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":1034,"title":{},"body":{"components/HelpComponent.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["imprint",{"_index":1114,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["in/sign",{"_index":1247,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["incidental",{"_index":1203,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["include",{"_index":911,"title":{},"body":{"components/GreetingComponent.html":{}}}],["included",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["includes",{"_index":1249,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["including",{"_index":816,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{}}}],["indemnify",{"_index":1220,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["indemnity",{"_index":1219,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1202,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["individual",{"_index":1073,"title":{},"body":{"components/HelpComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":866,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{}}}],["infringement",{"_index":1199,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["inherited",{"_index":71,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["init",{"_index":1834,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["initialization",{"_index":103,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SlideComponent.html":{}}}],["initialize",{"_index":437,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["initializes",{"_index":914,"title":{},"body":{"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{}}}],["initializing",{"_index":1801,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["initials",{"_index":1302,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["inituser",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["inituser(userdata",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["initusername",{"_index":908,"title":{},"body":{"components/GreetingComponent.html":{}}}],["initusername(currentuser",{"_index":912,"title":{},"body":{"components/GreetingComponent.html":{}}}],["inject",{"_index":141,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["inject(authservice",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/SummaryComponent.html":{}}}],["inject(contactsservice",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(router",{"_index":758,"title":{},"body":{"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{}}}],["inject(tasksservice",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["inject(usersservice",{"_index":135,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["injectable",{"_index":486,"title":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":650,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/HeadlineOtherComponent.html":{}}}],["input",{"_index":139,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["input('contact",{"_index":155,"title":{},"body":{"components/AddContactComponent.html":{}}}],["input.focus",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["input.setselectionrange(input.value.length",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["input.value.length",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["inputcontact",{"_index":156,"title":{},"body":{"components/AddContactComponent.html":{}}}],["inputs",{"_index":52,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["instance",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["intangible",{"_index":1211,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intended",{"_index":1038,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["interact",{"_index":1067,"title":{},"body":{"components/HelpComponent.html":{}}}],["interactions",{"_index":1184,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intercepts",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":1033,"title":{},"body":{"components/HelpComponent.html":{}}}],["intimidate",{"_index":1181,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intro",{"_index":1250,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["introductory",{"_index":1588,"title":{},"body":{"components/SummaryComponent.html":{}}}],["intuitive",{"_index":1031,"title":{},"body":{"components/HelpComponent.html":{}}}],["irreversible",{"_index":1095,"title":{},"body":{"components/HelpComponent.html":{}}}],["isassignedto",{"_index":1660,"title":{},"body":{"classes/Task.html":{}}}],["isassignedto(appuser",{"_index":1682,"title":{},"body":{"classes/Task.html":{}}}],["isbreak",{"_index":1720,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["isbreak(char",{"_index":1728,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["isemailavailable",{"_index":1935,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemailavailable(email",{"_index":1947,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemailtaken",{"_index":47,"title":{},"body":{"components/AddContactComponent.html":{}}}],["isuser",{"_index":40,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/UsersService.html":{}}}],["isuser(contact",{"_index":1950,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalid",{"_index":1354,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isvalid(form",{"_index":1377,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["item",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item'},{'name",{"_index":222,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["item.component",{"_index":1619,"title":{},"body":{"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["item.component.html",{"_index":818,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.scss",{"_index":819,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts",{"_index":815,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:17",{"_index":1491,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["item.component.ts:18",{"_index":827,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts:19",{"_index":825,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts:20",{"_index":823,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:21",{"_index":826,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:22",{"_index":828,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:23",{"_index":824,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:32",{"_index":1492,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["item/contact",{"_index":814,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["item/stats",{"_index":1485,"title":{},"body":{"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["january",{"_index":1640,"title":{},"body":{"components/SummaryComponent.html":{}}}],["japanese",{"_index":1015,"title":{},"body":{"components/HelpComponent.html":{}}}],["join",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"index.html":{}}}],["json",{"_index":452,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["json.id",{"_index":811,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["json.parse(item",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(remember",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonsubtasks",{"_index":1703,"title":{},"body":{"classes/Task.html":{}}}],["jsonsubtasks.push(s.tojson",{"_index":1705,"title":{},"body":{"classes/Task.html":{}}}],["july",{"_index":1241,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["june",{"_index":1644,"title":{},"body":{"components/SummaryComponent.html":{}}}],["kanban",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["karma",{"_index":2090,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1945,"title":{},"body":{"injectables/UsersService.html":{}}}],["key",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["keydown.enter",{"_index":1541,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["kind",{"_index":1191,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["landing",{"_index":947,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{}}}],["landscape",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["large",{"_index":1310,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["last",{"_index":1369,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["lastvaluefrom",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["lastvaluefrom(this.http.delete(url",{"_index":891,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["lastvaluefrom(this.http.get(url",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["lastvaluefrom(this.http.post(url",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["lastvaluefrom(this.http.put(url",{"_index":883,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["latest",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{}}}],["lawful",{"_index":1170,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["laws",{"_index":1174,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["layout",{"_index":1587,"title":{},"body":{"components/SummaryComponent.html":{}}}],["leaving",{"_index":746,"title":{},"body":{"components/BoardComponent.html":{}}}],["left",{"_index":482,"title":{},"body":{"components/ArrowBackBtnComponent.html":{}}}],["legal",{"_index":239,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["legal_notice",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["legalnoticecomponent",{"_index":238,"title":{"components/LegalNoticeComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["legend",{"_index":202,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["length",{"_index":1740,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["leverages",{"_index":1027,"title":{},"body":{"components/HelpComponent.html":{}}}],["liability",{"_index":1188,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["liable",{"_index":1200,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["lifecycle",{"_index":1259,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["limit",{"_index":1023,"title":{},"body":{"components/HelpComponent.html":{}}}],["limitation",{"_index":1187,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["limited",{"_index":1194,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["linked",{"_index":894,"title":{},"body":{"components/EmailComponent.html":{}}}],["list",{"_index":221,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":275,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["list.component",{"_index":773,"title":{},"body":{"components/BoardComponent.html":{}}}],["list.component.ts",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["list/task",{"_index":772,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["listed",{"_index":1141,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["listen",{"_index":1943,"title":{},"body":{"injectables/UsersService.html":{}}}],["listens",{"_index":1867,"title":{},"body":{"injectables/TasksService.html":{}}}],["lists",{"_index":1059,"title":{},"body":{"components/HelpComponent.html":{}}}],["literal",{"_index":460,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["loaded",{"_index":711,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["local",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["locallogout",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["locally",{"_index":845,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["localstorage.getitem('remember_log_in",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.removeitem('token",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('remember_log_in",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":242,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["logged",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{}}}],["loggedin",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["logging",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["login",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login(email",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["login/guest",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginasguest",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginpagecomponent",{"_index":241,"title":{"components/LogInPageComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["logout",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["longer",{"_index":1742,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["loss",{"_index":1208,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["losses",{"_index":1212,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["lost",{"_index":709,"title":{},"body":{"components/BoardComponent.html":{}}}],["low",{"_index":1334,"title":{},"body":{"components/PrioIconComponent.html":{},"classes/Task.html":{}}}],["main/contacts/email/email.component",{"_index":996,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["main_routes",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["manage",{"_index":1029,"title":{},"body":{"components/HelpComponent.html":{}}}],["management",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["manages",{"_index":1251,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["manner",{"_index":1520,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["manual",{"_index":991,"title":{},"body":{"components/HelpComponent.html":{}}}],["manually",{"_index":109,"title":{},"body":{"components/AddContactComponent.html":{}}}],["many",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["marcel",{"_index":1121,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["march",{"_index":1642,"title":{},"body":{"components/SummaryComponent.html":{}}}],["marking",{"_index":1288,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["marks",{"_index":1730,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["match",{"_index":1362,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["matching",{"_index":284,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1168,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["math.floor(math.random",{"_index":809,"title":{},"body":{"classes/Contact.html":{}}}],["maximize",{"_index":1024,"title":{},"body":{"components/HelpComponent.html":{}}}],["meaning",{"_index":1017,"title":{},"body":{"components/HelpComponent.html":{}}}],["meaningful",{"_index":89,"title":{},"body":{"components/AddContactComponent.html":{}}}],["medium",{"_index":1333,"title":{},"body":{"components/PrioIconComponent.html":{},"classes/Task.html":{}}}],["meet",{"_index":456,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["memory",{"_index":850,"title":{},"body":{"injectables/ContactsService.html":{}}}],["menu",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/TaskCardComponent.html":{}}}],["menu'},{'name",{"_index":245,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["menu.component.html",{"_index":1280,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1281,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":244,"title":{"components/MenuComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["merchantability",{"_index":1195,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["message",{"_index":1585,"title":{},"body":{"components/SummaryComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["method",{"_index":101,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["milliseconds",{"_index":1263,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["miscellaneous",{"_index":2061,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":1677,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["mobile",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["model",{"_index":1504,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["models/app",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["models/contact",{"_index":148,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/UsersService.html":{}}}],["models/subtask",{"_index":1565,"title":{},"body":{"components/SubtaskComponent.html":{},"injectables/TasksService.html":{}}}],["models/task",{"_index":767,"title":{},"body":{"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["modes",{"_index":1252,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["modification",{"_index":1157,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["modules",{"_index":2101,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":1611,"title":{},"body":{"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["months",{"_index":1639,"title":{},"body":{"components/SummaryComponent.html":{}}}],["months[date.getmonth",{"_index":1650,"title":{},"body":{"components/SummaryComponent.html":{}}}],["more",{"_index":1099,"title":{},"body":{"components/HelpComponent.html":{},"components/TaskViewComponent.html":{},"index.html":{}}}],["move",{"_index":1090,"title":{},"body":{"components/HelpComponent.html":{}}}],["moves",{"_index":1082,"title":{},"body":{"components/HelpComponent.html":{}}}],["moving",{"_index":1081,"title":{},"body":{"components/HelpComponent.html":{}}}],["name",{"_index":105,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name.length",{"_index":1326,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["name.valid",{"_index":189,"title":{},"body":{"components/AddContactComponent.html":{}}}],["named",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["nameparts",{"_index":1320,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["nameparts.map(part",{"_index":1322,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["naming",{"_index":458,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["navigate",{"_index":946,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/StatsItemComponent.html":{},"index.html":{}}}],["navigation",{"_index":697,"title":{},"body":{"components/BoardComponent.html":{},"components/HeaderComponent.html":{}}}],["nearest",{"_index":651,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["necessary",{"_index":608,"title":{},"body":{"classes/AuthUser.html":{}}}],["need",{"_index":2096,"title":{},"body":{"index.html":{}}}],["never",{"_index":610,"title":{},"body":{"classes/AuthUser.html":{},"components/BoardComponent.html":{}}}],["new",{"_index":63,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["newpassword",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["newtaskstatus",{"_index":1824,"title":{},"body":{"injectables/TasksService.html":{}}}],["next",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":2071,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":1466,"title":{},"body":{"components/SlideComponent.html":{}}}],["ngform",{"_index":112,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngondestroy",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{}}}],["ngoninit",{"_index":48,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["non",{"_index":1198,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["none",{"_index":1654,"title":{},"body":{"components/SummaryComponent.html":{}}}],["note",{"_index":1035,"title":{},"body":{"components/HelpComponent.html":{}}}],["notice",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["notice'},{'name",{"_index":240,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["notice.component.html",{"_index":1112,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.scss",{"_index":1113,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts",{"_index":1111,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notice/legal",{"_index":1110,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notices",{"_index":1240,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notification",{"_index":280,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["notification.component",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["notification.component.html",{"_index":1927,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.scss",{"_index":1928,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts",{"_index":1925,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["notification.component.ts:16",{"_index":1929,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:17",{"_index":1930,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification/toast",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["november",{"_index":1648,"title":{},"body":{"components/SummaryComponent.html":{}}}],["now",{"_index":1069,"title":{},"body":{"components/HelpComponent.html":{}}}],["null",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{}}}],["number",{"_index":199,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["obj",{"_index":436,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.assigned_to",{"_index":1690,"title":{},"body":{"classes/Task.html":{}}}],["obj.category",{"_index":1697,"title":{},"body":{"classes/Task.html":{}}}],["obj.color_id",{"_index":469,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["obj.contacts",{"_index":471,"title":{},"body":{"classes/AppUser.html":{}}}],["obj.description",{"_index":1688,"title":{},"body":{"classes/Task.html":{}}}],["obj.due",{"_index":1692,"title":{},"body":{"classes/Task.html":{}}}],["obj.email",{"_index":621,"title":{},"body":{"classes/AuthUser.html":{},"classes/Contact.html":{}}}],["obj.id",{"_index":463,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.name",{"_index":806,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{}}}],["obj.phone",{"_index":808,"title":{},"body":{"classes/Contact.html":{}}}],["obj.prio",{"_index":1695,"title":{},"body":{"classes/Task.html":{}}}],["obj.status",{"_index":1514,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.subtasks",{"_index":1698,"title":{},"body":{"classes/Task.html":{}}}],["obj.subtasks.foreach((sdata",{"_index":1700,"title":{},"body":{"classes/Task.html":{}}}],["obj.task",{"_index":1512,"title":{},"body":{"classes/Subtask.html":{}}}],["obj.title",{"_index":1686,"title":{},"body":{"classes/Task.html":{}}}],["obj.user",{"_index":467,"title":{},"body":{"classes/AppUser.html":{}}}],["obj.username",{"_index":618,"title":{},"body":{"classes/AuthUser.html":{}}}],["obj.username.replace('_",{"_index":619,"title":{},"body":{"classes/AuthUser.html":{}}}],["object",{"_index":442,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["october",{"_index":1647,"title":{},"body":{"components/SummaryComponent.html":{}}}],["officers",{"_index":1226,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["oldenburg",{"_index":1127,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["onbackclick",{"_index":971,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["once",{"_index":1065,"title":{},"body":{"components/HelpComponent.html":{}}}],["ondestroy",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["one",{"_index":1083,"title":{},"body":{"components/HelpComponent.html":{},"components/PrioIconComponent.html":{},"components/SummaryComponent.html":{}}}],["oninit",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["onloginpage",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize",{"_index":680,"title":{},"body":{"components/BoardComponent.html":{}}}],["onsubmit",{"_index":49,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onsubmit(form",{"_index":111,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onto",{"_index":1737,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["oops",{"_index":1439,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["open",{"_index":707,"title":{},"body":{"components/BoardComponent.html":{}}}],["opened",{"_index":690,"title":{},"body":{"components/BoardComponent.html":{}}}],["operations",{"_index":1822,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":121,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1804,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["other'},{'name",{"_index":233,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["other.component",{"_index":995,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["other.component.html",{"_index":969,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.scss",{"_index":970,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts",{"_index":965,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"coverage.html":{}}}],["other.component.ts:19",{"_index":972,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:20",{"_index":976,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:21",{"_index":975,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:29",{"_index":973,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other/headline",{"_index":964,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["other_routes",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwise",{"_index":1952,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["output",{"_index":140,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["outputs",{"_index":54,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["overlay",{"_index":19,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["override",{"_index":157,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"index.html":{},"overview.html":{}}}],["owned",{"_index":1154,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["ownership",{"_index":1145,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["package",{"_index":2046,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["paetzold",{"_index":1120,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["page",{"_index":948,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/StatsItemComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":243,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["page.component.html",{"_index":1253,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.scss",{"_index":1254,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts",{"_index":1246,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:20",{"_index":1268,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:21",{"_index":1269,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:28",{"_index":1258,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:36",{"_index":1264,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page/log",{"_index":1245,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["page/registration",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["param",{"_index":164,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":120,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["params.get('token",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["paramsub",{"_index":1345,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parent",{"_index":119,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["parseint(parts[1",{"_index":1712,"title":{},"body":{"classes/Task.html":{}}}],["parseint(parts[2",{"_index":1713,"title":{},"body":{"classes/Task.html":{}}}],["part",{"_index":1009,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["part.charat(0).touppercase()).join",{"_index":1323,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["particular",{"_index":1197,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["partners",{"_index":1225,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["parts",{"_index":1709,"title":{},"body":{"classes/Task.html":{}}}],["parts[0",{"_index":1711,"title":{},"body":{"classes/Task.html":{}}}],["password",{"_index":247,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["password'},{'name",{"_index":261,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["password.component.html",{"_index":1342,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1343,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:106",{"_index":1383,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:120",{"_index":1378,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:129",{"_index":1360,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:137",{"_index":1395,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":1359,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":1381,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1390,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1373,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:84",{"_index":1367,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:97",{"_index":1386,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.valid",{"_index":1451,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirmation",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordconfirmationcontainerref",{"_index":1346,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordconfirmationfieldtype",{"_index":1347,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordcontainerref",{"_index":1348,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordfieldtype",{"_index":1349,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordiconcomponent",{"_index":246,"title":{"components/PasswordIconComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":1361,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["performance",{"_index":1218,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["performs",{"_index":919,"title":{},"body":{"components/GreetingComponent.html":{}}}],["permanently",{"_index":1091,"title":{},"body":{"components/HelpComponent.html":{}}}],["person",{"_index":249,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["person's",{"_index":1301,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["personal",{"_index":1150,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["personalized",{"_index":899,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["personbadgecomponent",{"_index":30,"title":{"components/PersonBadgeComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["phone",{"_index":198,"title":{},"body":{"components/AddContactComponent.html":{},"classes/Contact.html":{}}}],["phone.valid",{"_index":197,"title":{},"body":{"components/AddContactComponent.html":{}}}],["pixels",{"_index":738,"title":{},"body":{"components/BoardComponent.html":{}}}],["platform",{"_index":2093,"title":{},"body":{"index.html":{}}}],["please",{"_index":1092,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pointing",{"_index":481,"title":{},"body":{"components/ArrowBackBtnComponent.html":{}}}],["policies",{"_index":1136,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["policy",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["policy'},{'name",{"_index":255,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["policy.component.ts",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["policy/privacy",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["position",{"_index":1370,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["possibility",{"_index":1215,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["possible",{"_index":1044,"title":{},"body":{"components/HelpComponent.html":{}}}],["post",{"_index":843,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/UsersService.html":{}}}],["presented",{"_index":1140,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["prevent",{"_index":1471,"title":{},"body":{"components/SlideComponent.html":{}}}],["prevention",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["previous",{"_index":708,"title":{},"body":{"components/BoardComponent.html":{},"components/SubtaskComponent.html":{}}}],["previousname",{"_index":1525,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["primary",{"_index":1276,"title":{},"body":{"components/MenuComponent.html":{}}}],["principles",{"_index":1028,"title":{},"body":{"components/HelpComponent.html":{}}}],["printdate",{"_index":1596,"title":{},"body":{"components/SummaryComponent.html":{}}}],["printdate(due",{"_index":1608,"title":{},"body":{"components/SummaryComponent.html":{}}}],["printdescription",{"_index":1721,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["printed",{"_index":1761,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["prints",{"_index":1739,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["prio",{"_index":252,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["prioiconcomponent",{"_index":251,"title":{"components/PrioIconComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["priority",{"_index":1329,"title":{},"body":{"components/PrioIconComponent.html":{},"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["privacy",{"_index":254,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["privacy_policy",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["privacypolicycomponent",{"_index":253,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":1131,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["profits",{"_index":1209,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["progress",{"_index":713,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["prohibited",{"_index":1161,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["project",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"index.html":{}}}],["projects",{"_index":1030,"title":{},"body":{"components/HelpComponent.html":{}}}],["promise",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["property",{"_index":125,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{}}}],["proprietary",{"_index":1162,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["provide",{"_index":1001,"title":{},"body":{"components/HelpComponent.html":{}}}],["provided",{"_index":1189,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["providedin",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["providehttpclient(withfetch",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([auth_token_interceptor",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["purpose",{"_index":1149,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["purposes",{"_index":1171,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["put",{"_index":864,"title":{},"body":{"injectables/ContactsService.html":{}}}],["quality",{"_index":1052,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["questions",{"_index":1100,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["re",{"_index":1392,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{}}}],["react",{"_index":1735,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["read",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["readonly",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["real",{"_index":1868,"title":{},"body":{"injectables/TasksService.html":{}}}],["reasonable",{"_index":1235,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["recommended",{"_index":1474,"title":{},"body":{"components/SlideComponent.html":{}}}],["redeem",{"_index":1546,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["reduced",{"_index":701,"title":{},"body":{"components/BoardComponent.html":{}}}],["reference",{"_index":1374,"title":{},"body":{"components/ResetPasswordComponent.html":{},"index.html":{}}}],["reflect",{"_index":1085,"title":{},"body":{"components/HelpComponent.html":{}}}],["reflects",{"_index":1098,"title":{},"body":{"components/HelpComponent.html":{}}}],["regarding",{"_index":1053,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["register",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(username",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":195,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":257,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["registrationformcomponent",{"_index":256,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["regulations",{"_index":1175,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["related",{"_index":1944,"title":{},"body":{"injectables/UsersService.html":{}}}],["relating",{"_index":1237,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["reliability",{"_index":1049,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["reload",{"_index":1559,"title":{},"body":{"components/SubtaskComponent.html":{},"index.html":{}}}],["remains",{"_index":609,"title":{},"body":{"classes/AuthUser.html":{}}}],["remember",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"components/HelpComponent.html":{}}}],["remember_log_in",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["remembrance",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":853,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{}}}],["removed",{"_index":857,"title":{},"body":{"injectables/ContactsService.html":{}}}],["removes",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["replication",{"_index":1159,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["represent",{"_index":1072,"title":{},"body":{"components/HelpComponent.html":{}}}],["represents",{"_index":423,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["reproduction",{"_index":1156,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["request",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestpasswordreset",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestpasswordreset(email",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["requests",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":190,"title":{},"body":{"components/AddContactComponent.html":{},"components/HelpComponent.html":{}}}],["requirements",{"_index":459,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["requires",{"_index":1097,"title":{},"body":{"components/HelpComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{}}}],["reset",{"_index":260,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["resetemailtaken",{"_index":50,"title":{},"body":{"components/AddContactComponent.html":{}}}],["resetpassword",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(newpassword",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword/request",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":259,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["resetpasswordform.submitted",{"_index":1450,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resets",{"_index":124,"title":{},"body":{"components/AddContactComponent.html":{}}}],["resetting",{"_index":1397,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resolution",{"_index":693,"title":{},"body":{"components/BoardComponent.html":{}}}],["resolves",{"_index":1954,"title":{},"body":{"injectables/UsersService.html":{}}}],["resolving",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["resp",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["respective",{"_index":661,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["response",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["responsible",{"_index":1183,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["responsive",{"_index":1311,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["result",{"_index":96,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["results",{"_index":283,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1165,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["retrieve",{"_index":1614,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["retrieved",{"_index":739,"title":{},"body":{"components/BoardComponent.html":{}}}],["retrieves",{"_index":444,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{}}}],["return",{"_index":170,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":76,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1163,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["root",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":212,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["route",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{}}}],["routermodule",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2070,"title":{},"body":{"index.html":{}}}],["running",{"_index":2085,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["s.status",{"_index":1766,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["save",{"_index":201,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{}}}],["saved",{"_index":710,"title":{},"body":{"components/BoardComponent.html":{}}}],["saves",{"_index":1545,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["scaffolding",{"_index":2079,"title":{},"body":{"index.html":{}}}],["schiller",{"_index":1122,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["schneider",{"_index":1118,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["scope",{"_index":1144,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["scratch",{"_index":794,"title":{},"body":{"classes/Contact.html":{}}}],["screen",{"_index":692,"title":{},"body":{"components/BoardComponent.html":{}}}],["screens",{"_index":699,"title":{},"body":{"components/BoardComponent.html":{}}}],["scroll",{"_index":632,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolling",{"_index":626,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollintoview",{"_index":627,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollintoview(elementid",{"_index":630,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollspeed",{"_index":644,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolltobottom",{"_index":628,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolltobottom(elementid",{"_index":636,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollwhiledragging",{"_index":629,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollwhiledragging(scrollspeed",{"_index":639,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["search",{"_index":663,"title":{},"body":{"components/BoardComponent.html":{}}}],["searchfilter",{"_index":670,"title":{},"body":{"components/BoardComponent.html":{}}}],["secondary",{"_index":936,"title":{},"body":{"components/HeaderComponent.html":{}}}],["section",{"_index":1063,"title":{},"body":{"components/HelpComponent.html":{}}}],["seen",{"_index":1487,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["selected",{"_index":821,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["sends",{"_index":842,"title":{},"body":{"injectables/ContactsService.html":{}}}],["sense",{"_index":90,"title":{},"body":{"components/AddContactComponent.html":{}}}],["sent",{"_index":611,"title":{},"body":{"classes/AuthUser.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["separated",{"_index":983,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["separator",{"_index":984,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["september",{"_index":1646,"title":{},"body":{"components/SummaryComponent.html":{}}}],["serve",{"_index":2072,"title":{},"body":{"index.html":{}}}],["server",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["server's",{"_index":846,"title":{},"body":{"injectables/ContactsService.html":{}}}],["serves",{"_index":1248,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["service",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["services/auth.service",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{}}}],["services/contacts.service",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["services/tasks.service",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["services/users.service",{"_index":153,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["session",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{}}}],["setdragcardheight",{"_index":681,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragcardheight(height",{"_index":735,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragstartstatus",{"_index":682,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragstartstatus(status",{"_index":741,"title":{},"body":{"components/BoardComponent.html":{}}}],["setheaders",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlocalrememberme",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["setlocalrememberme(remember",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["sets",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"injectables/UsersService.html":{}}}],["setstatus",{"_index":1722,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["setstatus(status",{"_index":1747,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["settimeout",{"_index":178,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["setting",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":1467,"title":{},"body":{"components/SlideComponent.html":{}}}],["setuser",{"_index":1615,"title":{},"body":{"components/SummaryComponent.html":{}}}],["shape",{"_index":790,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["shared/header/header.component",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/menu/menu.component",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":745,"title":{},"body":{"components/BoardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["showheaderdropdown",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["showing",{"_index":1300,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["shows",{"_index":1518,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["showtaskform",{"_index":683,"title":{},"body":{"components/BoardComponent.html":{}}}],["showtaskform(id",{"_index":743,"title":{},"body":{"components/BoardComponent.html":{}}}],["showtoastmsg",{"_index":1350,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sign",{"_index":1267,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["signaled",{"_index":1745,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["slide",{"_index":58,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["slide'},{'name",{"_index":262,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slide.component.html",{"_index":1475,"title":{},"body":{"components/SlideComponent.html":{}}}],["slide.component.scss",{"_index":1476,"title":{},"body":{"components/SlideComponent.html":{}}}],["slidecomponent",{"_index":21,"title":{"components/SlideComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["slidecomponent:28",{"_index":137,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:29",{"_index":72,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:37",{"_index":97,"title":{},"body":{"components/AddContactComponent.html":{}}}],["slidecomponent:44",{"_index":127,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:46",{"_index":1800,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["slideinout",{"_index":51,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidetaskformwrapper",{"_index":684,"title":{},"body":{"components/BoardComponent.html":{}}}],["sliding",{"_index":1465,"title":{},"body":{"components/SlideComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slogan",{"_index":982,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan'},{'name",{"_index":235,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slogan.component",{"_index":1620,"title":{},"body":{"components/SummaryComponent.html":{}}}],["slogan.component.html",{"_index":985,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.scss",{"_index":986,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.ts",{"_index":981,"title":{},"body":{"components/HeadlineSloganComponent.html":{},"coverage.html":{}}}],["slogan.component.ts:16",{"_index":987,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.ts:17",{"_index":988,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan/headline",{"_index":980,"title":{},"body":{"components/HeadlineSloganComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["small",{"_index":479,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/TaskCardComponent.html":{}}}],["smaller",{"_index":698,"title":{},"body":{"components/BoardComponent.html":{}}}],["smooth",{"_index":649,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["solely",{"_index":1182,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["something",{"_index":1440,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sorted",{"_index":660,"title":{},"body":{"components/BoardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["special",{"_index":1204,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["speed",{"_index":645,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/.../app.config.ts",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.ts",{"_index":2063,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:108",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:117",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:125",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/log",{"_index":1244,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["src/app/main/add",{"_index":1515,"title":{},"body":{"components/SubtaskComponent.html":{},"coverage.html":{}}}],["src/app/main/board/board.component.ts",{"_index":658,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/main/board/board.component.ts:100",{"_index":716,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:111",{"_index":749,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:121",{"_index":736,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:131",{"_index":742,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:139",{"_index":720,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:26",{"_index":764,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:27",{"_index":759,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:28",{"_index":761,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:29",{"_index":765,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:30",{"_index":762,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:31",{"_index":763,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:32",{"_index":756,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:33",{"_index":757,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:34",{"_index":760,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:35",{"_index":754,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:43",{"_index":729,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:52",{"_index":752,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:60",{"_index":723,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:70",{"_index":744,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:78",{"_index":731,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:91",{"_index":689,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/task",{"_index":1714,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/add",{"_index":9,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/contact",{"_index":813,"title":{},"body":{"components/ContactListItemComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/contacts.component.ts",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["src/app/main/contacts/email/email.component.ts",{"_index":893,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/email/email.component.ts:15",{"_index":897,"title":{},"body":{"components/EmailComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts",{"_index":898,"title":{},"body":{"components/GreetingComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:18",{"_index":922,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:19",{"_index":923,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:20",{"_index":924,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:28",{"_index":917,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:37",{"_index":916,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:47",{"_index":913,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:60",{"_index":909,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/stats",{"_index":1484,"title":{},"body":{"components/StatsItemComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/summary.component.ts",{"_index":1583,"title":{},"body":{"components/SummaryComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/summary.component.ts:103",{"_index":1609,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:24",{"_index":1616,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:25",{"_index":1618,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:26",{"_index":1617,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:27",{"_index":1597,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:41",{"_index":1607,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:51",{"_index":1612,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:61",{"_index":1599,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:70",{"_index":1606,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:79",{"_index":1604,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:88",{"_index":1602,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/other/help/help.component.ts",{"_index":989,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["src/app/other/legal",{"_index":1109,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["src/app/other/privacy",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["src/app/other/reset",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:101",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:116",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:130",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:145",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:156",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:165",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:176",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:184",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:50",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:65",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:75",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:87",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/autoscroll.service.ts",{"_index":624,"title":{},"body":{"injectables/AutoscrollService.html":{},"coverage.html":{}}}],["src/app/services/autoscroll.service.ts:17",{"_index":631,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/autoscroll.service.ts:27",{"_index":637,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/autoscroll.service.ts:37",{"_index":640,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/contacts.service.ts",{"_index":831,"title":{},"body":{"injectables/ContactsService.html":{},"coverage.html":{}}}],["src/app/services/contacts.service.ts:112",{"_index":852,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:12",{"_index":838,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:126",{"_index":856,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:26",{"_index":858,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:46",{"_index":840,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:61",{"_index":848,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:78",{"_index":861,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:93",{"_index":868,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/tasks.service.ts",{"_index":1820,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/app/services/tasks.service.ts:103",{"_index":1847,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:117",{"_index":1849,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:129",{"_index":1851,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:140",{"_index":1876,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:154",{"_index":1878,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:169",{"_index":1860,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:18",{"_index":1880,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:182",{"_index":1862,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:19",{"_index":1881,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:198",{"_index":1864,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:20",{"_index":1879,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:208",{"_index":1863,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:21",{"_index":1840,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:217",{"_index":1842,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:229",{"_index":1873,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:242",{"_index":1858,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:37",{"_index":1865,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:51",{"_index":1871,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:68",{"_index":1869,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:84",{"_index":1844,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:94",{"_index":1853,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/users.service.ts",{"_index":1932,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/services/users.service.ts:108",{"_index":1951,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:19",{"_index":1956,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:20",{"_index":1937,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:36",{"_index":1942,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:49",{"_index":1953,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:67",{"_index":1939,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:81",{"_index":1941,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:96",{"_index":1948,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":935,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:21",{"_index":942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:22",{"_index":943,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:23",{"_index":944,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:25",{"_index":951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:31",{"_index":949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:40",{"_index":945,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/menu/menu.component.ts",{"_index":1275,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/menu/menu.component.ts:17",{"_index":1282,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:31",{"_index":1283,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/templates/arrow",{"_index":476,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"coverage.html":{}}}],["src/app/templates/close",{"_index":788,"title":{},"body":{"components/CloseBtnComponent.html":{},"coverage.html":{}}}],["src/app/templates/headline",{"_index":963,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"coverage.html":{}}}],["src/app/templates/password",{"_index":1284,"title":{},"body":{"components/PasswordIconComponent.html":{},"coverage.html":{}}}],["src/app/templates/person",{"_index":1298,"title":{},"body":{"components/PersonBadgeComponent.html":{},"coverage.html":{}}}],["src/app/templates/prio",{"_index":1327,"title":{},"body":{"components/PrioIconComponent.html":{},"coverage.html":{}}}],["src/app/templates/slide/slide.component.ts",{"_index":1463,"title":{},"body":{"components/SlideComponent.html":{},"coverage.html":{}}}],["src/app/templates/slide/slide.component.ts:28",{"_index":1481,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:29",{"_index":1477,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:36",{"_index":1478,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:44",{"_index":1480,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/toast",{"_index":1924,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/app",{"_index":421,"title":{},"body":{"classes/AppUser.html":{},"coverage.html":{}}}],["src/models/auth",{"_index":607,"title":{},"body":{"classes/AuthUser.html":{},"coverage.html":{}}}],["src/models/contact.ts",{"_index":793,"title":{},"body":{"classes/Contact.html":{},"coverage.html":{}}}],["src/models/contact.ts:11",{"_index":800,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:12",{"_index":801,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:13",{"_index":799,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:14",{"_index":802,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:15",{"_index":798,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:36",{"_index":804,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:52",{"_index":803,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/subtask.ts",{"_index":1503,"title":{},"body":{"classes/Subtask.html":{},"coverage.html":{}}}],["src/models/subtask.ts:28",{"_index":1510,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:5",{"_index":1507,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:6",{"_index":1509,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:7",{"_index":1508,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:8",{"_index":1506,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/task.ts",{"_index":1655,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/task.ts:10",{"_index":1673,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:11",{"_index":1666,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:12",{"_index":1662,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:13",{"_index":1667,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:14",{"_index":1669,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:15",{"_index":1665,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:16",{"_index":1670,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:17",{"_index":1672,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:18",{"_index":1661,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:46",{"_index":1684,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:69",{"_index":1683,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:79",{"_index":1674,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:9",{"_index":1668,"title":{},"body":{"classes/Task.html":{}}}],["stage",{"_index":1084,"title":{},"body":{"components/HelpComponent.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["start",{"_index":1071,"title":{},"body":{"components/HelpComponent.html":{}}}],["started",{"_index":2065,"title":{"index.html":{}},"body":{}}],["state",{"_index":130,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/PasswordIconComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["statements",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["statistical",{"_index":1584,"title":{},"body":{"components/SummaryComponent.html":{}}}],["statistics",{"_index":1486,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["stats",{"_index":264,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["statsitemcomponent",{"_index":263,"title":{"components/StatsItemComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["status",{"_index":662,"title":{},"body":{"components/BoardComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["status/list",{"_index":719,"title":{},"body":{"components/BoardComponent.html":{}}}],["statuslist",{"_index":671,"title":{},"body":{"components/BoardComponent.html":{}}}],["step",{"_index":1054,"title":{},"body":{"components/HelpComponent.html":{}}}],["storage",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":2083,"title":{},"body":{"index.html":{}}}],["story",{"_index":1664,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["streaming",{"_index":1866,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["strictly",{"_index":1160,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["string",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["strive",{"_index":1041,"title":{},"body":{"components/HelpComponent.html":{}}}],["student",{"_index":1147,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["students",{"_index":1008,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["styleurl",{"_index":34,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["styling",{"_index":1305,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["subauth",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["subguestlogout",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["submit",{"_index":114,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["subscribers",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribes",{"_index":1555,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subscription",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["subtask",{"_index":1502,"title":{"classes/Subtask.html":{}},"body":{"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["subtask'},{'name",{"_index":266,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["subtask(sdata",{"_index":1702,"title":{},"body":{"classes/Task.html":{}}}],["subtask(stdata",{"_index":1902,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.component.html",{"_index":1521,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subtask.component.scss",{"_index":1522,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subtask.id",{"_index":1923,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.name",{"_index":1819,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["subtask.status",{"_index":1811,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["subtask.task_id",{"_index":1908,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.tojson",{"_index":1922,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtaskcomponent",{"_index":265,"title":{"components/SubtaskComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["subtasks",{"_index":1657,"title":{},"body":{"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["subtasks/stream",{"_index":1886,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksdata",{"_index":1845,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksdata.foreach(stdata",{"_index":1900,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksevents",{"_index":1885,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksevents.onmessage",{"_index":1889,"title":{},"body":{"injectables/TasksService.html":{}}}],["subusersinit",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["successfully",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["such",{"_index":1151,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["summary",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{},"components/SummaryComponent.html":{}}}],["summary'},{'name",{"_index":268,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["summary.component.html",{"_index":1589,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary.component.scss",{"_index":1590,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary/landing",{"_index":1488,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["summarycomponent",{"_index":267,"title":{"components/SummaryComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["super",{"_index":99,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["super.ngoninit",{"_index":158,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["supposed",{"_index":1277,"title":{},"body":{"components/MenuComponent.html":{}}}],["switch(name",{"_index":1494,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["sync",{"_index":1946,"title":{},"body":{"injectables/UsersService.html":{}}}],["synccontacts",{"_index":835,"title":{},"body":{"injectables/ContactsService.html":{}}}],["synced",{"_index":859,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["synchronization",{"_index":1856,"title":{},"body":{"injectables/TasksService.html":{}}}],["synchronize",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["synchronized",{"_index":1955,"title":{},"body":{"injectables/UsersService.html":{}}}],["syncingsubtasks",{"_index":1825,"title":{},"body":{"injectables/TasksService.html":{}}}],["syncregisteredusers",{"_index":1936,"title":{},"body":{"injectables/UsersService.html":{}}}],["syncsubtasks",{"_index":1835,"title":{},"body":{"injectables/TasksService.html":{}}}],["synctasks",{"_index":1836,"title":{},"body":{"injectables/TasksService.html":{}}}],["syncuser",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["t.id",{"_index":1907,"title":{},"body":{"injectables/TasksService.html":{}}}],["t.prio",{"_index":1628,"title":{},"body":{"components/SummaryComponent.html":{}}}],["t.status",{"_index":1921,"title":{},"body":{"injectables/TasksService.html":{}}}],["t.subtasks",{"_index":1904,"title":{},"body":{"injectables/TasksService.html":{}}}],["table",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":88,"title":{},"body":{"components/AddContactComponent.html":{}}}],["task",{"_index":270,"title":{"classes/Task.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["task's",{"_index":1517,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task'},{'name",{"_index":210,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["task(tdata",{"_index":1894,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.assigned",{"_index":1775,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.component",{"_index":771,"title":{},"body":{"components/BoardComponent.html":{}}}],["task.component.ts",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["task.getduetotext",{"_index":1816,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["task.id",{"_index":1913,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.name",{"_index":1582,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task.prio",{"_index":1773,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.subtasks",{"_index":1818,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["task.title",{"_index":1770,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.tojson",{"_index":1911,"title":{},"body":{"injectables/TasksService.html":{}}}],["task/add",{"_index":770,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["task/subtask/subtask.component.ts",{"_index":1516,"title":{},"body":{"components/SubtaskComponent.html":{},"coverage.html":{}}}],["task/subtask/subtask.component.ts:20",{"_index":1532,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:24",{"_index":1560,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:25",{"_index":1564,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:26",{"_index":1534,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:27",{"_index":1533,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:28",{"_index":1563,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:29",{"_index":1531,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:30",{"_index":1562,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:37",{"_index":1554,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:46",{"_index":1551,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:54",{"_index":1543,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:64",{"_index":1548,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:77",{"_index":1538,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:87",{"_index":1535,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:98",{"_index":1542,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task_id",{"_index":1505,"title":{},"body":{"classes/Subtask.html":{}}}],["taskcardcomponent",{"_index":269,"title":{"components/TaskCardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["taskcategorycomponent",{"_index":272,"title":{"components/TaskCategoryComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["taskchange",{"_index":1530,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["taskformid",{"_index":672,"title":{},"body":{"components/BoardComponent.html":{}}}],["taskformwrappertranslated",{"_index":673,"title":{},"body":{"components/BoardComponent.html":{}}}],["tasklistcomponent",{"_index":274,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["tasks",{"_index":184,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["tasks.length",{"_index":1631,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasks.sort((a",{"_index":1633,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasks/stream",{"_index":1884,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks[0].due",{"_index":1636,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasksarrayindex",{"_index":1905,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasksevents",{"_index":1882,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tasksevents.onmessage",{"_index":1887,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tasksservice",{"_index":310,"title":{"injectables/TasksService.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["taskviewcomponent",{"_index":276,"title":{"components/TaskViewComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["team",{"_index":186,"title":{},"body":{"components/AddContactComponent.html":{},"components/HelpComponent.html":{}}}],["technical",{"_index":1663,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["templates/arrow",{"_index":1757,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["templates/close",{"_index":149,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/headline",{"_index":994,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["templates/password",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["templates/person",{"_index":144,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["templates/prio",{"_index":1756,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/slide/slide.component",{"_index":152,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/toast",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["term",{"_index":1016,"title":{},"body":{"components/HelpComponent.html":{}}}],["terms",{"_index":1129,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["test",{"_index":2088,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2098,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2087,"title":{},"body":{"index.html":{}}}],["text",{"_index":1296,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{}}}],["then((resp",{"_index":1434,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["thereto",{"_index":1139,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["this.addcontactlocally(contact",{"_index":878,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.addsubtaskstotasks(resp",{"_index":1898,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.addsubtasktotask(new",{"_index":1901,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.addtasklocally(task",{"_index":1910,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.animate",{"_index":1272,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["this.assigned",{"_index":1689,"title":{},"body":{"classes/Task.html":{}}}],["this.assigned.includes(appuser.id",{"_index":1707,"title":{},"body":{"classes/Task.html":{}}}],["this.autherror",{"_index":1438,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.currentuser",{"_index":870,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser$.next(this.authservice.currentuser",{"_index":876,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser$.subscribe((u",{"_index":926,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.authservice.currentuser$.subscribe(currentuser",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.currentuser$.subscribe(u",{"_index":1623,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.authservice.currentuser.contacts",{"_index":872,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.findindex(c",{"_index":885,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.push(contact",{"_index":880,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.splice(contactsarrayindex",{"_index":892,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts[contactsarrayindex",{"_index":887,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.user.id",{"_index":871,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser?.contacts?.push(new",{"_index":874,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.getcurrentuid",{"_index":978,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["this.authservice.logout",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.resetpassword(this.formdata.password",{"_index":1433,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.syncuser",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsub",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["this.authsub.unsubscribe",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["this.cancel",{"_index":182,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.canceloverlay.emit",{"_index":179,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.category",{"_index":1696,"title":{},"body":{"classes/Task.html":{}}}],["this.checkpasswordconfirmation",{"_index":1443,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.clearsubtasks",{"_index":1899,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.closedropdown.subscribe",{"_index":1760,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.closingtaskstatusdropdown.next",{"_index":785,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.color_id",{"_index":468,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["this.confirm",{"_index":1577,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.contacts",{"_index":470,"title":{},"body":{"classes/AppUser.html":{}}}],["this.contacts$.next",{"_index":877,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.contactsservice.synccontacts",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contactsubmission.emit(this.formdata",{"_index":169,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.currentuser",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["this.currentuser$.next(null",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser$.next(this.currentuser",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser.id",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusername",{"_index":929,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["this.datainitafterauthcomplete",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit",{"_index":181,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.delete.emit(true",{"_index":1578,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.deletecontactlocally(id",{"_index":890,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.deletelocalsessiontoken",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deletetasklocally(id",{"_index":1917,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.description",{"_index":1687,"title":{},"body":{"classes/Task.html":{}}}],["this.displaydropdown",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["this.dragcardheight",{"_index":783,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.dragstartstatus",{"_index":784,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.due",{"_index":1691,"title":{},"body":{"classes/Task.html":{}}}],["this.due.length",{"_index":1708,"title":{},"body":{"classes/Task.html":{}}}],["this.due.split",{"_index":1710,"title":{},"body":{"classes/Task.html":{}}}],["this.editing",{"_index":1571,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.editinputref.nativeelement",{"_index":1573,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.editthistask.emit",{"_index":1814,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.email",{"_index":620,"title":{},"body":{"classes/AuthUser.html":{},"classes/Contact.html":{}}}],["this.emailtaken",{"_index":168,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.focuslastcharacter(this.getfieldcontainerrefinput(this.passwordconfirmationcontainerref",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.focuslastcharacter(this.getfieldcontainerrefinput(this.passwordcontainerref",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.focuslastposition",{"_index":1572,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formclick.subscribe",{"_index":1567,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formdata",{"_index":160,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.email",{"_index":171,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.email.length",{"_index":174,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.password",{"_index":1444,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.password.length",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.passwordconfirmation",{"_index":1445,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.passwordconfirmation.length",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formmode",{"_index":1273,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["this.formsubscription",{"_index":1566,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formsubscription.unsubscribe",{"_index":1570,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.geturgent",{"_index":1630,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.guestsub.unsubscribe",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["this.id",{"_index":462,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["this.initusername(this.authservice.currentuser",{"_index":925,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.initusername(u",{"_index":927,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.inputcontact.email",{"_index":173,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.isemailavailable(contact.email",{"_index":1971,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isemailtaken",{"_index":167,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.isuser",{"_index":163,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.isvalid(form",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.locallogout",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loggedin",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["this.main_routes.includes(this.getcurrentroute",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mode",{"_index":159,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.name",{"_index":805,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{}}}],["this.name.split",{"_index":1321,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["this.other_routes.includes(this.getcurrentroute",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.paramsub",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.paramsub.unsubscribe",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordconfirmationfieldtype",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordfieldtype",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.phone",{"_index":807,"title":{},"body":{"classes/Contact.html":{}}}],["this.previousname",{"_index":1568,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.prio",{"_index":1694,"title":{},"body":{"classes/Task.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate((['/summary",{"_index":979,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["this.router.navigate(['/add_task",{"_index":781,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.router.navigate(['/board",{"_index":1493,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["this.router.navigatebyurl",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.url",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["this.showheaderdropdown",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showtaskform",{"_index":780,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showtoastmsg",{"_index":1446,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.slide.emit",{"_index":1483,"title":{},"body":{"components/SlideComponent.html":{}}}],["this.slideinout",{"_index":177,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.slidetaskformwrapper",{"_index":777,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.status",{"_index":1513,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["this.subauth",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["this.subtasks",{"_index":1699,"title":{},"body":{"classes/Task.html":{}}}],["this.subtasks?.foreach(s",{"_index":1704,"title":{},"body":{"classes/Task.html":{}}}],["this.subtasks?.push(new",{"_index":1701,"title":{},"body":{"classes/Task.html":{}}}],["this.syncingsubtasks",{"_index":1897,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.syncregisteredusers",{"_index":1958,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.syncsubtasks",{"_index":1890,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.synctasks",{"_index":1888,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.task",{"_index":1808,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task.description.length",{"_index":1764,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.description.slice(0",{"_index":1762,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.name",{"_index":1569,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.task.status",{"_index":1768,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.subtasks",{"_index":1809,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task.subtasks[index",{"_index":1810,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task_id",{"_index":1511,"title":{},"body":{"classes/Subtask.html":{}}}],["this.taskchange.emit(this.task",{"_index":1576,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.taskformid",{"_index":776,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.taskformwrappertranslated",{"_index":782,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tasks",{"_index":1891,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks$.next",{"_index":1895,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter(t",{"_index":1920,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find(t",{"_index":1919,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.findindex(t",{"_index":1906,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.foreach(t",{"_index":1903,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.length",{"_index":1896,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(new",{"_index":1893,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":1912,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.splice(tasksarrayindex",{"_index":1918,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks[tasksarrayindex",{"_index":1916,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks[tasksarrayindex].subtasks?.push(subtask",{"_index":1909,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasksservice.deletetask(this.task.id",{"_index":1813,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.tasksservice.getfilteredtasks(status",{"_index":1626,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.gettaskbyid(id",{"_index":774,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tasksservice.init",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasksservice.tasks",{"_index":1632,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.tasks.filter(t",{"_index":1627,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.tasks.length",{"_index":1629,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.updatesubtask(subtask",{"_index":1812,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.tasksservice.updatetask(this.task",{"_index":1769,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.title",{"_index":1685,"title":{},"body":{"classes/Task.html":{}}}],["this.togglepasswordfieldtype(this.passwordconfirmationfieldtype",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.togglepasswordfieldtype(this.passwordfieldtype",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.transferafterreset",{"_index":1436,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translated",{"_index":1482,"title":{},"body":{"components/SlideComponent.html":{}}}],["this.unsubauth",{"_index":1622,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.updatecontactlocally(contact",{"_index":882,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.updatecurrentuser(resp",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updatecurrentuser(userdata",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updatedropdown.emit(this.displaydropdown",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.updatetasklocally(task",{"_index":1914,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.user",{"_index":465,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.email",{"_index":475,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.tojson",{"_index":472,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.username",{"_index":474,"title":{},"body":{"classes/AppUser.html":{}}}],["this.username",{"_index":617,"title":{},"body":{"classes/AuthUser.html":{}}}],["this.username.replace",{"_index":622,"title":{},"body":{"classes/AuthUser.html":{}}}],["this.users",{"_index":1758,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["this.users$.next",{"_index":1964,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.find(u",{"_index":1968,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.foreach(u",{"_index":1965,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.push(new",{"_index":1962,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.init",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersservice.isemailavailable(this.formdata.email",{"_index":176,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.usersservice.isuser(this.inputcontact",{"_index":162,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.usersservice.users",{"_index":1759,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.userssub.unsubscribe",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewtaskid",{"_index":775,"title":{},"body":{"components/BoardComponent.html":{}}}],["threaten",{"_index":1180,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["three",{"_index":1291,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["threshold",{"_index":704,"title":{},"body":{"components/BoardComponent.html":{}}}],["thus",{"_index":1741,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["time",{"_index":706,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/LegalNoticeComponent.html":{},"injectables/TasksService.html":{}}}],["timeout",{"_index":1470,"title":{},"body":{"components/SlideComponent.html":{}}}],["timestamp",{"_index":1658,"title":{},"body":{"classes/Task.html":{}}}],["title",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"classes/Task.html":{}}}],["toast",{"_index":279,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["toastnotificationcomponent",{"_index":278,"title":{"components/ToastNotificationComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["together",{"_index":966,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{}}}],["toggle",{"_index":128,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["toggled",{"_index":1388,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["toggledropdown",{"_index":939,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["toggleformmode",{"_index":1257,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["togglepasswordfieldtype",{"_index":1355,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["togglepasswordfieldtype(type",{"_index":1385,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["toggles",{"_index":1265,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["togglesubtaskstatus",{"_index":1788,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["togglesubtaskstatus(index",{"_index":1802,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["togglevisibility",{"_index":1356,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["togglevisibility(field",{"_index":1389,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["tojson",{"_index":433,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["token",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["token.interceptor.ts",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.key",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"injectables/UsersService.html":{}}}],["tool",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["total",{"_index":1605,"title":{},"body":{"components/SummaryComponent.html":{}}}],["track",{"_index":786,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["trademarks",{"_index":1169,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["transfer",{"_index":1396,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["transferafterreset",{"_index":1357,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["transform",{"_index":1675,"title":{},"body":{"classes/Task.html":{}}}],["transformed",{"_index":1680,"title":{},"body":{"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["translated",{"_index":43,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["translation",{"_index":129,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["trigger",{"_index":750,"title":{},"body":{"components/BoardComponent.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":1624,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/UsersService.html":{}}}],["u.id",{"_index":1966,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.email",{"_index":1969,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.id",{"_index":1967,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.username",{"_index":1625,"title":{},"body":{"components/SummaryComponent.html":{}}}],["udata.user.email",{"_index":1960,"title":{},"body":{"injectables/UsersService.html":{}}}],["udata.user.email.slice",{"_index":1961,"title":{},"body":{"injectables/UsersService.html":{}}}],["uid",{"_index":977,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["unauthorized",{"_index":1155,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["undefined",{"_index":172,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["under",{"_index":1074,"title":{},"body":{"components/HelpComponent.html":{}}}],["unit",{"_index":2086,"title":{},"body":{"index.html":{}}}],["unsetting",{"_index":727,"title":{},"body":{"components/BoardComponent.html":{}}}],["unsubauth",{"_index":1591,"title":{},"body":{"components/SummaryComponent.html":{}}}],["unsubscribe",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["unsubscribes",{"_index":1552,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["unterm",{"_index":1123,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["up",{"_index":918,"title":{},"body":{"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/SlideComponent.html":{},"components/TaskCardComponent.html":{},"injectables/UsersService.html":{}}}],["upcoming",{"_index":1498,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["update",{"_index":862,"title":{},"body":{"injectables/ContactsService.html":{},"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["updatecontact",{"_index":836,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontact(contact",{"_index":860,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontactlocally",{"_index":837,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontactlocally(contact",{"_index":867,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecurrentuser",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecurrentuser(userdata",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["updated",{"_index":865,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["updatedropdown",{"_index":941,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updates",{"_index":844,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["updatesubtask",{"_index":1837,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatesubtask(subtask",{"_index":1872,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetask",{"_index":1838,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetask(task",{"_index":1875,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklocally",{"_index":1839,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklocally(task",{"_index":1877,"title":{},"body":{"injectables/TasksService.html":{}}}],["upon",{"_index":921,"title":{},"body":{"components/GreetingComponent.html":{},"components/SlideComponent.html":{}}}],["urgent",{"_index":1332,"title":{},"body":{"components/PrioIconComponent.html":{},"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["url",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["url/route",{"_index":1382,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["usage",{"_index":990,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{}}}],["use",{"_index":700,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["used",{"_index":717,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["user",{"_index":81,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["user's",{"_index":841,"title":{},"body":{"injectables/ContactsService.html":{}}}],["user.ts",{"_index":422,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"coverage.html":{}}}],["user.ts:11",{"_index":439,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:12",{"_index":440,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:13",{"_index":438,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:14",{"_index":435,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:27",{"_index":616,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:34",{"_index":450,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:47",{"_index":443,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:56",{"_index":441,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:6",{"_index":614,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:7",{"_index":615,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:70",{"_index":449,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:8",{"_index":613,"title":{},"body":{"classes/AuthUser.html":{}}}],["userdata",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email.slice",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/GreetingComponent.html":{}}}],["username.replace",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":797,"title":{},"body":{"classes/Contact.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["users/current",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/stream",{"_index":1957,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":42,"title":{"injectables/UsersService.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userssub",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["uses",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":696,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["valid",{"_index":115,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["validation",{"_index":1380,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1331,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["var",{"_index":206,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["variable",{"_index":1387,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1304,"title":{"miscellaneous/variables.html":{}},"body":{"components/PersonBadgeComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2068,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["view",{"_index":633,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/TaskViewComponent.html":{}}}],["view'},{'name",{"_index":277,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["view.component",{"_index":769,"title":{},"body":{"components/BoardComponent.html":{}}}],["view.component.html",{"_index":1785,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.scss",{"_index":1786,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts",{"_index":1781,"title":{},"body":{"components/TaskViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:27",{"_index":1791,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:28",{"_index":1792,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:29",{"_index":1793,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:30",{"_index":1794,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:31",{"_index":1806,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:32",{"_index":1790,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:55",{"_index":1795,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:66",{"_index":1803,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:78",{"_index":1796,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:89",{"_index":1798,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view/task",{"_index":768,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["viewchild('editinput",{"_index":1561,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["viewchild('passwordconfirmationcontainer",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["viewchild('passwordcontainer",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["viewer",{"_index":1782,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["viewport",{"_index":1926,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["viewtask",{"_index":685,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewtask(id",{"_index":751,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewtaskid",{"_index":674,"title":{},"body":{"components/BoardComponent.html":{}}}],["visibility",{"_index":1391,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["visible",{"_index":1279,"title":{},"body":{"components/MenuComponent.html":{},"components/SummaryComponent.html":{}}}],["visual",{"_index":1032,"title":{},"body":{"components/HelpComponent.html":{}}}],["visualize",{"_index":1021,"title":{},"body":{"components/HelpComponent.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["warranties",{"_index":1186,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["warranty",{"_index":1190,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["ways",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["we'll",{"_index":1000,"title":{},"body":{"components/HelpComponent.html":{}}}],["we're",{"_index":1103,"title":{},"body":{"components/HelpComponent.html":{}}}],["we\\'ll",{"_index":1105,"title":{},"body":{"components/HelpComponent.html":{}}}],["we\\'re",{"_index":1108,"title":{},"body":{"components/HelpComponent.html":{}}}],["web",{"_index":1010,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["welcome",{"_index":997,"title":{},"body":{"components/HelpComponent.html":{}}}],["went",{"_index":1441,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["whether",{"_index":694,"title":{},"body":{"components/BoardComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["whose",{"_index":1727,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["window.innerwidth",{"_index":778,"title":{},"body":{"components/BoardComponent.html":{}}}],["window:resize",{"_index":687,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":18,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["without",{"_index":1143,"title":{},"body":{"components/LegalNoticeComponent.html":{},"injectables/TasksService.html":{}}}],["words",{"_index":1732,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["work",{"_index":1022,"title":{},"body":{"components/HelpComponent.html":{},"components/SlideComponent.html":{}}}],["workaround",{"_index":1479,"title":{},"body":{"components/SlideComponent.html":{}}}],["wrapper",{"_index":654,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["wrapper.scrollby(0",{"_index":657,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["writes",{"_index":1610,"title":{},"body":{"components/SummaryComponent.html":{}}}],["wrong",{"_index":1442,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["x",{"_index":789,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["year",{"_index":1652,"title":{},"body":{"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["yes",{"_index":1540,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["you'll",{"_index":1056,"title":{},"body":{"components/HelpComponent.html":{}}}],["you've",{"_index":1070,"title":{},"body":{"components/HelpComponent.html":{}}}],["you\\'ll",{"_index":1106,"title":{},"body":{"components/HelpComponent.html":{}}}],["you\\'ve",{"_index":1107,"title":{},"body":{"components/HelpComponent.html":{}}}],["yyyy",{"_index":1676,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddContactComponent.html":{"url":"components/AddContactComponent.html","title":"component - AddContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/add-contact/add-contact.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the \"add contact\" or \"edit contact\" form within an overlay.\n\n    \n\n    \n        Extends\n    \n    \n                    SlideComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-contact\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                PersonBadgeComponent\n                                CloseBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-contact.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-contact.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailTaken\n                            \n                            \n                                formData\n                            \n                            \n                                isUser\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                deleteContact\n                            \n                            \n                                isEmailTaken\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetEmailTaken\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOverlay\n                            \n                            \n                                contactSubmission\n                            \n                            \n                                delete\n                            \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                \n                    \n                        Default value : new Contact({})\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     \"add\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'add'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelOverlay\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contactSubmission\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         SlideComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SlideComponent:29\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Cancel this form/overlay with slide animation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Delete this contact.\nThe delete button is disabled if the contact is a user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailTaken\n                        \n                    \n                \n            \n            \n                \nisEmailTaken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Checks if the email address entered into the form is already taken in a meaningful sense.\nFor example, an email should not be considered taken when it was not changed at all.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:37\n\n                        \n                    \n\n\n            \n                \n                        Extend super class \"ngOnInit()\" method by form data initialization.\nAlso disable name editing in case the contact is another user (rather than a manually added contact).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submit form if valid by emitting he corresponding event to the parent component\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    add/edit contact form\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEmailTaken\n                        \n                    \n                \n            \n            \n                \nresetEmailTaken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Resets the emailTaken property to the default value (false).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:44\n\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Contact({})\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         SlideComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         SlideComponent:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonBadgeComponent } from '../../../templates/person-badge/person-badge.component';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Contact } from '../../../../models/contact';\nimport { CloseBtnComponent } from '../../../templates/close-btn/close-btn.component';\nimport { SlideComponent } from '../../../templates/slide/slide.component';\nimport { UsersService } from '../../../services/users.service';\n\n\n/**\n * This component displays the \"add contact\" or \"edit contact\" form within an overlay.\n */\n@Component({\n  selector: 'app-add-contact',\n  standalone: true,\n  imports: [CommonModule, FormsModule, PersonBadgeComponent, CloseBtnComponent],\n  templateUrl: './add-contact.component.html',\n  styleUrl: './add-contact.component.scss'\n})\nexport class AddContactComponent extends SlideComponent {\n  @Input() mode: 'add' | 'edit' = 'add';\n  @Input('contact') inputContact: Contact = new Contact({});\n  formData = new Contact({});\n  @Output() cancelOverlay = new EventEmitter();\n  @Output() contactSubmission = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  isUser: boolean = false;\n  emailTaken: boolean = false;\n  private usersService = inject(UsersService);\n\n\n  /**\n   * Extend super class \"ngOnInit()\" method by form data initialization.\n   * Also disable name editing in case the contact is another user (rather than a manually added contact).\n   */\n  override ngOnInit() {\n    super.ngOnInit();\n    if (this.mode == 'edit') {\n      this.formData = new Contact(this.inputContact.toJson());\n      if (this.usersService.isUser(this.inputContact)) { this.isUser = true }\n    }\n  }\n\n\n  /**\n   * Submit form if valid by emitting he corresponding event to the parent component\n   * @param form add/edit contact form\n   */\n  onSubmit(form: NgForm): void {\n    if (form.submitted && form.form.valid) {\n      if (this.isEmailTaken()) {\n        this.emailTaken = true;\n      } else {\n        this.contactSubmission.emit(this.formData);\n      }\n    }\n  }\n\n\n  /**\n   * Checks if the email address entered into the form is already taken in a meaningful sense.\n   * For example, an email should not be considered taken when it was not changed at all. \n   * @returns {boolean} check result\n   */\n  isEmailTaken(): boolean {\n    return this.formData.email != undefined &&\n    this.formData.email != this.inputContact.email &&\n    this.formData.email.length > 0 &&\n    !this.usersService.isEmailAvailable(this.formData.email);\n  }\n\n\n  /**\n   * Resets the emailTaken property to the default value (false).\n   */\n  resetEmailTaken(): void {\n    this.emailTaken = false;\n  }\n\n\n  /**\n   * Cancel this form/overlay with slide animation\n   */\n  cancel() {\n    this.slideInOut();\n    setTimeout(() => this.cancelOverlay.emit(), 125);\n  }\n\n\n  /**\n   * Delete this contact.\n   * The delete button is disabled if the contact is a user.\n   */\n  deleteContact() {\n    this.delete.emit();\n    this.cancel();\n  }\n}\n    \n\n    \n        \n    \n        \n            \n            \n                \n                \n                    @if(mode == 'add') {\n                    Add\n                    } @else {\n                    Edit\n                    }\n                    contact\n                \n            \n            Tasks are better with a team!\n            \n        \n        @if(mode == 'add') {\n        \n        } @else {\n        \n        }\n        \n            \n            \n                \n                @if((name.touched || contactForm.submitted) && !name.valid && !isUser) {\n                A contact name is required.\n                }\n                \n            \n            \n                \n                \n                @if((email.touched || contactForm.submitted) && !email.valid && !isUser) {\n                This is not a valid email adress.\n                } @else if(!isUser && contactForm.submitted && emailTaken) {\n                This email adress is already registered.\n                }\n            \n            \n                \n                \n                @if((phone.touched || contactForm.submitted) && !phone.valid) {\n                This is not a valid phone number.\n                }\n            \n            \n                @if(mode == 'add') {\n                \n                    Cancel\n                    \n                        \n                        \n                        \n                    \n                \n                \n                    Create Contact\n                    \n                \n                } @else {\n                \n                    Delete\n                \n                \n                    Save\n                    \n                \n                }\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        @if(mode == \\'add\\') {                    Add                    } @else {                    Edit                    }                    contact                                        Tasks are better with a team!                            @if(mode == \\'add\\') {                } @else {                }                                                                @if((name.touched || contactForm.submitted) && !name.valid && !isUser) {                A contact name is required.                }                                                                                        @if((email.touched || contactForm.submitted) && !email.valid && !isUser) {                This is not a valid email adress.                } @else if(!isUser && contactForm.submitted && emailTaken) {                This email adress is already registered.                }                                                                        @if((phone.touched || contactForm.submitted) && !phone.valid) {                This is not a valid phone number.                }                                        @if(mode == \\'add\\') {                                    Cancel                                                                                                                                                                    Create Contact                                                    } @else {                                    Delete                                                    Save                                                    }                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the app component created by Angular by default (but extended in many ways).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterModule\n                                MenuComponent\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                authSub\n                            \n                            \n                                    Private\n                                contactsService\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                    Private\n                                dataInitAfterAuthComplete\n                            \n                            \n                                    Private\n                                guestSub\n                            \n                            \n                                loggedIn\n                            \n                            \n                                    Readonly\n                                MAIN_ROUTES\n                            \n                            \n                                    Readonly\n                                OTHER_ROUTES\n                            \n                            \n                                showHeaderDropdown\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                    Private\n                                usersSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeHeaderDropdown\n                            \n                            \n                                getCurrentRoute\n                            \n                            \n                                localLogOut\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogInPage\n                            \n                            \n                                subAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            Create instance of router and subscribe to authentication service.\nCall landscape mode prevention for mobile devices.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeHeaderDropdown\n                        \n                    \n                \n            \n            \n                \ncloseHeaderDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Close header dropdown menu by setting the corresponding property\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentRoute\n                        \n                    \n                \n            \n            \n                \ngetCurrentRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Get current route from router\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                current URL\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localLogOut\n                        \n                    \n                \n            \n            \n                \nlocalLogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Fit log in state properties to logging out.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogInPage\n                        \n                    \n                \n            \n            \n                \nonLogInPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Check if the current route is not included in app/main and app/other component routes.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribe to authService.user$ to check log in state.\nIf a registered user is logged in, call subUsersInit() method.\nIf the user is logged in as guest, call subGuestLogOut() method.\n\n\n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contactsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ContactsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataInitAfterAuthComplete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        guestSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        MAIN_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/summary', '/add_task', '/board', '/contacts']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        OTHER_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/help', '/legal_notice', '/privacy_policy']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaderDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'join'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet, RouterModule, Router } from '@angular/router';\nimport { MenuComponent } from './shared/menu/menu.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { UsersService } from './services/users.service';\nimport { AuthService } from './services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from '../models/app-user';\nimport { TasksService } from './services/tasks.service';\nimport { ContactsService } from './services/contacts.service';\nimport { environment } from '../environments/environment.development';\n\n\n/**\n * This is the app component created by Angular by default (but extended in many ways).\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, RouterModule, MenuComponent, HeaderComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'join';\n  private authService = inject(AuthService);\n  private usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n  private contactsService = inject(ContactsService);\n  private authSub = new Subscription();\n  private guestSub = new Subscription();\n  private usersSub = new Subscription();\n  currentUser?: AppUser | null;\n  loggedIn: boolean = false;\n  showHeaderDropdown: boolean = false;\n  private dataInitAfterAuthComplete: boolean = false;\n  readonly MAIN_ROUTES = ['/summary', '/add_task', '/board', '/contacts'];\n  readonly OTHER_ROUTES = ['/help', '/legal_notice', '/privacy_policy'];\n\n\n  /**\n   * Create instance of router and subscribe to authentication service.\n   * Call landscape mode prevention for mobile devices.\n   * @param router instance of Router\n   */\n  constructor(private router: Router) {\n    this.authSub = this.subAuth();\n  }\n\n\n  ngOnInit(): void {\n    if (localStorage.getItem('token')) {\n      this.authService.syncUser()\n        .then(() => { })\n        .catch(e => console.error(e));\n    }\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n    this.guestSub.unsubscribe();\n    this.usersSub.unsubscribe();\n  }\n\n\n  /**\n   * Subscribe to authService.user$ to check log in state.\n   * If a registered user is logged in, call subUsersInit() method.\n   * If the user is logged in as guest, call subGuestLogOut() method.\n   * @returns \n   */\n  subAuth(): Subscription {\n    return this.authService.currentUser$.subscribe(currentUser => {\n      if (currentUser?.id) {\n        this.currentUser = currentUser;\n        this.loggedIn = true;\n        if (!this.dataInitAfterAuthComplete) {\n          this.usersService.init();\n          this.tasksService.init();\n          this.contactsService.syncContacts();\n          this.dataInitAfterAuthComplete = true;\n        }\n      } else { this.localLogOut() }\n    });\n  }\n\n\n  /**\n   * Fit log in state properties to logging out.\n   */\n  localLogOut() {\n    this.currentUser = null;\n    this.loggedIn = false;\n    this.dataInitAfterAuthComplete = false;\n    this.guestSub.unsubscribe();\n  }\n\n\n  /**\n   * Get current route from router\n   * @returns current URL\n   */\n  getCurrentRoute(): string {\n    return this.router.url;\n  }\n\n\n  /**\n   * Check if the current route is not included in app/main and app/other component routes.\n   * @returns check result\n   */\n  onLogInPage(): boolean {\n    return !(this.MAIN_ROUTES.includes(this.getCurrentRoute()) || this.OTHER_ROUTES.includes(this.getCurrentRoute()));\n  }\n\n\n  /**\n   * Close header dropdown menu by setting the corresponding property\n   */\n  closeHeaderDropdown() {\n    this.showHeaderDropdown = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppUser.html":{"url":"classes/AppUser.html","title":"class - AppUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/app-user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an in-app user, which has additional properties compared to AuthUser.\nIt contains the AuthUser as its \"user\" property.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color_id\n                            \n                            \n                                    Optional\n                                contacts\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                asContact\n                            \n                            \n                                getColor\n                            \n                            \n                                hasUserInContacts\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/app-user.ts:14\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthUser\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        asContact\n                        \n                    \n                \n            \n            \n                \nasContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:56\n                        \n                    \n\n\n            \n                \n                        Return this user as a contact object\n\n\n                        \n                            Returns :         Contact\n\n                        \n                            \n                                contact\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves hexadecimal color string from color id.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                hex color\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUserInContacts\n                        \n                    \n                \n            \n            \n                \nhasUserInContacts(appUser: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:70\n                        \n                    \n\n\n            \n                \n                        Check if this user has another user in his contacts list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appUser\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:34\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AuthUser } from './auth-user';\nimport { Contact } from './contact';\nimport { environment } from '../environments/environment.development';\n\n\n/**\n * Represents an in-app user, which has additional properties compared to AuthUser.\n * It contains the AuthUser as its \"user\" property.\n */\nexport class AppUser {\n    id: number;\n    user: AuthUser;\n    color_id: number;\n    contacts?: Contact[];\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.user = new AuthUser(obj.user ? obj.user : { id: -1 });\n        this.color_id = obj.color_id ? obj.color_id : -1;\n        this.contacts = obj.contacts ? obj.contacts : undefined;\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        return {\n            id: this.id,\n            user: this.user.toJson(),\n            color_id: this.color_id,\n        }\n    }\n\n\n    /**\n     * Retrieves hexadecimal color string from color id.\n     * @returns {string} hex color\n     */\n    getColor(): string {\n        return environment.BADGE_COLORS[this.color_id];\n    }\n\n\n    /**\n     * Return this user as a contact object\n     * @returns contact\n     */\n    asContact(): Contact {\n        return new Contact({\n            name: this.user.username,\n            email: this.user.email,\n            color_id: this.color_id\n        });\n    }\n\n\n    /**\n     * Check if this user has another user in his contacts list\n     * @param user the other user\n     * @returns check result\n     */\n    hasUserInContacts(appUser: AppUser): number {\n        if (this.contacts) {\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArrowBackBtnComponent.html":{"url":"components/ArrowBackBtnComponent.html","title":"component - ArrowBackBtnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArrowBackBtnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/arrow-back-btn/arrow-back-btn.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a small blue arrow button pointing to the left (\"back\").\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-arrow-back-btn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./arrow-back-btn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./arrow-back-btn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * This component displays a small blue arrow button pointing to the left (\"back\").\n */\n@Component({\n  selector: 'app-arrow-back-btn',\n  standalone: true,\n  imports: [],\n  templateUrl: './arrow-back-btn.component.html',\n  styleUrl: './arrow-back-btn.component.scss'\n})\nexport class ArrowBackBtnComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArrowBackBtnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles backend user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteLocalSessionToken\n                            \n                            \n                                getCurrentUid\n                            \n                            \n                                getLocalRememberMe\n                            \n                            \n                                initUser\n                            \n                            \n                                logIn\n                            \n                            \n                                logInAsGuest\n                            \n                            \n                                logOut\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                requestPasswordReset\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                setLocalRememberMe\n                            \n                            \n                                    Async\n                                syncUser\n                            \n                            \n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteLocalSessionToken\n                        \n                    \n                \n            \n            \n                \ndeleteLocalSessionToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        This function removes the session token from the local storage (not from the server!).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUid\n                        \n                    \n                \n            \n            \n                \ngetCurrentUid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:165\n                        \n                    \n\n\n            \n                \n                        Get current user ID, if it exists.\n\n\n                        \n                            Returns :     number | undefined\n\n                        \n                            \n                                user ID or undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalRememberMe\n                        \n                    \n                \n            \n            \n                \ngetLocalRememberMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Get \"remember_log_in\" item from local storage to handle log in remembrance\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initUser\n                        \n                    \n                \n            \n            \n                \ninitUser(userData: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Initialize the user data after authentication or registration.\nThis sets the current user in the AuthService and emits the user data to any subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing user data to be set as current user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Log in user (with password and email)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInAsGuest\n                        \n                    \n                \n            \n            \n                \nlogInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Log in as guest.\nThe guest log in is handled via local storage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Log out (both as guest and registered user)\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                log out result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Register user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestPasswordReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Request password reset email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email address\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(newPassword: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Complete password reset\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLocalRememberMe\n                        \n                    \n                \n            \n            \n                \nsetLocalRememberMe(remember: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Set \"remember_log_in\" item in local storage to handle log in remembrance\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                remember\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Synchronize the current user data from the backend.\nFetches the latest data of the currently authenticated user.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when the user data has been successfully fetched and initialized.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \nupdateCurrentUser(userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Uses the server response to create the currentUser AppUser object.\nDeletes the email address from the data in case the user is a guest.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ndata from server response\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, from, lastValueFrom } from \"rxjs\";\nimport { environment } from \"../../environments/environment.development\";\nimport { Router } from \"@angular/router\";\nimport { AppUser } from \"../../models/app-user\";\n\n\n/**\n * This injectable handles backend user authentication.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public currentUser$: Subject = new Subject();\n    currentUser: AppUser | null = null;\n\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n    ) { }\n\n\n    /**\n     * Register user\n     * @param name user name\n     * @param email user email\n     * @param password user password\n     * @returns authentication result\n     */\n    async register(username: string, email: string, password: string): Promise {\n        const url = environment.BASE_URL + 'register/';\n        const body = {\n            username: username.replace(' ', '_'),\n            email: email,\n            password: password,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log in user (with password and email)\n     * @param email user email\n     * @param password user password\n     * @returns authentication result\n     */\n    logIn(email: string, password: string): Promise {\n        const url = environment.BASE_URL + 'login/';\n        const body = {\n            email: email,\n            password: password,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Initialize the user data after authentication or registration.\n     * This sets the current user in the AuthService and emits the user data to any subscribers.\n     * @param userData Object containing user data to be set as current user.\n     */\n    initUser(userData: AppUser): void {\n        this.updateCurrentUser(userData);\n    }\n\n\n    /**\n     * Synchronize the current user data from the backend.\n     * Fetches the latest data of the currently authenticated user.\n     * @returns A Promise resolving when the user data has been successfully fetched and initialized.\n     */\n    async syncUser(): Promise {\n        const url = environment.BASE_URL + 'users/current/';\n        const resp: any = await lastValueFrom(this.http.get(url));\n        this.updateCurrentUser(resp);\n    }\n\n\n    /**\n     * Uses the server response to create the currentUser AppUser object.\n     * Deletes the email address from the data in case the user is a guest.\n     * @param {any} userData - data from server response \n     */\n    updateCurrentUser(userData: any) {\n        if (userData.email && userData.email.slice(-9) == 'token.key') {\n            userData.email = '';\n        }\n        this.currentUser = new AppUser(userData);\n        this.currentUser$.next(this.currentUser);\n    }\n\n\n    /**\n     * Request password reset email\n     * @param email user email address\n     * @returns authentication result\n     */\n    async requestPasswordReset(email: string): Promise {\n        const url = environment.BASE_URL + 'resetPassword/request/';\n        const body = {\n            email: email,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Complete password reset\n     * @param password new password\n     * @param token password reset token\n     * @returns authentication result\n     */\n    async resetPassword(newPassword: string, key: string): Promise {\n        const url = environment.BASE_URL + 'resetPassword/';\n        const body = {\n            token: key,\n            new_password: newPassword,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log in as guest.\n     * The guest log in is handled via local storage.\n     */\n    logInAsGuest() {\n        const url = environment.BASE_URL + 'login/guest/';\n        const body = {\n            username: localStorage.getItem('token') || '',\n            email: localStorage.getItem('token') + '@token.key' || '',\n            password: 'guestlogin',\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log out (both as guest and registered user)\n     * @returns log out result\n     */\n    logOut(): void {\n        this.deleteLocalSessionToken();\n        this.currentUser = null;\n        this.currentUser$.next(null);\n        this.router.navigateByUrl('');\n    }\n\n\n    /**\n     * This function removes the session token from the local storage (not from the server!).\n     */\n    deleteLocalSessionToken(): void {\n        localStorage.removeItem('token');\n    }\n\n\n    /**\n     * Get current user ID, if it exists.\n     * @returns {number | undefined} user ID or undefined\n     */\n    getCurrentUid(): number | undefined {\n        if (this.currentUser) {\n            return this.currentUser.id;\n        } return;\n    }\n\n\n    /**\n     * Set \"remember_log_in\" item in local storage to handle log in remembrance\n     * @param logIn desired value\n     */\n    setLocalRememberMe(remember: boolean) {\n        localStorage.setItem('remember_log_in', JSON.stringify(remember));\n    }\n\n\n    /**\n     * Get \"remember_log_in\" item from local storage to handle log in remembrance\n     */\n    getLocalRememberMe() {\n        const item = localStorage.getItem('remember_log_in');\n        return (item ? JSON.parse(item) : false);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUser.html":{"url":"classes/AuthUser.html","title":"class - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/auth-user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user, but contains only the data necessary for authentication.\n(The password remains in the backend and is never sent to the frontend.)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/auth-user.ts:8\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/auth-user.ts:27\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthUser {\n    id: number;\n    username: string;\n    email: string;\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.username = obj.username ? obj.username.replace('_', ' ') : '';\n        this.email = obj.email ? obj.email : '';\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        return {\n            id: this.id,\n            username: this.username.replace(' ', '_'),\n            email: this.email,\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoscrollService.html":{"url":"injectables/AutoscrollService.html","title":"injectable - AutoscrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoscrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/autoscroll.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles automatic scrolling\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollIntoView\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                scrollWhileDragging\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollIntoView\n                        \n                    \n                \n            \n            \n                \nscrollIntoView(elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Scroll element into view\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTML element id attribute value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom(elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Scroll element to bottom\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTML element id attribute value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollWhileDragging\n                        \n                    \n                \n            \n            \n                \nscrollWhileDragging(scrollSpeed: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Handles scrolling during drag events.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                scrollSpeed\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nscrolling speed\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * This injectable handles automatic scrolling\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AutoscrollService {\n   \n   \n    /**\n     * Scroll element into view\n     * @param elementId HTML element id attribute value\n     */\n    scrollIntoView(elementId: string) {\n        const element = document.getElementById(elementId);\n        if (element) {element.scrollIntoView({ behavior: \"smooth\", inline: \"nearest\" })}\n    }\n\n\n    /**\n     * Scroll element to bottom\n     * @param elementId HTML element id attribute value\n     */\n    scrollToBottom(elementId: string) {\n        const element = document.getElementById(elementId);\n        if (element) {element.scrollTop = element.scrollHeight}\n    }\n\n\n    /**\n     * Handles scrolling during drag events.\n     * @param {number} scrollSpeed - scrolling speed \n     */\n    scrollWhileDragging(scrollSpeed: number) {\n        const wrapper = document.getElementById('pageWrapper');\n        if(wrapper) {wrapper.scrollBy(0, scrollSpeed)}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/board.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the task board.\nIt contains an overview of all tasks sorted by their respective status.\nIt also contains a search function to filter tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                TaskListComponent\n                                TaskViewComponent\n                                AddTaskComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closingTaskStatusDropdown\n                            \n                            \n                                dragCardHeight\n                            \n                            \n                                dragStartStatus\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                searchFilter\n                            \n                            \n                                statusList\n                            \n                            \n                                taskFormId\n                            \n                            \n                                taskFormWrapperTranslated\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                viewTaskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToStatus\n                            \n                            \n                                closeTaskStatusDropdown\n                            \n                            \n                                closeTaskView\n                            \n                            \n                                getTaskById\n                            \n                            \n                                hideTaskForm\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                setDragCardHeight\n                            \n                            \n                                setDragStartStatus\n                            \n                            \n                                showTaskForm\n                            \n                            \n                                slideTaskFormWrapper\n                            \n                            \n                                viewTask\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:91\n                        \n                    \n\n\n            \n                \n                        When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\nSmaller screens will use router navigation.\nIn case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\nIn this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToStatus\n                        \n                    \n                \n            \n            \n                \naddToStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Set task status to be used for \"add task\" initialization in adding mode (not for editing tasks)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status/list\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeTaskStatusDropdown\n                        \n                    \n                \n            \n            \n                \ncloseTaskStatusDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Close dropdown menu in \"task card\" element (child of \"task list\" element)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeTaskView\n                        \n                    \n                \n            \n            \n                \ncloseTaskView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:60\n                        \n                    \n\n\n            \n                \n                        This functon closes the \"task view\" component/overlay by unsetting the \"viewTaskId\" property\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:43\n                        \n                    \n\n\n            \n                \n                        This function returns a full task by its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                task\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideTaskForm\n                        \n                    \n                \n            \n            \n                \nhideTaskForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Hide \"add task\" component with slide animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:91\n                        \n                    \n\n\n            \n                \n                        When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\nSmaller screens will use router navigation.\nIn case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\nIn this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDragCardHeight\n                        \n                    \n                \n            \n            \n                \nsetDragCardHeight(height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Set \"dragCardHeight\" property to a certain height in pixels.\nThe height should be retrieved from the currently dragged task card HTML element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    card height\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDragStartStatus\n                        \n                    \n                \n            \n            \n                \nsetDragStartStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Set \"dragStartStatus\" property to a certain task status.\nThe status should be retrieved from the currently dragged task card HTML element or the task list containing it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTaskForm\n                        \n                    \n                \n            \n            \n                \nshowTaskForm(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Show the \"add task\" component.\nLeaving \"id\" empty ('') will result in \"add\" mode. Using an actual ID will result in editing the corresponding task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideTaskFormWrapper\n                        \n                    \n                \n            \n            \n                \nslideTaskFormWrapper()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Trigger slide animation for \"add task\" component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTask\n                        \n                    \n                \n            \n            \n                \nviewTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:52\n                        \n                    \n\n\n            \n                \n                        This function sets the \"viewTaskId\" property, which will result in displaying the \"task view\" component\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closingTaskStatusDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragCardHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStartStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n\n                    \n                \n                \n                    \n                        Default value : 'To do'\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (\"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")[]\n\n                    \n                \n                \n                    \n                        Default value : ['To do', 'In progress', 'Await feedback', 'Done']\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFormId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFormWrapperTranslated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTaskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Task } from '../../../models/task';\nimport { TasksService } from '../../services/tasks.service';\nimport { TaskViewComponent } from './task-view/task-view.component';\nimport { AddTaskComponent } from '../add-task/add-task.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n\n/**\n * This component displays the task board.\n * It contains an overview of all tasks sorted by their respective status.\n * It also contains a search function to filter tasks.\n */\n@Component({\n  selector: 'app-board',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TaskListComponent, TaskViewComponent, AddTaskComponent],\n  templateUrl: './board.component.html',\n  styleUrl: './board.component.scss'\n})\nexport class BoardComponent {\n  private tasksService = inject(TasksService);\n  private router = inject(Router);\n  statusList: ('To do' | 'In progress' | 'Await feedback' | 'Done')[] = ['To do', 'In progress', 'Await feedback', 'Done'];\n  viewTaskId: number = -1;\n  taskFormId: number | null = null;\n  taskFormWrapperTranslated: boolean = true;\n  dragCardHeight: number = 160;\n  dragStartStatus: 'To do' | 'In progress' | 'Await feedback' | 'Done' = 'To do';\n  searchFilter: string = '';\n  closingTaskStatusDropdown: Subject = new Subject();\n\n\n  /**\n   * This function returns a full task by its ID\n   * @param id task ID\n   * @returns task\n   */\n  getTaskById(id: number): Task {\n    return this.tasksService.getTaskById(id) || new Task({});\n  }\n\n\n  /**\n   * This function sets the \"viewTaskId\" property, which will result in displaying the \"task view\" component\n   * @param id task ID\n   */\n  viewTask(id: number) {\n    this.viewTaskId = id;\n  }\n\n\n  /**\n   * This functon closes the \"task view\" component/overlay by unsetting the \"viewTaskId\" property\n   */\n  closeTaskView() {\n    this.viewTaskId = -1;\n  }\n\n\n  /**\n   * Show the \"add task\" component.\n   * Leaving \"id\" empty ('') will result in \"add\" mode. Using an actual ID will result in editing the corresponding task.\n   * @param id task ID\n   */\n  showTaskForm(id: number) {\n    this.taskFormId = id;\n  }\n\n\n  /**\n   * Hide \"add task\" component with slide animation.\n   */\n  hideTaskForm() {\n    this.slideTaskFormWrapper();\n    setTimeout(() => this.taskFormId = null, 125);\n  }\n\n\n  /**\n   * When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\n   * Smaller screens will use router navigation.\n   * In case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\n   * In this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded. \n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    if (this.taskFormId == -1 && window.innerWidth  768 ? this.showTaskForm(-1) : this.router.navigate(['/add_task']);\n    }\n  }\n\n\n  /**\n   * Trigger slide animation for \"add task\" component\n   */\n  slideTaskFormWrapper() {\n    this.taskFormWrapperTranslated = !this.taskFormWrapperTranslated;\n  }\n\n\n  /**\n   * Set \"dragCardHeight\" property to a certain height in pixels.\n   * The height should be retrieved from the currently dragged task card HTML element.\n   * @param height card height\n   */\n  setDragCardHeight(height: number) {\n    this.dragCardHeight = height;\n  }\n\n\n  /**\n   * Set \"dragStartStatus\" property to a certain task status.\n   * The status should be retrieved from the currently dragged task card HTML element or the task list containing it. \n   * @param status task status\n   */\n  setDragStartStatus(status: 'To do' | 'In progress' | 'Await feedback' | 'Done') {\n    this.dragStartStatus = status;\n  }\n\n\n  /**\n   * Close dropdown menu in \"task card\" element (child of \"task list\" element)\n   */\n  closeTaskStatusDropdown() {\n    this.closingTaskStatusDropdown.next();\n  }\n}\n\n    \n\n    \n        \n    \n        Board\n        \n            \n                \n                \n                \n            \n            \n                Add task\n                \n            \n        \n    \n    \n        @for (status of statusList; track status) {\n        \n        }\n    \n\n\n@if(taskFormId != null) {\n\n    \n        @if(taskFormId == -1) {\n        \n        } @else {\n        \n        }\n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Board                                                                                                            Add task                                                    @for (status of statusList; track status) {                }    @if(taskFormId != null) {            @if(taskFormId == -1) {                } @else {                }    }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseBtnComponent.html":{"url":"components/CloseBtnComponent.html","title":"component - CloseBtnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseBtnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/close-btn/close-btn.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a button in X shape.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close-btn\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./close-btn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close-btn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/close-btn/close-btn.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a button in X shape.\n */\n@Component({\n  selector: 'app-close-btn',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './close-btn.component.html',\n  styleUrl: './close-btn.component.scss'\n})\nexport class CloseBtnComponent {\n@Input() bright?: boolean;\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseBtnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Contact.html":{"url":"classes/Contact.html","title":"class - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a user contact.\nA contact can be added by the user from scratch.\nContacts are also created when additional data (email/phone)\nis added by the active user to other users.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color_id\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/contact.ts:15\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/contact.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves hexadecimal color string from color id.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                hex color\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/contact.ts:36\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../environments/environment.development';\n\n\n/**\n * This class represents a user contact.\n * A contact can be added by the user from scratch.\n * Contacts are also created when additional data (email/phone)\n * is added by the active user to other users.\n */\nexport class Contact {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    color_id: number;\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.name = obj.name ? obj.name : '';\n        this.color_id = obj.color_id ? obj.color_id : -1;\n        this.email = obj.email ? obj.email : undefined;\n        this.phone = obj.phone ? obj.phone : undefined;\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const json: any = {\n            name: this.name,\n            color_id: this.color_id == -1 ? Math.floor(Math.random() * 25) : this.color_id,\n            email: this.email,\n            phone: this.phone,\n        };\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n\n\n    /**\n     * Retrieves hexadecimal color string from color id.\n     * @returns {string} hex color\n     */\n    getColor(): string {\n        return environment.BADGE_COLORS[this.color_id] || '#d1d1d1';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactListItemComponent.html":{"url":"components/ContactListItemComponent.html","title":"component - ContactListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/contact-list-item/contact-list-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a contact card including name and badge.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contact-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contact-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                designateAsYou\n                            \n                            \n                                email\n                            \n                            \n                                instance\n                            \n                            \n                                name\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#DDDDDD'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        designateAsYou\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n                \n                    \n                        Type :     \"contacts\" | \"task\"\n\n                    \n                \n                \n                    \n                        Default value : 'contacts'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonBadgeComponent } from '../../../templates/person-badge/person-badge.component';\nimport { EmailComponent } from '../email/email.component';\n\n\n/**\n * This component displays a contact card including name and badge.\n */\n@Component({\n  selector: 'app-contact-list-item',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, EmailComponent],\n  templateUrl: './contact-list-item.component.html',\n  styleUrl: './contact-list-item.component.scss'\n})\nexport class ContactListItemComponent {\n  @Input() name: string = 'name';\n  @Input() email?: string | undefined;\n  @Input() color: string = '#DDDDDD';\n  @Input() instance: 'contacts' | 'task' = 'contacts';\n  @Input() selected?: boolean = false;\n  @Input() designateAsYou?: boolean = false;\n}\n    \n\n    \n        \n    \n    \n        \n            {{name}}\n            @if(designateAsYou) {(you)}\n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{name}}            @if(designateAsYou) {(you)}                    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsService.html":{"url":"injectables/ContactsService.html","title":"injectable - ContactsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contacts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addContact\n                            \n                            \n                                addContactLocally\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                deleteContactLocally\n                            \n                            \n                                    Async\n                                syncContacts\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                            \n                                updateContactLocally\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/contacts.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    addContact(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Add a new contact to the current user's contact list.\nSends a POST request to the server to save the contact, and also updates the contact list locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addContactLocally\n                        \n                    \n                \n            \n            \n                \naddContactLocally(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Add a contact to the current user's contact list locally.\nThis does not communicate with the server and only updates the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object to be added locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteContact(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Delete a contact from the current user's contact list.\nSends a DELETE request to the server to remove the contact, and also removes it locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the contact to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContactLocally\n                        \n                    \n                \n            \n            \n                \ndeleteContactLocally(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Delete a contact from the current user's contact list locally.\nThis does not communicate with the server and only removes the contact from the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the contact to be removed locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncContacts\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Synchronize contacts from the backend for the current user.\nRetrieves the contacts list from the server and updates the current user's contacts locally.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when the contacts have been successfully synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateContact(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Update an existing contact in the current user's contact list.\nSends a PUT request to the server to update the contact, and also updates the contact locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object containing updated information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContactLocally\n                        \n                    \n                \n            \n            \n                \nupdateContactLocally(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Update a contact in the current user's contact list locally.\nThis does not communicate with the server and only updates the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object containing updated information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contacts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Contact } from \"../../models/contact\";\nimport { AuthService } from './auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, lastValueFrom } from \"rxjs\";\nimport { environment } from \"../../environments/environment.development\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n  contacts$: Subject = new Subject();\n\n  \n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Synchronize contacts from the backend for the current user.\n   * Retrieves the contacts list from the server and updates the current user's contacts locally.\n   * @returns A Promise resolving when the contacts have been successfully synced.\n   */\n  async syncContacts(): Promise {\n    if (this.authService.currentUser && this.authService.currentUser.user.id != -1) {\n      const url = environment.BASE_URL + 'contacts/';\n      const resp = await lastValueFrom(this.http.get(url));\n      this.authService.currentUser.contacts = [];\n      (resp as Array).forEach(cData => {\n        this.authService.currentUser?.contacts?.push(new Contact(cData));\n      });\n      this.authService.currentUser$.next(this.authService.currentUser);\n      this.contacts$.next();\n    }\n  }\n\n\n  /**\n   * Add a new contact to the current user's contact list.\n   * Sends a POST request to the server to save the contact, and also updates the contact list locally.\n   * @param contact The contact object to be added.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated.\n   */\n  async addContact(contact: Contact): Promise {\n    if (this.authService.currentUser) {\n      this.addContactLocally(contact);\n      const url = environment.BASE_URL + 'contacts/';\n      const body = contact.toJson();\n      return lastValueFrom(this.http.post(url, body));\n    } return;\n  }\n\n\n  /**\n   * Add a contact to the current user's contact list locally.\n   * This does not communicate with the server and only updates the in-memory contact list.\n   * @param contact The contact object to be added locally.\n   */\n  addContactLocally(contact: Contact): void {\n    if (this.authService.currentUser) {\n      if (!this.authService.currentUser.contacts) {\n        this.authService.currentUser.contacts = [];\n      }\n      this.authService.currentUser.contacts.push(contact);\n      this.contacts$.next();\n    }\n  }\n\n\n  /**\n   * Update an existing contact in the current user's contact list.\n   * Sends a PUT request to the server to update the contact, and also updates the contact locally.\n   * @param contact The contact object containing updated information.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n   */\n  async updateContact(contact: Contact): Promise {\n    if (contact.id != -1 && this.authService.currentUser) {\n      this.updateContactLocally(contact);\n      const url = environment.BASE_URL + 'contacts/' + contact.id + '/';\n      const body = contact.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } return;\n  }\n\n\n  /**\n   * Update a contact in the current user's contact list locally.\n   * This does not communicate with the server and only updates the in-memory contact list.\n   * @param contact The contact object containing updated information.\n   */\n  updateContactLocally(contact: Contact): void {\n    if (this.authService.currentUser && this.authService.currentUser.contacts) {\n      const contactsArrayIndex = this.authService.currentUser.contacts.findIndex(c => c.id == contact.id);\n      if (contactsArrayIndex >= 0) {\n        this.authService.currentUser.contacts[contactsArrayIndex] = contact;\n        this.contacts$.next();\n      } else {\n        console.error('Task with ID', contact.id, 'could not be updated (task not found).');\n      }\n    }\n  }\n\n\n  /**\n   * Delete a contact from the current user's contact list.\n   * Sends a DELETE request to the server to remove the contact, and also removes it locally.\n   * @param id The ID of the contact to be deleted.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n   */\n  async deleteContact(id: number): Promise {\n    if (id != -1 && this.authService.currentUser) {\n      this.deleteContactLocally(id);\n      const url = environment.BASE_URL + 'contacts/' + id + '/';\n      return lastValueFrom(this.http.delete(url));\n    } return;\n  }\n\n\n  /**\n   * Delete a contact from the current user's contact list locally.\n   * This does not communicate with the server and only removes the contact from the in-memory contact list.\n   * @param id The ID of the contact to be removed locally.\n   */\n  deleteContactLocally(id: number): void {\n    if (this.authService.currentUser && this.authService.currentUser.contacts) {\n      const contactsArrayIndex = this.authService.currentUser.contacts.findIndex(c => c.id == id);\n      if (contactsArrayIndex >= 0) {\n        this.authService.currentUser.contacts.splice(contactsArrayIndex, 1);\n        this.contacts$.next();\n      } else {\n        console.error('Task with ID', id, 'could not be deleted (task not found).');\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/email/email.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a linked email address.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n            \n                styleUrl\n                ./email.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/email/email.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a linked email address.\n */\n@Component({\n  selector: 'app-email',\n  standalone: true,\n  imports: [],\n  templateUrl: './email.component.html',\n  styleUrl: './email.component.scss'\n})\nexport class EmailComponent {\n@Input() email: string = 'email';\n}\n\n    \n\n    \n        {{email}}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{email}}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GreetingComponent.html":{"url":"components/GreetingComponent.html","title":"component - GreetingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GreetingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/greeting/greeting.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a personalized greeting formula to the user, which also corresponds the time of day.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-greeting\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./greeting.component.html\n            \n\n\n\n            \n                styleUrl\n                ./greeting.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                authSub\n                            \n                            \n                                currentUserName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGreeting\n                            \n                            \n                                initUsername\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGreeting\n                        \n                    \n                \n            \n            \n                \ngetGreeting()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Generate greeting by time of day and user name\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                greeting formula (does not yet include actual user name)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initUsername\n                        \n                    \n                \n            \n            \n                \ninitUsername(currentUser: AppUser | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Initializes the username. The local user name is set to \"null\"\nin case guest log in is being used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            AppUser | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe currently active app user\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Sets up username initialization. Performs a subscription to consider\nthe case that the username * has not yet been loaded into the\nauthentication service upon component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from '../../../../models/app-user';\n\n\n/**\n * This component displays a personalized greeting formula to the user, which also corresponds the time of day. \n */\n@Component({\n  selector: 'app-greeting',\n  standalone: true,\n  imports: [],\n  templateUrl: './greeting.component.html',\n  styleUrl: './greeting.component.scss'\n})\nexport class GreetingComponent implements OnInit, OnDestroy {\n  private authService = inject(AuthService);\n  authSub = new Subscription();\n  currentUserName: string | null = null;\n\n\n  /**\n   * Sets up username initialization. Performs a subscription to consider\n   * the case that the username * has not yet been loaded into the\n   * authentication service upon component initialization.\n   */\n  ngOnInit(): void {\n    this.initUsername(this.authService.currentUser);\n    this.authSub = this.authService.currentUser$.subscribe((u: AppUser | null) => this.initUsername(u));\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n  }\n\n\n  /**\n   * Initializes the username. The local user name is set to \"null\"\n   * in case guest log in is being used.\n   * @param {AppUser | null} currentUser - The currently active app user \n   */\n  initUsername(currentUser: AppUser | null): void {\n    if (currentUser && currentUser.user.email.slice(-9) != 'token.key') {\n      this.currentUserName = currentUser.user.username;\n    } else {\n      this.currentUserName = null;\n    }\n  }\n\n\n  /**\n   * Generate greeting by time of day and user name\n   * @returns greeting formula (does not yet include actual user name)\n   */\n  getGreeting(): string {\n    const currentHour = new Date().getHours();\n    let greeting: string = '';\n    if(currentHour \n    \n\n    \n        \n    {{getGreeting()}}\n    @if(currentUserName) {\n    {{currentUserName}}\n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{getGreeting()}}    @if(currentUserName) {    {{currentUserName}}    }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GreetingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the header.\nIt contains a badge for the active user and a dropdown menu for secondary navigation and logging out.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                displayDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateDropdown\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayDropdown\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateDropdown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Log out via \"authService\" and navigate to landing page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Toggle dropdown menu and emit corresponding event to parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { AppUser } from '../../../models/app-user';\nimport { PersonBadgeComponent } from '../../templates/person-badge/person-badge.component';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n\n/**\n * This component displays the header.\n * It contains a badge for the active user and a dropdown menu for secondary navigation and logging out.\n */\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, RouterModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  @Input() currentUser?: AppUser | null;\n  @Input() displayDropdown: boolean = false;\n  @Output() updateDropdown = new EventEmitter();\n  private authService = inject(AuthService);\n  private router = inject(Router); \n\n\n  /**\n   * Toggle dropdown menu and emit corresponding event to parent component\n   */\n  toggleDropdown() {\n    this.displayDropdown = !this.displayDropdown;\n    this.updateDropdown.emit(this.displayDropdown);\n  }\n\n\n  /**\n   * Log out via \"authService\" and navigate to landing page\n   */\n  logOut() {\n    this.authService.logOut();\n    this.router.navigate((['']));\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    Kanban Project Management Tool\n    \n        \n            \n        \n        @if(currentUser) {\n        \n        }\n    \n    \n        Help\n        Legal notice\n        Privacy policy\n        Log out\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanban Project Management Tool                                        @if(currentUser) {                }                Help        Legal notice        Privacy policy        Log out    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeadlineOtherComponent.html":{"url":"components/HeadlineOtherComponent.html","title":"component - HeadlineOtherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeadlineOtherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/headline-other/headline-other.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a headline together with a functional inline arrow back button.\nIt is to be used for the components in the \"app/other\" directory.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-headline-other\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArrowBackBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./headline-other.component.html\n            \n\n\n\n            \n                styleUrl\n                ./headline-other.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBackClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headline\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-other/headline-other.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBackClick\n                        \n                    \n                \n            \n            \n                \nonBackClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/headline-other/headline-other.component.ts:29\n                        \n                    \n\n\n            \n                \n                        On arrow back click, navigate...\n\nto the summary page if logged in\nto the general landing page if not logged in\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/headline-other/headline-other.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/headline-other/headline-other.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, inject } from '@angular/core';\nimport { ArrowBackBtnComponent } from '../arrow-back-btn/arrow-back-btn.component';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n\n/**\n * This component displays a headline together with a functional inline arrow back button.\n * It is to be used for the components in the \"app/other\" directory.\n */\n@Component({\n  selector: 'app-headline-other',\n  standalone: true,\n  imports: [ArrowBackBtnComponent],\n  templateUrl: './headline-other.component.html',\n  styleUrl: './headline-other.component.scss'\n})\nexport class HeadlineOtherComponent {\n  @Input() headline: string = '';\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n\n  /**\n   * On arrow back click, navigate...\n   * - to the summary page if logged in\n   * - to the general landing page if not logged in\n   */\n  onBackClick() {\n    const uid = this.authService.getCurrentUid();\n    uid ? this.router.navigate((['/summary'])) : this.router.navigate((['']));\n  }\n}\n    \n\n    \n        \n    {{headline}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{headline}}    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeadlineOtherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeadlineSloganComponent.html":{"url":"components/HeadlineSloganComponent.html","title":"component - HeadlineSloganComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeadlineSloganComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/headline-slogan/headline-slogan.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a headline together with an additional slogan.\nThey are separated by a blue separator.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-headline-slogan\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./headline-slogan.component.html\n            \n\n\n\n            \n                styleUrl\n                ./headline-slogan.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headline\n                            \n                            \n                                slogan\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-slogan/headline-slogan.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slogan\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-slogan/headline-slogan.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a headline together with an additional slogan.\n * They are separated by a blue separator.\n */\n@Component({\n  selector: 'app-headline-slogan',\n  standalone: true,\n  imports: [],\n  templateUrl: './headline-slogan.component.html',\n  styleUrl: './headline-slogan.component.scss'\n})\nexport class HeadlineSloganComponent {\n@Input() headline: string = '';\n@Input() slogan: string = '';\n}\n\n    \n\n    \n        \n    {{headline}}\n    \n    {{slogan}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{headline}}        {{slogan}}    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeadlineSloganComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/help/help.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a join usage manual\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeadlineOtherComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n            \n                styleUrl\n                ./help.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeadlineOtherComponent } from '../../templates/headline-other/headline-other.component';\nimport { EmailComponent } from '../../main/contacts/email/email.component';\n\n\n/**\n * This component displays a join usage manual\n */\n@Component({\n  selector: 'app-help',\n  standalone: true,\n  imports: [HeadlineOtherComponent, EmailComponent],\n  templateUrl: './help.component.html',\n  styleUrl: './help.component.scss'\n})\nexport class HelpComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n        Welcome to the help page for Join, your\n        guide to using our kanban project management tool. Here, we'll\n        provide an overview of what Join is, how\n        it can benefit you, and how to use it.\n    \n    What is Join?\n    \n        Join is a kanban-based project management\n        tool designed and built by a group of dedicated students as part of\n        their web development bootcamp at the Developer Akademie.\n        Kanban, a Japanese term meaning \"billboard\", is a highly\n        effective method to visualize work, limit work-in-progress, and\n        maximize efficiency (or flow).\n        Join leverages the principles of kanban\n        to help users manage their tasks and projects in an intuitive,\n        visual interface.\n        It is important to note that\n        Join is designed as an educational\n        exercise and is not intended for extensive business usage. While we\n        strive to ensure the best possible user experience, we cannot\n        guarantee consistent availability, reliability, accuracy, or other\n        aspects of quality regarding Join.\n    \n    How to use it\n    \n        Here is a step-by-step guide on how to use\n        Join:\n    \n    \n        \n            \n                Exploring the board\n                When you log in to Join, you'll find a\n                default board. This board represents your project and contains\n                four default lists: \"To Do\", \"In Progress\", “Await feedback” and\n                \"Done\".\n            \n        \n        \n            \n                Creating contacts\n                In Join,\n                you can add contacts to collaborate on your projects. Go to the\n                \"Contacts\" section, click on \"New contact\", and fill in the\n                required information. Once added, these contacts can be assigned\n                tasks and they can interact with the tasks on the board.\n            \n        \n        \n            \n                Adding cards\n                Now that you've added your contacts,\n                you can start adding cards. Cards represent individual tasks.\n                Click the \"+\" button under the appropriate list to create a new\n                card. Fill in the task details in the card, like task name,\n                description, due date, assignees, etc.\n            \n        \n        \n            \n                Moving cards\n                As the task moves from one stage to\n                another, you can reflect that on the board by dragging and\n                dropping the card from one list to another.\n            \n        \n        \n            \n                Deleting cards\n                Once a task is completed, you can\n                either move it to the \"Done\" list or delete it. Deleting a card\n                will permanently remove it from the board. Please exercise caution\n                when deleting cards, as this action is irreversible. Remember that\n                using Join effectively requires\n                consistent updates from you and your team to ensure the board\n                reflects the current state of your project. Have more questions\n                about Join? Feel free to contact us at:\n                \n                \n                We're here to help you!\n            \n        \n    \n    \n        Enjoy using Join!\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome to the help page for Join, your        guide to using our kanban project management tool. Here, we\\'ll        provide an overview of what Join is, how        it can benefit you, and how to use it.        What is Join?            Join is a kanban-based project management        tool designed and built by a group of dedicated students as part of        their web development bootcamp at the Developer Akademie.        Kanban, a Japanese term meaning \"billboard\", is a highly        effective method to visualize work, limit work-in-progress, and        maximize efficiency (or flow).        Join leverages the principles of kanban        to help users manage their tasks and projects in an intuitive,        visual interface.        It is important to note that        Join is designed as an educational        exercise and is not intended for extensive business usage. While we        strive to ensure the best possible user experience, we cannot        guarantee consistent availability, reliability, accuracy, or other        aspects of quality regarding Join.        How to use it            Here is a step-by-step guide on how to use        Join:                                            Exploring the board                When you log in to Join, you\\'ll find a                default board. This board represents your project and contains                four default lists: \"To Do\", \"In Progress\", “Await feedback” and                \"Done\".                                                        Creating contacts                In Join,                you can add contacts to collaborate on your projects. Go to the                \"Contacts\" section, click on \"New contact\", and fill in the                required information. Once added, these contacts can be assigned                tasks and they can interact with the tasks on the board.                                                        Adding cards                Now that you\\'ve added your contacts,                you can start adding cards. Cards represent individual tasks.                Click the \"+\" button under the appropriate list to create a new                card. Fill in the task details in the card, like task name,                description, due date, assignees, etc.                                                        Moving cards                As the task moves from one stage to                another, you can reflect that on the board by dragging and                dropping the card from one list to another.                                                        Deleting cards                Once a task is completed, you can                either move it to the \"Done\" list or delete it. Deleting a card                will permanently remove it from the board. Please exercise caution                when deleting cards, as this action is irreversible. Remember that                using Join effectively requires                consistent updates from you and your team to ensure the board                reflects the current state of your project. Have more questions                about Join? Feel free to contact us at:                                                We\\'re here to help you!                                    Enjoy using Join!        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalNoticeComponent.html":{"url":"components/LegalNoticeComponent.html","title":"component - LegalNoticeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalNoticeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/legal-notice/legal-notice.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a join legal notice\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-notice\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeadlineOtherComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./legal-notice.component.html\n            \n\n\n\n            \n                styleUrl\n                ./legal-notice.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeadlineOtherComponent } from '../../templates/headline-other/headline-other.component';\nimport { EmailComponent } from '../../main/contacts/email/email.component';\n\n\n/**\n * This component displays a join legal notice\n */\n@Component({\n  selector: 'app-legal-notice',\n  standalone: true,\n  imports: [HeadlineOtherComponent, EmailComponent],\n  templateUrl: './legal-notice.component.html',\n  styleUrl: './legal-notice.component.scss'\n})\nexport class LegalNoticeComponent {\n\n}\n\n    \n\n    \n        \n    \n    Imprint\n    \n        Bengt Früchtenicht, Daniel Schneider, Frederic Paetzold, Marcel Schiller\n        Unterm Berg 38b\n        26123 Oldenburg\n    \n    Exploring the Board\n    \n    Acceptance of terms\n    \n        By accessing and using Join (Product), you acknowledge and agree to the following terms and conditions, and any\n        policies, guidelines, or amendments thereto that may be presented to you from time to time. We, the listed\n        students, may update or change the terms and conditions from time to time without notice.\n    \n    Scope and ownership of the product\n    \n        Join has been developed as part of a student group project in a web development bootcamp at the Developer\n        Akademie GmbH. It has an educational purpose and is not intended for extensive personal & business usage. As\n        such, we cannot guarantee consistent availability, reliability, accuracy, or any other aspect of quality\n        regarding this Product.\n\n        The design of Join is owned by the Developer Akademie GmbH. Unauthorized use, reproduction, modification,\n        distribution, or replication of the design is strictly prohibited.\n    \n    Proprietary rights\n    \n        Aside from the design owned by Developer Akademie GmbH, we, the listed students, retain all proprietary rights\n        in Join, including any associated copyrighted material, trademarks, and other proprietary information.\n    \n    Use of the product\n    \n        Join is intended to be used for lawful purposes only, in accordance with all applicable laws and regulations.\n        Any use of Join for illegal activities, or to harass, harm, threaten, or intimidate another person, is strictly\n        prohibited. You are solely responsible for your interactions with other users of Join.\n    \n    Disclaimer of warranties and limitation of liability\n    \n        Join is provided \"as is\" without warranty of any kind, whether express or implied,\n        including but not limited to the implied warranties of merchantability, fitness for a particular purpose,\n        and non-infringement. In no event\n        will we, the listed students, or the Developer Akademie, be liable for any direct, indirect, incidental,\n        special, consequential or exemplary damages, including but not limited to, damages for loss of profits,\n        goodwill, use, data, or other intangible losses, even if we have been advised of the possibility of such\n        damages, arising out of or in connection with the use or performance of Join.\n    \n    Indemnity\n    \n        You agree to indemnify, defend and hold harmless us, the listed students, the Developer Akademie, and our\n        affiliates, partners, officers, directors, agents, and employees, from and against any claim, demand, loss,\n        damage, cost, or liability (including reasonable legal fees) arising out of or relating to your use of Join\n        and/or your breach of this Legal Notice.\n        For any questions or notices, please contact us at .\n        Date: July 26, 2023\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Imprint            Bengt Früchtenicht, Daniel Schneider, Frederic Paetzold, Marcel Schiller        Unterm Berg 38b        26123 Oldenburg        Exploring the Board        Acceptance of terms            By accessing and using Join (Product), you acknowledge and agree to the following terms and conditions, and any        policies, guidelines, or amendments thereto that may be presented to you from time to time. We, the listed        students, may update or change the terms and conditions from time to time without notice.        Scope and ownership of the product            Join has been developed as part of a student group project in a web development bootcamp at the Developer        Akademie GmbH. It has an educational purpose and is not intended for extensive personal & business usage. As        such, we cannot guarantee consistent availability, reliability, accuracy, or any other aspect of quality        regarding this Product.        The design of Join is owned by the Developer Akademie GmbH. Unauthorized use, reproduction, modification,        distribution, or replication of the design is strictly prohibited.        Proprietary rights            Aside from the design owned by Developer Akademie GmbH, we, the listed students, retain all proprietary rights        in Join, including any associated copyrighted material, trademarks, and other proprietary information.        Use of the product            Join is intended to be used for lawful purposes only, in accordance with all applicable laws and regulations.        Any use of Join for illegal activities, or to harass, harm, threaten, or intimidate another person, is strictly        prohibited. You are solely responsible for your interactions with other users of Join.        Disclaimer of warranties and limitation of liability            Join is provided \"as is\" without warranty of any kind, whether express or implied,        including but not limited to the implied warranties of merchantability, fitness for a particular purpose,        and non-infringement. In no event        will we, the listed students, or the Developer Akademie, be liable for any direct, indirect, incidental,        special, consequential or exemplary damages, including but not limited to, damages for loss of profits,        goodwill, use, data, or other intangible losses, even if we have been advised of the possibility of such        damages, arising out of or in connection with the use or performance of Join.        Indemnity            You agree to indemnify, defend and hold harmless us, the listed students, the Developer Akademie, and our        affiliates, partners, officers, directors, agents, and employees, from and against any claim, demand, loss,        damage, cost, or liability (including reasonable legal fees) arising out of or relating to your use of Join        and/or your breach of this Legal Notice.        For any questions or notices, please contact us at .        Date: July 26, 2023        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalNoticeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogInPageComponent.html":{"url":"components/LogInPageComponent.html","title":"component - LogInPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogInPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/log-in-page/log-in-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component represents the log in/sign up page, which serves as the general landing page.\nIt includes the intro animation and manages the login and registration modes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-in-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RegistrationFormComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./log-in-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./log-in-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                formMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFormMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/log-in-page/log-in-page.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component.\nIt disables the intro animation after 800 milliseconds.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFormMode\n                        \n                    \n                \n            \n            \n                \ntoggleFormMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/log-in-page/log-in-page.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Toggles the form mode between 'Log in' and 'Sign up' in the registration form component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/log-in-page/log-in-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"Log in\" | \"Sign up\"\n\n                    \n                \n                \n                    \n                        Default value : 'Log in'\n                    \n                \n                    \n                        \n                                Defined in src/app/log-in-page/log-in-page.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { RouterModule } from '@angular/router';\n\n\n/**\n * @component\n * This component represents the log in/sign up page, which serves as the general landing page. \n * It includes the intro animation and manages the login and registration modes.\n */\n@Component({\n  selector: 'app-log-in-page',\n  standalone: true,\n  imports: [CommonModule, RegistrationFormComponent, RouterModule],\n  templateUrl: './log-in-page.component.html',\n  styleUrl: './log-in-page.component.scss'\n})\nexport class LogInPageComponent implements OnInit {\n  animate: boolean = true;\n  formMode: 'Log in' | 'Sign up' = 'Log in';\n\n\n  /**\n   * Lifecycle hook that initializes the component.\n   * It disables the intro animation after 800 milliseconds.\n   */\n  ngOnInit() {\n    setTimeout(() => this.animate = false, 800);\n  }\n\n\n  /**\n   * Toggles the form mode between 'Log in' and 'Sign up' in the registration form component.\n   */\n  toggleFormMode() {\n    this.formMode == 'Log in' ? this.formMode = 'Sign up' : this.formMode = 'Log in';\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n        \n    \n    @if(formMode == 'Log in') {\n        \n    } @else {\n        \n    }\n    \n        \n            Not a Join user?\n            Sign up\n        \n        \n            \n                Privacy policy\n            \n            \n                Legal notice\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    @if(formMode == \\'Log in\\') {            } @else {            }                        Not a Join user?            Sign up                                            Privacy policy                                        Legal notice                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogInPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menu/menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the primary menu.\nIt is supposed to be constantly visible when the user is logged in.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/menu/menu.component.ts:17\n                            \n                        \n\n                \n                    \n                            Create router instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentRoute\n                        \n                    \n                \n            \n            \n                \ngetCurrentRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/menu/menu.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Get current router route\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                current url\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\n\n\n/**\n * This component displays the primary menu.\n * It is supposed to be constantly visible when the user is logged in.\n */\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss'\n})\nexport class MenuComponent {\n\n\n  /**\n   * Create router instance\n   * @param router instance of Router\n   */\n  constructor(private router: Router ) {}\n\n\n  /**\n   * Get current router route\n   * @returns current url\n   */\n  getCurrentRoute() {\n    return this.router.url;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n            Summary\n        \n        \n            \n            Add Task\n        \n        \n            \n            Board\n        \n        \n            \n            Contacts\n        \n    \n    \n        Privacy policy\n        Legal notice\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Summary                                        Add Task                                        Board                                        Contacts                        Privacy policy        Legal notice    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordIconComponent.html":{"url":"components/PasswordIconComponent.html","title":"component - PasswordIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/password-icon/password-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the icon marking a password input field.\nDepending on the input state, there a three different icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-icon\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/password-icon/password-icon.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays the icon marking a password input field.\n * Depending on the input state, there a three different icons.\n */\n@Component({\n  selector: 'app-password-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './password-icon.component.html',\n  styleUrl: './password-icon.component.scss'\n})\nexport class PasswordIconComponent {\n@Input() state: 'default' | 'password' | 'text' = 'default';\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonBadgeComponent.html":{"url":"components/PersonBadgeComponent.html","title":"component - PersonBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/person-badge/person-badge.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a badge showing a Person's initials and individual background color.\nThere are some optional variables for styling in different contexts.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person-badge\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./person-badge.component.html\n            \n\n\n\n            \n                styleUrl\n                ./person-badge.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                currentUser\n                            \n                            \n                                large\n                            \n                            \n                                name\n                            \n                            \n                                responsive\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#d1d1d1'\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        large\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        responsive\n                    \n                \n                \n                    \n                        Type :     \"desktop\" | \"mobile\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/person-badge/person-badge.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Get capitalized initials from \"name\"\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                initials\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a badge showing a Person's initials and individual background color.\n * There are some optional variables for styling in different contexts. \n */\n@Component({\n  selector: 'app-person-badge',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './person-badge.component.html',\n  styleUrl: './person-badge.component.scss'\n})\nexport class PersonBadgeComponent {\n  @Input() name: string = '';\n  @Input() color: string = '#d1d1d1';\n  @Input() large?: boolean;\n  @Input() currentUser?: boolean;\n  @Input() responsive?: 'desktop' | 'mobile';\n\n\n  /**\n   * Get capitalized initials from \"name\"\n   * @returns initials\n   */\n  getInitials() {\n    const nameParts: string[] = this.name.split(' ');\n    const capitalized = nameParts.map(part => part.charAt(0).toUpperCase()).join('');\n    return capitalized.substring(0,3);\n  }\n}\n\n    \n\n    \n        \n    @if(name && name.length > 0) {\n    {{getInitials()}}\n    } @else {\n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(name && name.length > 0) {    {{getInitials()}}    } @else {        }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrioIconComponent.html":{"url":"components/PrioIconComponent.html","title":"component - PrioIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrioIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/prio-icon/prio-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a priority icon (i.e., one of three icons corresponding to the three priority values).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-prio-icon\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./prio-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./prio-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                prio\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        prio\n                    \n                \n                \n                    \n                        Type :     \"Urgent\" | \"Medium\" | \"Low\" | string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/prio-icon/prio-icon.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a priority icon (i.e., one of three icons corresponding to the three priority values).\n */\n@Component({\n  selector: 'app-prio-icon',\n  standalone: true,\n  imports: [],\n  templateUrl: './prio-icon.component.html',\n  styleUrl: './prio-icon.component.scss'\n})\nexport class PrioIconComponent {\n@Input() prio: 'Urgent' | 'Medium' | 'Low' | '' = '';\n}\n\n    \n\n    \n        @if(prio == 'Urgent') {\n\n} @else if(prio == 'Medium') {\n\n} @else if(prio == 'Low') {\n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(prio == \\'Urgent\\') {} @else if(prio == \\'Medium\\') {} @else if(prio == \\'Low\\') {}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrioIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/reset-password/reset-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a reset password form.\nThe component requires a reset password token (named \"token\") to be read from the route parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                                PasswordIconComponent\n                                ToastNotificationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError\n                            \n                            \n                                formData\n                            \n                            \n                                paramSub\n                            \n                            \n                                    \n                                passwordConfirmationContainerRef\n                            \n                            \n                                passwordConfirmationFieldType\n                            \n                            \n                                    \n                                passwordContainerRef\n                            \n                            \n                                passwordFieldType\n                            \n                            \n                                showToastMsg\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPasswordConfirmation\n                            \n                            \n                                focusLastCharacter\n                            \n                            \n                                getFieldContainerRefInput\n                            \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordFieldType\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                transferAfterReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/other/reset-password/reset-password.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckPasswordConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Check if both passwords match each other.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Password confirmation check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusLastCharacter\n                        \n                    \n                \n            \n            \n                \nfocusLastCharacter(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Focus the last position of the input element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input field\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldContainerRefInput\n                        \n                    \n                \n            \n            \n                \ngetFieldContainerRefInput(containerRef: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Get the input field HTML element from the reference to the parent element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                containerRef\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nReference to the parent container\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLInputElement\n\n                        \n                            \n                                The corresponding input element\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Check if the registration form is valid, including custom password confirmation validation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Validation check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves the reset password token from the URL/route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Submit the registration form according to the current form mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordFieldType\n                        \n                    \n                \n            \n            \n                \ntogglePasswordFieldType(type: \"password\" | \"text\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Toggle the type variable of a password input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        \"password\" | \"text\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML type attribute value in the input element\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"password\" | \"text\"\n\n                        \n                            \n                                The toggled attribute value\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(field: \"password\" | \"confirmation\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Toggle password visibility and re-focus the input field afterwards.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        \"password\" | \"confirmation\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password or confirmation field identifier\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferAfterReset\n                        \n                    \n                \n            \n            \n                \ntransferAfterReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Transfer to the login form after resetting the password, displaying a toast notification.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    password: '',\n    passwordConfirmation: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordConfirmationContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordConfirmationContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordConfirmationFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToastMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { PasswordIconComponent } from '../../templates/password-icon/password-icon.component';\nimport { ToastNotificationComponent } from '../../templates/toast-notification/toast-notification.component';\nimport { AuthService } from '../../services/auth.service';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * This component displays a reset password form.\n * The component requires a reset password token (named \"token\") to be read from the route parameters.\n */\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, PasswordIconComponent, ToastNotificationComponent],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent implements OnInit {\n  passwordFieldType: 'password' | 'text' = 'password';\n  passwordConfirmationFieldType: 'password' | 'text' = 'password';\n  @ViewChild('passwordContainer') passwordContainerRef!: ElementRef;\n  @ViewChild('passwordConfirmationContainer') passwordConfirmationContainerRef!: ElementRef;\n  formData = {\n    password: '',\n    passwordConfirmation: ''\n  };\n  token: string | null = null;\n  authError: string = '';\n  showToastMsg: boolean = false;\n  paramSub = new Subscription();\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Retrieves the reset password token from the URL/route.\n   */\n  ngOnInit(): void {\n    this.paramSub = this.route.paramMap.subscribe(params => {\n      this.token = params.get('token');\n      this.paramSub.unsubscribe();\n    });\n  }\n\n\n  /**\n   * Toggle password visibility and re-focus the input field afterwards.\n   * @param {'password' | 'confirmation'} field - The password or confirmation field identifier\n   */\n  toggleVisibility(field: 'password' | 'confirmation') {\n    if (field == 'password' && this.formData.password.length > 0) {\n      this.passwordFieldType = this.togglePasswordFieldType(this.passwordFieldType);\n      this.focusLastCharacter(this.getFieldContainerRefInput(this.passwordContainerRef));\n    } else if (this.formData.passwordConfirmation.length > 0) {\n      this.passwordConfirmationFieldType = this.togglePasswordFieldType(this.passwordConfirmationFieldType);\n      this.focusLastCharacter(this.getFieldContainerRefInput(this.passwordConfirmationContainerRef));\n    }\n  }\n\n\n  /**\n   * Get the input field HTML element from the reference to the parent element.\n   * @param {ElementRef} containerRef - Reference to the parent container\n   * @returns {HTMLInputElement} The corresponding input element\n   */\n  getFieldContainerRefInput(containerRef: ElementRef): HTMLInputElement {\n    return containerRef.nativeElement.getElementsByTagName('input')[0];\n  }\n\n\n  /**\n   * Focus the last position of the input element.\n   * @param {HTMLInputElement} input - The input field\n   */\n  focusLastCharacter(input: HTMLInputElement) {\n    setTimeout(() => {\n      input.focus();\n      input.setSelectionRange(input.value.length, input.value.length);\n    });\n  }\n\n\n  /**\n   * Toggle the type variable of a password input field.\n   * @param {'password' | 'text'} type - The HTML type attribute value in the input element\n   * @returns {'password' | 'text'} The toggled attribute value\n   */\n  togglePasswordFieldType(type: 'password' | 'text') {\n    return type == 'password' ? 'text' : 'password';\n  }\n\n\n  /**\n   * Submit the registration form according to the current form mode.\n   * @param {NgForm} form - The registration form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && this.isValid(form) && this.token) {\n      this.authService.resetPassword(this.formData.password, this.token)\n        .then((resp: any) => {console.log(resp); this.transferAfterReset()})\n        .catch((err) => this.authError = 'Oops! Something went wrong');\n    }\n  }\n\n\n  /**\n   * Check if the registration form is valid, including custom password confirmation validation.\n   * @param {NgForm} form - The registration form\n   * @returns {boolean} Validation check result\n   */\n  isValid(form: NgForm): boolean {\n    return form.form.valid && this.checkPasswordConfirmation();\n  }\n\n\n  /**\n   * Check if both passwords match each other.\n   * @returns {boolean} Password confirmation check result\n   */\n  checkPasswordConfirmation(): boolean {\n    return this.formData.password == this.formData.passwordConfirmation\n  }\n\n\n  /**\n   * Transfer to the login form after resetting the password, displaying a toast notification.\n   */\n  transferAfterReset() {\n    this.showToastMsg = true;\n    setTimeout(() => this.router.navigate(['']), 700);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n        Reset Password\n         0}\">\n            \n            @if(formData.password.length > 0) {\n            \n            }\n            @else {\n            \n            }\n            @if((password.touched || resetPasswordForm.submitted) && !password.valid) {\n            @if(password.value.length Your password must contain at least 6 characters. }\n                @else { Please enter a valid password.}\n                }\n        \n         0}\">\n            \n            @if(formData.passwordConfirmation.length > 0) {\n            \n            }\n            @else {\n            \n            }\n            @if(passwordConfirmation.touched && !checkPasswordConfirmation()) {\n            Oops! Your passwords don\\'t match.\n            } @else if(authError.includes('wrong')) {\n            {{authError}}\n            }\n        \n        Submit\n    \n    \n        \n            \n                Privacy policy\n            \n            \n                Legal notice\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Reset Password         0}\">                        @if(formData.password.length > 0) {                        }            @else {                        }            @if((password.touched || resetPasswordForm.submitted) && !password.valid) {            @if(password.value.length Your password must contain at least 6 characters. }                @else { Please enter a valid password.}                }                 0}\">                        @if(formData.passwordConfirmation.length > 0) {                        }            @else {                        }            @if(passwordConfirmation.touched && !checkPasswordConfirmation()) {            Oops! Your passwords don\\\\'t match.            } @else if(authError.includes(\\'wrong\\')) {            {{authError}}            }                Submit                                            Privacy policy                                        Legal notice                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideComponent.html":{"url":"components/SlideComponent.html","title":"component - SlideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/slide/slide.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is set up to slide in upon initialization and to slide out upon closing.\nFor the sliding to work, it requires certain [ngClass] settings.\nThe closing method (in the parent component or in a component class extending this component) also requires a 125ms timeout\nto prevent the slide component from disappearing immediately.\nIt is also recommended to use it within an overlay.\nExample of usage:\n\n    \n    \n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slide\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./slide.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/slide/slide.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/slide/slide.component.ts:36\n                        \n                    \n\n\n            \n                \n                        When in translated state, slide in.\nThe timeout is only used as a workaround.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/slide/slide.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/slide/slide.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, OnInit } from '@angular/core';\n\n\n/**\n * This component is set up to slide in upon initialization and to slide out upon closing.\n * For the sliding to work, it requires certain [ngClass] settings.\n * The closing method (in the parent component or in a component class extending this component) also requires a 125ms timeout\n * to prevent the slide component from disappearing immediately. \n * It is also recommended to use it within an overlay.\n * \n * Example of usage:\n * \n * \n *     \n *     \n * \n */\n@Component({\n  selector: 'app-slide',\n  standalone: true,\n  imports: [],\n  templateUrl: './slide.component.html',\n  styleUrl: './slide.component.scss'\n})\nexport class SlideComponent implements OnInit {\n  translated: boolean = true;\n  @Output() slide = new EventEmitter();\n\n\n  /**\n   * When in translated state, slide in.\n   * The timeout is only used as a workaround.\n   */\n  ngOnInit(): void {\n    if (this.translated) {setTimeout(() => this.slideInOut(), 1)}\n  }\n\n\n  /**\n   * Toggle translation state and emit slide event to the parent component\n   */\n  slideInOut() {\n    this.translated = !this.translated;\n    this.slide.emit();\n  }\n}\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"components/StatsItemComponent.html":{"url":"components/StatsItemComponent.html","title":"component - StatsItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/stats-item/stats-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a task statistics item as seen on the summary/landing page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./stats-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deadline\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/summary/stats-item/stats-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            Create instance of Router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deadline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/stats-item/stats-item.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Navigate to \"board\" page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n/**\n * This component displays a task statistics item as seen on the summary/landing page\n */\n@Component({\n  selector: 'app-stats-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './stats-item.component.html',\n  styleUrl: './stats-item.component.scss'\n})\nexport class StatsItemComponent {\n@Input() name: string = '';\n@Input() value: number | string = 0;\n@Input() deadline: string = '';\n\n\n/**\n * Create instance of Router\n * @param router instance of Router\n */\nconstructor(private router: Router) {}\n\n\n/**\n * Navigate to \"board\" page\n */\ngoToBoard() {\n  this.router.navigate(['/board']);\n}\n}\n\n    \n\n    \n        \n    \n        @switch(name) {\n        @case('To do') {}\n        @case('Done') {}\n        @case('Urgent') {}\n        }\n    \n    \n        {{value}}\n        {{name}}\n    \n    @if(name == 'Urgent') {\n    \n    \n        {{deadline}}\n        Upcoming Deadline\n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @switch(name) {        @case(\\'To do\\') {}        @case(\\'Done\\') {}        @case(\\'Urgent\\') {}        }                {{value}}        {{name}}        @if(name == \\'Urgent\\') {                {{deadline}}        Upcoming Deadline        }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subtask.html":{"url":"classes/Subtask.html","title":"class - Subtask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/subtask.ts\n        \n\n\n            \n                Description\n            \n            \n                This model represents a subtask\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                task_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/subtask.ts:8\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"Done\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/subtask.ts:28\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Subtask {\n    id: number;\n    task_id: number;\n    name: string;\n    status: 'To do' | 'Done';\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.task_id = obj.task ? obj.task : -1;\n        this.name = obj.name ? obj.name : '';\n        this.status = obj.status ? obj.status : 'To do';\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const json: any = {\n            task: this.task_id,\n            name: this.name,\n            status: this.status,\n        };\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubtaskComponent.html":{"url":"components/SubtaskComponent.html","title":"component - SubtaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SubtaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/add-task/subtask/subtask.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a Task's Subtask.\nIt shows the task ('name') in an editable manner.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subtask\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subtask.component.html\n            \n\n\n\n            \n                styleUrl\n                ./subtask.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                    \n                                editInputRef\n                            \n                            \n                                    Private\n                                formSubscription\n                            \n                            \n                                previousName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                            \n                                deleteTask\n                            \n                            \n                                edit\n                            \n                            \n                                focusLastPosition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formClick\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                taskChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formClick\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new Subtask({\n    name: 'Task created',\n    status: 'To do'\n  })\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Cancels subtask editing.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(enter?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Confirms subtask editing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                enter\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nkeydown.enter event\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Deletes this subtask.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Edits subtask. Saves previous name to redeem the subtask in case editing is aborted.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusLastPosition\n                        \n                    \n                \n            \n            \n                \nfocusLastPosition()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Focuses input element at last character.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Unsubscribes when component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Subscribes to form click observable from parent component; calls \"cancel()\" method in case the form is clicked directly.\nSaves previous task name to reload when editing is aborted.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subtask } from '../../../../models/subtask';\nimport { FormsModule } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\n\n/**\n * @component\n * This component displays a Task's Subtask.\n * It shows the task ('name') in an editable manner.\n */\n@Component({\n  selector: 'app-subtask',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './subtask.component.html',\n  styleUrl: './subtask.component.scss'\n})\nexport class SubtaskComponent implements OnInit {\n  @Input() task = new Subtask({\n    name: 'Task created',\n    status: 'To do'\n  });\n  editing: boolean = false;\n  previousName: string = '';\n  @Output() taskChange = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  private formSubscription = new Subscription();\n  @Input() formClick = new Observable();\n  @ViewChild('editInput') editInputRef!: ElementRef;\n\n\n  /**\n   * Subscribes to form click observable from parent component; calls \"cancel()\" method in case the form is clicked directly.\n   * Saves previous task name to reload when editing is aborted.\n   */\n  ngOnInit() {\n    this.formSubscription = this.formClick.subscribe(() => this.cancel());\n    this.previousName = this.task.name;\n  }\n\n\n  /**\n   * Unsubscribes when component is destroyed.\n   */\n  ngOnDestroy() {\n    this.formSubscription.unsubscribe();\n  }\n\n\n  /**\n   * Edits subtask. Saves previous name to redeem the subtask in case editing is aborted.\n   */\n  edit() {\n    this.editing = true;\n    this.previousName = this.task.name;\n    this.focusLastPosition();\n  }\n\n\n  /**\n   * Focuses input element at last character.\n   */\n  focusLastPosition() {\n    setTimeout(() => {\n      const input: HTMLInputElement = this.editInputRef.nativeElement;\n      input.focus();\n      input.setSelectionRange(input.value.length, input.value.length);\n    }, 0);\n  }\n\n\n  /**\n   * Confirms subtask editing.\n   * @param {Event} enter - keydown.enter event\n   */\n  confirm(enter?: Event) {\n    if (enter && this.editInputRef.nativeElement == document.activeElement) { enter.stopPropagation() }\n    this.editing = false;\n    this.taskChange.emit(this.task);\n  }\n\n\n  /**\n   * Cancels subtask editing.\n   */\n  cancel() {\n    if (this.editing) {\n      this.task.name = this.previousName;\n      this.confirm();\n    }\n  }\n\n\n  /**\n   * Deletes this subtask.\n   */\n  deleteTask() {\n    this.delete.emit(true);\n  }\n}\n\n    \n\n    \n        \n    \n        @if(editing) {\n        \n        }\n        @else {\n        &bull;{{task.name}}\n        }\n    \n    \n        @if(!editing) {\n        \n            \n        \n        } @else {\n        \n            \n        \n        }\n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @if(editing) {                }        @else {        •{{task.name}}        }                @if(!editing) {                                    } @else {                                    }                                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubtaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SummaryComponent.html":{"url":"components/SummaryComponent.html","title":"component - SummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/summary.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a statistical summary of the tasks in board-\nIt also displays a personalized greeting message.\nIn one-column layout, the greeting message is only visible as an introductory animation.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-summary\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                StatsItemComponent\n                                HeadlineSloganComponent\n                                GreetingComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./summary.component.html\n            \n\n\n\n            \n                styleUrl\n                ./summary.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                currentUserName\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                unsubAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredTasks\n                            \n                            \n                                getMostUrgent\n                            \n                            \n                                getTaskNumber\n                            \n                            \n                                getUrgent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                printDate\n                            \n                            \n                                subAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/summary/summary.component.ts:27\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by status\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMostUrgent\n                        \n                    \n                \n            \n            \n                \ngetMostUrgent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Among the tasks with \"urgent\" priority, get the closest deadline\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                closest \"due\" value\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskNumber\n                        \n                    \n                \n            \n            \n                \ngetTaskNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Get total number of tasks in board\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                number of tasks\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrgent\n                        \n                    \n                \n            \n            \n                \ngetUrgent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by \"urgent\" priority\n\n\n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printDate\n                        \n                    \n                \n            \n            \n                \nprintDate(due: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Generate string from due value which writes out the month\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                due\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    due value (as to be found as task property)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                date as string in the desired format\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Subscribe to \"authService.currentUser$\" to retrieve and setuser name.\nThe user name is set to \"null\" in case guest log in is being used.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                subscription\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy } from '@angular/core';\nimport { Task } from '../../../models/task';\nimport { TasksService } from '../../services/tasks.service';\nimport { AuthService } from '../../services/auth.service';\nimport { StatsItemComponent } from './stats-item/stats-item.component';\nimport { HeadlineSloganComponent } from '../../templates/headline-slogan/headline-slogan.component';\nimport { CommonModule } from '@angular/common';\nimport { GreetingComponent } from './greeting/greeting.component';\n\n\n/**\n * This component displays a statistical summary of the tasks in board-\n * It also displays a personalized greeting message.\n * In one-column layout, the greeting message is only visible as an introductory animation. \n */\n@Component({\n  selector: 'app-summary',\n  standalone: true,\n  imports: [CommonModule, StatsItemComponent, HeadlineSloganComponent, GreetingComponent],\n  templateUrl: './summary.component.html',\n  styleUrl: './summary.component.scss'\n})\nexport class SummaryComponent implements OnDestroy {\n  private authService = inject(AuthService);\n  unsubAuth;\n  private tasksService = inject(TasksService);\n  currentUserName: string | null = null;\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubAuth = this.subAuth;\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.unsubAuth();\n  }\n\n\n  /**\n   * Subscribe to \"authService.currentUser$\" to retrieve and setuser name.\n   * The user name is set to \"null\" in case guest log in is being used.\n   * @returns subscription\n   */\n  subAuth() {\n    return this.authService.currentUser$.subscribe(u => this.currentUserName = (u ? u.user.username : null));\n  }\n\n\n  /**\n   * Get tasks filtered by status\n   * @param status task status\n   * @returns filtered tasks array\n   */\n  getFilteredTasks(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): Task[] {\n    return this.tasksService.getFilteredTasks(status);\n  }\n\n\n  /**\n   * Get tasks filtered by \"urgent\" priority\n   * @returns filtered tasks array\n   */\n  getUrgent(): Task[] {\n    return this.tasksService.tasks.filter(t => t.prio == 'Urgent');\n  }\n\n\n  /**\n   * Get total number of tasks in board\n   * @returns number of tasks\n   */\n  getTaskNumber(): number {\n    return this.tasksService.tasks.length;\n  }\n\n\n  /**\n   * Among the tasks with \"urgent\" priority, get the closest deadline\n   * @returns closest \"due\" value\n   */\n  getMostUrgent(): string {\n    if (this.tasksService.tasks.length > 0) {\n      let tasks: Task[] = this.getUrgent();\n      if (tasks.length == 0) { tasks = this.tasksService.tasks }\n      tasks.sort((a, b) => { return a.due.localeCompare(b.due) });\n      return tasks[0].due;\n    } else return '';\n  }\n\n\n  /**\n   * Generate string from due value which writes out the month\n   * @param due due value (as to be found as task property)\n   * @returns date as string in the desired format\n   */\n  printDate(due: string): string {\n    if (due.length > 0) {\n      const date = new Date(due);\n      const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const month = months[date.getMonth()];\n      const day = date.getDate();\n      const year = date.getFullYear();\n      return month + ' ' + day + ', ' + year;\n    } else {\n      return 'None';\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n            \n            \n                \n            \n            \n                \n                \n                \n            \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/task.ts\n        \n\n\n            \n                Description\n            \n            \n                This model represents a task\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assigned\n                            \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                due\n                            \n                            \n                                id\n                            \n                            \n                                prio\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                subtasks\n                            \n                            \n                                timestamp\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDueToText\n                            \n                            \n                                isAssignedTo\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/task.ts:18\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        assigned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Technical Task\" | \"User Story\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        due\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | \"Urgent\" | \"Medium\" | \"Low\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subtasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subtask[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDueToText\n                        \n                    \n                \n            \n            \n                \ngetDueToText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:79\n                        \n                    \n\n\n            \n                \n                        Transform the default date format used for \"due\" (yyyy-mm-dd)\nto the text date format displayed to the user (dd/mm/yyyy)\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                transformed date string (or undefined if due is empty or does not exist)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAssignedTo\n                        \n                    \n                \n            \n            \n                \nisAssignedTo(appUser: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:69\n                        \n                    \n\n\n            \n                \n                        Check if this task is assigned to a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appUser\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:46\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AppUser } from '../models/app-user';\nimport { Subtask } from './subtask';\n\n\n/**\n * This model represents a task\n */\nexport class Task {\n    id: number;\n    title: string;\n    description: string = '';\n    assigned: number[] = [];\n    due: string;\n    prio: '' | 'Urgent' | 'Medium' | 'Low';\n    category: 'Technical Task' | 'User Story';\n    subtasks?: Subtask[];\n    timestamp: number = Date.now();\n    status: 'To do' | 'In progress' | 'Await feedback' | 'Done';\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.title = obj.title ? obj.title : '';\n        this.description = obj.description ? obj.description : '';\n        this.assigned = obj.assigned_to ? obj.assigned_to : [];\n        this.due = obj.due ? obj.due : getCurrentDate();\n        this.prio = obj.prio ? obj.prio : 'Medium';\n        this.category = obj.category ? obj.category : 'Technical Task';\n        this.status = obj.status ? obj.status : 'To Do';\n        if (obj.subtasks) {\n            this.subtasks = [];\n            obj.subtasks.forEach((sData: any) => this.subtasks?.push(new Subtask(sData)));\n        }\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const jsonSubtasks: {}[] = [];\n        this.subtasks?.forEach(s => jsonSubtasks.push(s.toJson()));\n        const json: any = {\n            title: this.title,\n            description: this.description,\n            assigned_to: this.assigned,\n            due: this.due,\n            prio: this.prio,\n            category: this.category,\n            subtasks: jsonSubtasks,\n            status: this.status,\n        }\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n\n\n    /**\n     * Check if this task is assigned to a user\n     * @param user user to check for\n     * @returns check result\n     */\n    isAssignedTo(appUser: AppUser): boolean {\n        return this.assigned ? this.assigned.includes(appUser.id) : false;\n    }\n\n\n    /**\n     * Transform the default date format used for \"due\" (yyyy-mm-dd)\n     * to the text date format displayed to the user (dd/mm/yyyy)\n     * @returns transformed date string (or undefined if due is empty or does not exist)\n     */\n    getDueToText(): string | undefined {\n        if (this.due && this.due.length > 0) {\n            const parts = this.due.split('-');\n            const year = parts[0];\n            let month: string | number = parseInt(parts[1]);\n            let day: string | number = parseInt(parts[2]);\n            month = (month \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskCardComponent.html":{"url":"components/TaskCardComponent.html","title":"component - TaskCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-list/task-card/task-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a task as a small card which can be clicked to edit.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                                TaskCategoryComponent\n                                PrioIconComponent\n                                ArrowBackBtnComponent\n                                CloseBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayDropdown\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSubtasksDoneNumber\n                            \n                            \n                                isBreak\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printDescription\n                            \n                            \n                                setStatus\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeDropdown\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeDropdown\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : new Task('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-card.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtasksDoneNumber\n                        \n                    \n                \n            \n            \n                \ngetSubtasksDoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:81\n                        \n                    \n\n\n            \n                \n                        This function returns the number of subtasks whose status is set to \"Done\"\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                \"Done\" number\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBreak\n                        \n                    \n                \n            \n            \n                \nisBreak(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Check if a character marks a cesura/break between words\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    character to check\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Initialize users array and closing dropdown menu subscription\n(to react to clicks onto the \"board\" component)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printDescription\n                        \n                    \n                \n            \n            \n                \nprintDescription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:50\n                        \n                    \n\n\n            \n                \n                        This function prints the task description as displayed to the user.\nThe description is only to be displayed up to a certain length.\nThus, longer descriptions are cut off, which is signaled to the user by adding dots (\"...\").\n\n\n                        \n                            Returns :         String\n\n                        \n                            \n                                transformed description\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatus\n                        \n                    \n                \n            \n            \n                \nsetStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, inject } from '@angular/core';\nimport { Task } from '../../../../../models/task';\nimport { UsersService } from '../../../../services/users.service';\nimport { PersonBadgeComponent } from '../../../../templates/person-badge/person-badge.component';\nimport { TaskCategoryComponent } from './task-category/task-category.component';\nimport { PrioIconComponent } from '../../../../templates/prio-icon/prio-icon.component';\nimport { ArrowBackBtnComponent } from '../../../../templates/arrow-back-btn/arrow-back-btn.component';\nimport { TasksService } from '../../../../services/tasks.service';\nimport { CloseBtnComponent } from '../../../../templates/close-btn/close-btn.component';\nimport { Observable } from 'rxjs';\nimport { AppUser } from '../../../../../models/app-user';\n\n\n/**\n * This component displays a task as a small card which can be clicked to edit.\n */\n@Component({\n  selector: 'app-task-card',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, TaskCategoryComponent, PrioIconComponent, ArrowBackBtnComponent, CloseBtnComponent],\n  templateUrl: './task-card.component.html',\n  styleUrl: './task-card.component.scss'\n})\nexport class TaskCardComponent implements OnInit {\n  users: AppUser[] = [];\n  @Input() task: Task = new Task('');\n  displayDropdown: boolean = false;\n  @Input() closeDropdown: Observable = new Observable();\n  public usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n\n\n  /**\n   * Initialize users array and closing dropdown menu subscription\n   * (to react to clicks onto the \"board\" component)\n   */\n  ngOnInit(): void {\n    this.users = this.usersService.users;\n    this.closeDropdown.subscribe(() => this.displayDropdown = false);\n  }\n\n\n  /**\n   * This function prints the task description as displayed to the user.\n   * The description is only to be displayed up to a certain length.\n   * Thus, longer descriptions are cut off, which is signaled to the user by adding dots (\"...\").\n   * @returns transformed description\n   */\n  printDescription(): String {\n    let printed = this.task.description.slice(0, 35);\n    if (this.task.description.length > 36) {\n      for (let i = 35; i  s.status == 'Done').length;\n    } else {\n      return 0;\n    }\n  }\n\n\n  toggleDropdown(): void {\n    this.displayDropdown = !this.displayDropdown;\n  }\n\n\n  setStatus(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): void {\n    this.task.status = status;\n    this.tasksService.updateTask(this.task);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n            \n        \n        {{'To do'}}\n        {{'In progress'}}\n        {{'Await feedback'}}\n        {{'Done'}}\n    \n    {{task.title}}\n     0\">{{printDescription()}}\n     0\">\n        \n            \n        \n        {{getSubtasksDoneNumber()}}/{{task.subtasks.length}} Subtasks\n    \n     0 || task.prio != null\">\n        \n            @for(assignment of task.assigned; track assignment) {\n            \n            }\n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{\\'To do\\'}}        {{\\'In progress\\'}}        {{\\'Await feedback\\'}}        {{\\'Done\\'}}        {{task.title}}     0\">{{printDescription()}}     0\">                                    {{getSubtasksDoneNumber()}}/{{task.subtasks.length}} Subtasks         0 || task.prio != null\">                    @for(assignment of task.assigned; track assignment) {                        }                                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskCategoryComponent.html":{"url":"components/TaskCategoryComponent.html","title":"component - TaskCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-list/task-card/task-category/task-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-category\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-category.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-category.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         \"Technical Task\" | \"User Story\"\n\n                    \n                \n                \n                    \n                        Default value : 'Technical Task'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-category/task-category.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-task-category',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './task-category.component.html',\n  styleUrl: './task-category.component.scss'\n})\nexport class TaskCategoryComponent {\n@Input() category: 'Technical Task' | 'User Story' = 'Technical Task';\n}\n\n    \n\n    \n        \n{{category}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{category}}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskViewComponent.html":{"url":"components/TaskViewComponent.html","title":"component - TaskViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-view/task-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a \"task viewer\" within an overlay.\nThe viewer contains more detailed information than the \"task card\" component.\nIt also allows task editing.\n\n    \n\n    \n        Extends\n    \n    \n                    SlideComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-view\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CloseBtnComponent\n                                TaskCategoryComponent\n                                PrioIconComponent\n                                ContactListItemComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-view.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-view.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                    Public\n                                usersService\n                            \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    Async\n                                toggleSubtaskStatus\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOverlay\n                            \n                            \n                                editThisTask\n                            \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/board/task-view/task-view.component.ts:32\n                            \n                        \n\n                \n                    \n                            Call super constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelOverlay\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editThisTask\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         SlideComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SlideComponent:29\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Cancel task viewer overlay with slide animation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Completely delete this task\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Edit this task (aside from subtask checking) by emitting the corresponding event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:46\n\n                        \n                    \n\n\n            \n                \n                        Extend super class \"ngOnInit()\" method by initializing users array\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleSubtaskStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleSubtaskStatus(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Toggle subtask status between options \"To do\" and \"Done\".\nImmediately update the task in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    subtask array index\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:44\n\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-view/task-view.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-view/task-view.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         SlideComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         SlideComponent:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { Task } from '../../../../models/task';\nimport { TasksService } from '../../../services/tasks.service';\nimport { UsersService } from '../../../services/users.service';\nimport { TaskCategoryComponent } from '../task-list/task-card/task-category/task-category.component';\nimport { ContactListItemComponent } from '../../contacts/contact-list-item/contact-list-item.component';\nimport { CloseBtnComponent } from '../../../templates/close-btn/close-btn.component';\nimport { PrioIconComponent } from '../../../templates/prio-icon/prio-icon.component';\nimport { CommonModule } from '@angular/common';\nimport { SlideComponent } from '../../../templates/slide/slide.component';\nimport { AppUser } from '../../../../models/app-user';\n\n\n/**\n * This component displays a \"task viewer\" within an overlay.\n * The viewer contains more detailed information than the \"task card\" component.\n * It also allows task editing.\n */\n@Component({\n  selector: 'app-task-view',\n  standalone: true,\n  imports: [CommonModule, CloseBtnComponent, TaskCategoryComponent, PrioIconComponent, ContactListItemComponent],\n  templateUrl: './task-view.component.html',\n  styleUrl: './task-view.component.scss'\n})\nexport class TaskViewComponent extends SlideComponent {\n  @Input() task?: Task;\n  @Input() users: AppUser[] = [];\n  @Output() cancelOverlay = new EventEmitter();\n  @Output() editThisTask = new EventEmitter();\n  public usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n\n\n  /**\n   * Call super constructor\n   */\n  constructor() {\n    super();\n  }\n\n\n  /**\n   * Extend super class \"ngOnInit()\" method by initializing users array\n   */\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.users = this.usersService.users;\n  }\n\n\n  /**\n   * Cancel task viewer overlay with slide animation\n   */\n  cancel() {\n    this.slideInOut();\n    setTimeout(() => this.cancelOverlay.emit(), 125);\n  }\n\n\n  /**\n   * Toggle subtask status between options \"To do\" and \"Done\".\n   * Immediately update the task in the database.\n   * @param index subtask array index\n   */\n  async toggleSubtaskStatus(index: number) {\n    if (this.task && this.task.subtasks) {\n      const subtask = this.task.subtasks[index];\n      subtask.status = (subtask.status == 'To do' ? 'Done' : 'To do');\n      await this.tasksService.updateSubtask(subtask);\n    }\n  }\n\n\n  /**\n   * Completely delete this task\n   */\n  deleteTask() {\n    if (this.task) {\n      this.cancel();\n      this.tasksService.deleteTask(this.task.id);\n    }\n  }\n\n\n  /**\n   * Edit this task (aside from subtask checking) by emitting the corresponding event to the parent component\n   */\n  editTask() {\n    this.editThisTask.emit();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n        \n        {{task.title}}\n         0\">{{task.description}}\n        \n            \n                Due date:\n                {{task.getDueToText()}}\n            \n            \n                Priority:\n                \n                    \n                        {{task.prio}}\n                        \n                    \n                \n            \n        \n         0\">\n            Assigned to:\n            @for(assignment of task.assigned; track assignment) {\n            @if(assignment) {\n            \n            }\n            }\n        \n         0\">\n            Subtasks\n            @for (subtask of task.subtasks; track subtask; let i = $index) {\n            \n                \n                {{subtask.name}}\n            \n            }\n        \n        \n            \n                \n                Delete\n            \n            \n            \n                \n                Edit\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{task.title}}         0\">{{task.description}}                                    Due date:                {{task.getDueToText()}}                                        Priority:                                                            {{task.prio}}                                                                                         0\">            Assigned to:            @for(assignment of task.assigned; track assignment) {            @if(assignment) {                        }            }                 0\">            Subtasks            @for (subtask of task.subtasks; track subtask; let i = $index) {                                            {{subtask.name}}                        }                                                            Delete                                                                    Edit                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tasks.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles generic tasks operations, including backend communication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTaskStatus\n                            \n                            \n                                    Public\n                                syncingSubtasks\n                            \n                            \n                                tasks\n                            \n                            \n                                tasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSubtask\n                            \n                            \n                                addSubtasksToTasks\n                            \n                            \n                                addSubtaskToTask\n                            \n                            \n                                    Async\n                                addTask\n                            \n                            \n                                addTaskLocally\n                            \n                            \n                                clearSubtasks\n                            \n                            \n                                    Async\n                                deleteSubtask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                deleteTaskLocally\n                            \n                            \n                                getFilteredTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                init\n                            \n                            \n                                    Async\n                                syncSubtasks\n                            \n                            \n                                    Async\n                                syncTasks\n                            \n                            \n                                    Async\n                                updateSubtask\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                            \n                                updateTaskLocally\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tasks.service.ts:21\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Add task to database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtasksToTasks\n                        \n                    \n                \n            \n            \n                \naddSubtasksToTasks(subtasksData: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Add subtasks to their respective tasks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtasksData\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of subtask data from the server.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtaskToTask\n                        \n                    \n                \n            \n            \n                \naddSubtaskToTask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Add a subtask to its corresponding task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The subtask to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Add task to database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskLocally\n                        \n                    \n                \n            \n            \n                \naddTaskLocally(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Add a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The task to add locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSubtasks\n                        \n                    \n                \n            \n            \n                \nclearSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Clear all subtasks from the tasks.\nThis method is used before re-adding subtasks during synchronization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:242\n                        \n                    \n\n\n            \n                \n                        Delete subtask from database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of subtask to be deleted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Delete task from database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of task to be deleted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskLocally\n                        \n                    \n                \n            \n            \n                \ndeleteTaskLocally(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Delete a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the task to delete locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by task status\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:198\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete task object from task ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task | undefined\n\n                        \n                            \n                                task object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Initialize task and subtask streaming from the server.\nListens for server-sent events to synchronize tasks and subtasks in real-time.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncSubtasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Synchronize subtasks with the backend.\nFetches the latest subtasks and associates them with their respective tasks.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when subtasks are synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Synchronize tasks with the backend.\nFetches the latest tasks from the server and updates the local task list.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when tasks are synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:229\n                        \n                    \n\n\n            \n                \n                        Update subtask in database.\nThe update will only be executed if the task has a valid database ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Update task in database.\nThe update will only be executed if the task has a valid database ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskLocally\n                        \n                    \n                \n            \n            \n                \nupdateTaskLocally(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Update a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The task to update locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newTaskStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\"\n\n                    \n                \n                \n                    \n                        Default value : 'To do'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        syncingSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from '../../models/task';\nimport { AuthService } from './auth.service';\nimport { environment } from '../../environments/environment.development';\nimport { lastValueFrom, Subject } from 'rxjs';\nimport { Subtask } from '../../models/subtask';\n\n\n/**\n * This injectable handles generic tasks operations, including backend communication.\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TasksService {\n  tasks: Task[] = [];\n  tasks$: Subject = new Subject();\n  newTaskStatus: 'To do' | 'In progress' | 'Await feedback' = 'To do';\n  public syncingSubtasks: boolean = false;\n\n\n  /**\n   * Create subscription\n   */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {  }\n\n\n  /**\n   * Initialize task and subtask streaming from the server.\n   * Listens for server-sent events to synchronize tasks and subtasks in real-time.\n   */\n  init() {\n    const tasksEvents = new EventSource(environment.BASE_URL + 'tasks/stream/');\n    const subtasksEvents = new EventSource(environment.BASE_URL + 'subtasks/stream/');\n    tasksEvents.onmessage = () => this.syncTasks();\n    subtasksEvents.onmessage = () => this.syncSubtasks();\n    this.syncTasks();\n  }\n\n\n  /**\n   * Synchronize tasks with the backend.\n   * Fetches the latest tasks from the server and updates the local task list.\n   * @returns A Promise resolving when tasks are synced.\n   */\n  async syncTasks(): Promise {\n    const url = environment.BASE_URL + 'tasks/';\n    const resp = await lastValueFrom(this.http.get(url));\n    this.tasks = [];\n    (resp as Array).forEach(tData => {\n      this.tasks.push(new Task(tData));\n    });\n    this.syncSubtasks();\n    this.tasks$.next();\n  }\n\n\n  /**\n   * Synchronize subtasks with the backend.\n   * Fetches the latest subtasks and associates them with their respective tasks.\n   * @returns A Promise resolving when subtasks are synced.\n   */\n  async syncSubtasks(): Promise {\n    if (this.tasks.length > 0) {\n      this.syncingSubtasks = true;\n      const url = environment.BASE_URL + 'subtasks/';\n      const resp = await lastValueFrom(this.http.get(url));\n      this.addSubtasksToTasks(resp as Array);\n      this.syncingSubtasks = false;\n      this.tasks$.next();\n    }\n  }\n\n\n  /**\n   * Add subtasks to their respective tasks.\n   * @param subtasksData Array of subtask data from the server.\n   */\n  addSubtasksToTasks(subtasksData: Array) {\n    this.clearSubtasks();\n    subtasksData.forEach(stData => this.addSubtaskToTask(new Subtask(stData)));\n  }\n\n\n  /**\n   * Clear all subtasks from the tasks.\n   * This method is used before re-adding subtasks during synchronization.\n   */\n  clearSubtasks() {\n    this.tasks.forEach(t => t.subtasks = []);\n  }\n\n\n  /**\n   * Add a subtask to its corresponding task.\n   * @param subtask The subtask to add.\n   */\n  addSubtaskToTask(subtask: Subtask) {\n    const tasksArrayIndex: number = this.tasks.findIndex(t => t.id == subtask.task_id);\n    if (tasksArrayIndex == -1) {\n      console.error('Task with index', subtask.task_id, 'not found!');\n    } else {\n      this.tasks[tasksArrayIndex].subtasks?.push(subtask);\n    }\n  }\n\n\n  /**\n   * Add task to database\n   * @param task task to be added\n   */\n  async addTask(task: Task): Promise {\n    this.addTaskLocally(task);\n    const url = environment.BASE_URL + 'tasks/';\n    const body = task.toJson();\n    return lastValueFrom(this.http.post(url, body));\n  }\n\n\n  /**\n   * Add a task locally without communicating with the backend.\n   * @param task The task to add locally.\n   */\n  addTaskLocally(task: Task): void {\n    this.tasks.push(task);\n    this.tasks$.next();\n  }\n\n\n  /**\n   * Update task in database.\n   * The update will only be executed if the task has a valid database ID.\n   * @param task task to be updated\n   */\n  async updateTask(task: Task): Promise {\n    if (task.id != -1) {\n      this.updateTaskLocally(task);\n      const url = environment.BASE_URL + 'tasks/' + task.id + '/';\n      const body = task.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } else return;\n  }\n\n\n  /**\n   * Update a task locally without communicating with the backend.\n   * @param task The task to update locally.\n   */\n  updateTaskLocally(task: Task): void {\n    const tasksArrayIndex = this.tasks.findIndex(t => t.id == task.id);\n    if(tasksArrayIndex >= 0) {\n      this.tasks[tasksArrayIndex] = task;\n      this.tasks$.next();\n    } else {\n      console.error('Task with ID', task.id, 'could not be updated (task not found).');\n    }\n  }\n\n\n  /**\n   * Delete task from database\n   * @param id ID of task to be deleted\n   */\n  async deleteTask(id: number): Promise {\n    if (id != -1) {\n      this.deleteTaskLocally(id);\n      const url = environment.BASE_URL + 'tasks/' + id + '/';\n      return lastValueFrom(this.http.delete(url));\n    } else return;\n  }\n\n\n  /**\n   * Delete a task locally without communicating with the backend.\n   * @param id The ID of the task to delete locally.\n   */\n  deleteTaskLocally(id: number): void {\n    const tasksArrayIndex = this.tasks.findIndex(t => t.id == id);\n    if(tasksArrayIndex >= 0) {\n      this.tasks.splice(tasksArrayIndex, 1);\n      this.tasks$.next();\n    } else {\n      console.error('Task with ID', id, 'could not be deleted (task not found).');\n    }\n  }\n\n\n  /**\n   * Retrieve a complete task object from task ID\n   * @param id task ID\n   * @returns task object\n   */\n  getTaskById(id: number): Task | undefined {\n    return this.tasks.find(t => t.id == id);\n  }\n\n\n  /**\n   * Get tasks filtered by task status\n   * @param status task status\n   * @returns filtered tasks array\n   */\n  getFilteredTasks(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): Task[] {\n    return this.tasks.filter(t => t.status == status);\n  }\n\n\n  /**\n   * Add task to database\n   * @param task task to be added\n   */\n  async addSubtask(subtask: Subtask): Promise {\n    const url = environment.BASE_URL + 'subtasks/';\n    const body = subtask.toJson();\n    return lastValueFrom(this.http.post(url, body));\n  }\n\n\n  /**\n   * Update subtask in database.\n   * The update will only be executed if the task has a valid database ID.\n   * @param task task to be updated\n   */\n  async updateSubtask(subtask: Subtask): Promise {\n    if (subtask.id != -1) {\n      const url = environment.BASE_URL + 'subtasks/' + subtask.id + '/';\n      const body = subtask.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } else return;\n  }\n\n\n  /**\n   * Delete subtask from database\n   * @param id ID of subtask to be deleted\n   */\n  async deleteSubtask(id: number): Promise {\n    const url = environment.BASE_URL + 'subtasks/' + id + '/';\n    return lastValueFrom(this.http.delete(url));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastNotificationComponent.html":{"url":"components/ToastNotificationComponent.html","title":"component - ToastNotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastNotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/toast-notification/toast-notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a toast notification sliding in from below the viewport.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast-notification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast-notification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast-notification.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/toast-notification/toast-notification.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/toast-notification/toast-notification.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a toast notification sliding in from below the viewport.\n */\n@Component({\n  selector: 'app-toast-notification',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './toast-notification.component.html',\n  styleUrl: './toast-notification.component.scss'\n})\nexport class ToastNotificationComponent {\n  @Input() message: string = '';\n  @Input() show: boolean = false;\n}\n\n    \n\n    \n        \n    \n        {{message}}\n        @if(message == 'Task added to board') {\n            \n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{message}}        @if(message == \\'Task added to board\\') {                    }    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastNotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles generic users operations.\nPOST / ADD only via registration\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByAppId\n                            \n                            \n                                getUserByAuthId\n                            \n                            \n                                init\n                            \n                            \n                                isEmailAvailable\n                            \n                            \n                                isUser\n                            \n                            \n                                    Async\n                                syncRegisteredUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByAppId\n                        \n                    \n                \n            \n            \n                \ngetUserByAppId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete app user object from app user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    app user ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AppUser\n\n                        \n                            \n                                app user object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByAuthId\n                        \n                    \n                \n            \n            \n                \ngetUserByAuthId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete app user object from auth user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    auth user ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AppUser\n\n                        \n                            \n                                app user object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Initialize user data streaming.\nSets up a connection to listen for user-related server-sent events to keep the list of users in sync.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailAvailable\n                        \n                    \n                \n            \n            \n                \nisEmailAvailable(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Check if an email address is available for registration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email address to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the email is available, false if it is already in use by a registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Check if a contact is a registered user.\nA contact is considered a registered user if their email is found in the user list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the contact is a registered user, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncRegisteredUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncRegisteredUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Synchronize the list of registered users with the backend.\nFetches all registered users from the server and updates the local user list.\nOnly users with a valid email address are added to the list.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the users have been synchronized.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom, Subject } from 'rxjs';\nimport { AppUser } from '../../models/app-user';\nimport { environment } from \"../../environments/environment.development\";\nimport { AuthService } from \"./auth.service\";\nimport { Contact } from \"../../models/contact\";\n\n\n/**\n * This injectable handles generic users operations.\n * POST / ADD only via registration\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UsersService {\n  users: AppUser[] = [];\n  users$: Subject = new Subject();\n\n\n  /**\n   * Create subscription\n   */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Initialize user data streaming.\n   * Sets up a connection to listen for user-related server-sent events to keep the list of users in sync.\n   */\n  init() {\n    const tasksEvents = new EventSource(environment.BASE_URL + 'users/stream/');\n    tasksEvents.onmessage = () => this.syncRegisteredUsers();\n    this.syncRegisteredUsers();\n  }\n\n\n  /**\n   * Synchronize the list of registered users with the backend.\n   * Fetches all registered users from the server and updates the local user list.\n   * Only users with a valid email address are added to the list.\n   * @returns A Promise that resolves when the users have been synchronized.\n   */\n  async syncRegisteredUsers(): Promise {\n    const url = environment.BASE_URL + 'users/';\n    const resp = await lastValueFrom(this.http.get(url));\n    this.users = [];\n    (resp as Array).forEach(uData => {\n      if (uData.user.email && uData.user.email.slice(-9) != 'token.key') {\n        this.users.push(new AppUser(uData));\n      }\n    });\n    this.users$.next();\n  }\n\n\n  /**\n   * Retrieve a complete app user object from app user ID\n   * @param id app user ID\n   * @returns app user object\n   */\n  getUserByAppId(id: number): AppUser {\n    let user = new AppUser({});\n    this.users.forEach(u => {\n      if (u.id == id) { user = u }\n    });\n    return user;\n  }\n\n\n  /**\n   * Retrieve a complete app user object from auth user ID\n   * @param id auth user ID\n   * @returns app user object\n   */\n  getUserByAuthId(id: number): AppUser {\n    let user = new AppUser({});\n    this.users.forEach(u => {\n      if (u.user.id == id) { user = u }\n    });\n    return user;\n  }\n\n\n\n  /**\n   * Check if an email address is available for registration.\n   * @param email The email address to check.\n   * @returns `true` if the email is available, `false` if it is already in use by a registered user.\n   */\n  isEmailAvailable(email: string): boolean {\n    if (this.users.find(u => u.user.email == email)) { return false }\n    return true;\n  }\n\n\n  /**\n   * Check if a contact is a registered user.\n   * A contact is considered a registered user if their email is found in the user list.\n   * @param contact The contact to check.\n   * @returns `true` if the contact is a registered user, `false` otherwise.\n   */\n  isUser(contact: Contact): boolean {\n    return contact.email ? !this.isEmailAvailable(contact.email) : true;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                34 %\n                (8/23)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/log-in-page/log-in-page.component.ts\n            \n            component\n            LogInPageComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/log-in-page/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                65 %\n                (26/40)\n            \n        \n        \n            \n                \n                src/app/main/add-task/add-task.component.ts\n            \n            component\n            AddTaskComponent\n            \n                60 %\n                (33/55)\n            \n        \n        \n            \n                \n                src/app/main/add-task/subtask/subtask.component.ts\n            \n            component\n            SubtaskComponent\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/main/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-card/task-card.component.ts\n            \n            component\n            TaskCardComponent\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-card/task-category/task-category.component.ts\n            \n            component\n            TaskCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                40 %\n                (14/35)\n            \n        \n        \n            \n                \n                src/app/main/board/task-view/task-view.component.ts\n            \n            component\n            TaskViewComponent\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/main/contacts/add-contact/add-contact.component.ts\n            \n            component\n            AddContactComponent\n            \n                42 %\n                (8/19)\n            \n        \n        \n            \n                \n                src/app/main/contacts/contact-list-item/contact-list-item.component.ts\n            \n            component\n            ContactListItemComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/main/contacts/contacts.component.ts\n            \n            component\n            ContactsComponent\n            \n                62 %\n                (23/37)\n            \n        \n        \n            \n                \n                src/app/main/contacts/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/main/summary/greeting/greeting.component.ts\n            \n            component\n            GreetingComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/main/summary/stats-item/stats-item.component.ts\n            \n            component\n            StatsItemComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/main/summary/summary.component.ts\n            \n            component\n            SummaryComponent\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/other/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/other/legal-notice/legal-notice.component.ts\n            \n            component\n            LegalNoticeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/other/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/other/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/services/auth-token.interceptor.ts\n            \n            variable\n            AUTH_TOKEN_INTERCEPTOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/services/autoscroll.service.ts\n            \n            injectable\n            AutoscrollService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contacts.service.ts\n            \n            injectable\n            ContactsService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/services/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/shared/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/templates/arrow-back-btn/arrow-back-btn.component.ts\n            \n            component\n            ArrowBackBtnComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/templates/close-btn/close-btn.component.ts\n            \n            component\n            CloseBtnComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/headline-other/headline-other.component.ts\n            \n            component\n            HeadlineOtherComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/templates/headline-slogan/headline-slogan.component.ts\n            \n            component\n            HeadlineSloganComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/templates/password-icon/password-icon.component.ts\n            \n            component\n            PasswordIconComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/person-badge/person-badge.component.ts\n            \n            component\n            PersonBadgeComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/templates/prio-icon/prio-icon.component.ts\n            \n            component\n            PrioIconComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/slide/slide.component.ts\n            \n            component\n            SlideComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/templates/toast-notification/toast-notification.component.ts\n            \n            component\n            ToastNotificationComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/app-user.ts\n            \n            class\n            AppUser\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/models/auth-user.ts\n            \n            class\n            AuthUser\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/models/contact.ts\n            \n            class\n            Contact\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/models/subtask.ts\n            \n            class\n            Subtask\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/models/task.ts\n            \n            class\n            Task\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/models/task.ts\n            \n            function\n            getCurrentDate\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCurrentDate   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCurrentDate\n                        \n                    \n                \n            \n            \n                \ngetCurrentDate()\n                \n            \n\n\n\n\n            \n                \n                        This function returns the current date in the default date string format (yyyy-mm-dd)\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                current date\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJoin\nThis project was generated with Angular CLI version 17.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AUTH_TOKEN_INTERCEPTOR   (src/.../auth-token.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withFetch()),\n    provideHttpClient(withInterceptors([AUTH_TOKEN_INTERCEPTOR])),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth-token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN_INTERCEPTOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (request, next) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    request = request.clone({\n      setHeaders: { Authorization: `Token ${token}` }\n    });\n  }\n  return next(request);\n}\n                    \n                \n\n            \n                \n                    Intercepts HTTP requests by setting auth token headers.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    BASE_URL: 'http://localhost:8000/api/',\n    BADGE_COLORS: [\n        '#FDDC2F',\n        '#33DA81',\n        '#E98366',\n        '#C27177',\n        '#42F9B9',\n        '#2AEC8B',\n        '#6DD44A',\n        '#C7ACC0',\n        '#309CF4',\n        '#B663F3',\n        '#b579d2',\n        '#809283',\n        '#58AC47',\n        '#2FB287',\n        '#2AFDC3',\n        '#D2FA60',\n        '#A8EE51',\n        '#A9DDC7',\n        '#FE68C4',\n        '#DC3DF5',\n        '#05CDD7',\n        '#E07D47',\n        '#8EA906',\n        '#36B3F0',\n        '#BF59F2'\n    ],\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    AUTH_TOKEN_HEADERS: new HttpHeaders().set('Authorization', 'Token ' + localStorage.getItem('token')),\n    BASE_URL: 'http://localhost:8000/api/',\n    BADGE_COLORS: [\n        '#FDDC2F',\n        '#33DA81',\n        '#E98366',\n        '#C27177',\n        '#42F9B9',\n        '#2AEC8B',\n        '#6DD44A',\n        '#C7ACC0',\n        '#309CF4',\n        '#B663F3',\n        '#b579d2',\n        '#809283',\n        '#58AC47',\n        '#2FB287',\n        '#2AFDC3',\n        '#D2FA60',\n        '#A8EE51',\n        '#A9DDC7',\n        '#FE68C4',\n        '#DC3DF5',\n        '#05CDD7',\n        '#E07D47',\n        '#8EA906',\n        '#36B3F0',\n        '#BF59F2'\n    ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
