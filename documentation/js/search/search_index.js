var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddContactComponent.html",[0,0.174,1,0.454]],["body/components/AddContactComponent.html",[0,0.298,1,0.646,2,0.52,3,0.147,4,0.128,5,0.371,6,0.371,7,0.371,8,0.128,9,5.588,10,5.588,11,2.1,12,0.251,13,0.729,14,0.762,15,0.656,16,3.955,17,3.877,18,2.798,19,2.525,20,3.163,21,0.778,22,0.371,23,1.067,24,0.922,25,0.559,26,0.693,27,0.559,28,1.19,29,3.037,30,0.646,31,0.646,32,0.559,33,3.718,34,0.559,35,3.718,36,0.147,37,0.684,38,5.824,39,3.805,40,4.955,41,1.421,42,2.638,43,2.798,44,0.599,45,4.51,46,4.235,47,2.586,48,3.163,49,4.978,50,3.366,51,1.114,52,2.775,53,2.307,54,3.805,55,4.473,56,3.506,57,3.626,58,0.422,59,0.024,60,0.736,61,0.796,62,1.415,63,0.565,64,2.468,65,2.468,66,3.719,67,2.468,68,2.468,69,2.468,70,4.235,71,2.1,72,2.468,73,3.718,74,2.307,75,0.843,76,1.503,77,2.468,78,2.307,79,3.718,80,1.248,81,2.468,82,3.163,83,3.163,84,0.073,85,1.97,86,1.506,87,2.525,88,3.718,89,0.303,90,2.525,91,2.307,92,2.307,93,3.718,94,1.97,95,3.163,96,4.235,97,2.468,98,3.163,99,3.482,100,3.163,101,1.834,102,2.37,103,2.557,104,0.548,105,0.516,106,3.718,107,2.468,108,3.718,109,2.307,110,2.086,111,2.1,112,1.531,113,1.857,114,1.411,115,1.676,116,1.421,117,2.468,118,2.468,119,2.468,120,2.525,121,2.468,122,2.1,123,0.454,124,1.05,125,3.089,126,1.137,127,0.229,128,0.619,129,1.676,130,1.411,131,1.676,132,1.531,133,1.857,134,1.857,135,1.531,136,1.676,137,2.1,138,1.676,139,0.147,140,2.468,141,2.468,142,2.1,143,2.1,144,2.468,145,2.468,146,2.468,147,2.468,148,2.468,149,0.583,150,2.1,151,2.1,152,2.468,153,2.468,154,0.832,155,2.468,156,3.718,157,2.468,158,1.857,159,1.308,160,2.1,161,1.857,162,2.468,163,1.857,164,5.612,165,2.307,166,3.718,167,3.163,168,3.718,169,5.994,170,3.718,171,3.163,172,3.718,173,3.718,174,2.456,175,4.978,176,3.718,177,3.163,178,2.525,179,3.718,180,3.718,181,3.163,182,1.114,183,1.331,184,3.163,185,0.371,186,0.52,187,0.52,188,0.371,189,0.748,190,0.371,191,0.371,192,0.345,193,0.371,194,0.32,195,0.371,196,0.32,197,0.371,198,0.345,199,0.559,200,0.32,201,0.371,202,0.371,203,0.32,204,0.25,205,0.559,206,0.345,207,0.371,208,0.32,209,0.371,210,0.32,211,0.371,212,0.32,213,0.371,214,0.32,215,0.559,216,0.371,217,0.32,218,0.371,219,0.32,220,0.371,221,0.32,222,0.371,223,0.371,224,0.32,225,0.345,226,0.371,227,0.32,228,0.371,229,0.32,230,0.32,231,0.559,232,0.371,233,0.371,234,0.32,235,0.345,236,0.345,237,0.371,238,0.371,239,0.345,240,0.32,241,0.371,242,0.32,243,0.345,244,0.371,245,0.371,246,0.32,247,0.371,248,0.32,249,0.371,250,0.32,251,0.371,252,0.32,253,0.461,254,0.371,255,0.32,256,0.371,257,0.345,258,0.371,259,0.32,260,0.371,261,0.32,262,0.371,263,0.371,264,0.371,265,0.371,266,0.036,267,0.036]],["title/components/AppComponent.html",[0,0.174,194,0.454]],["body/components/AppComponent.html",[0,0.292,1,0.327,2,0.528,3,0.15,4,0.131,5,0.379,6,0.379,7,0.379,8,0.131,12,0.255,14,0.418,15,0.234,21,0.327,22,0.379,23,1.069,24,0.926,25,0.568,26,0.653,27,0.568,28,1.206,30,0.327,31,0.327,32,0.568,34,0.568,36,0.15,37,0.926,41,2.21,42,2.666,44,0.609,47,2.318,52,2.344,58,0.408,59,0.024,60,0.798,61,0.848,62,1.336,63,0.58,75,0.944,76,1.418,80,1.351,84,0.041,85,2.666,89,0.236,101,1.864,104,0.56,105,0.946,109,2.344,110,2.209,114,2.876,116,1.605,120,2.565,123,0.489,126,1.162,127,0.234,128,0.632,138,1.712,139,0.15,149,0.595,178,2.565,183,1.353,185,0.379,186,0.528,187,0.528,188,0.379,189,0.756,190,0.379,191,0.379,192,0.353,193,0.379,194,0.653,195,0.379,196,0.327,197,0.379,198,0.353,199,0.568,200,0.327,201,0.379,202,0.681,203,0.327,204,0.256,205,0.568,206,0.353,207,0.379,208,0.327,209,0.379,210,0.327,211,0.379,212,0.653,213,0.379,214,0.327,215,0.568,216,0.379,217,0.327,218,0.379,219,0.327,220,0.379,221,0.327,222,0.379,223,0.379,224,0.327,225,0.754,226,0.379,227,0.653,228,0.379,229,0.327,230,0.327,231,0.568,232,0.379,233,0.379,234,0.327,235,0.353,236,0.353,237,0.379,238,0.379,239,0.353,240,0.327,241,0.379,242,0.327,243,0.353,244,0.379,245,0.379,246,0.327,247,0.379,248,0.327,249,0.379,250,0.327,251,0.379,252,0.327,253,0.466,254,0.379,255,0.327,256,0.379,257,0.353,258,0.379,259,0.327,260,0.379,261,0.327,262,0.379,263,0.379,264,0.379,265,0.379,266,0.037,267,0.037,268,2.145,269,2.843,270,3.214,271,3.778,272,3.778,273,3.778,274,1.741,275,2.4,276,3.409,277,2.16,278,4.53,279,2.811,280,3.778,281,3.778,282,1.915,283,3.854,284,3.417,285,3.122,286,4.53,287,4.53,288,4.53,289,5.657,290,4.53,291,4.53,292,4.53,293,2.482,294,3.854,295,4.53,296,5.032,297,4.281,298,5.032,299,3.417,300,5.032,301,4.281,302,0.801,303,1.712,304,3.222,305,3.778,306,2.318,307,4.281,308,2.565,309,3.214,310,4.813,311,3.778,312,3.778,313,3.214,314,3.778,315,2.521,316,3.214,317,2.565,318,2.344,319,3.214,320,2.521,321,2.998,322,3.786,323,0.834,324,2.16,325,2.521,326,3.778,327,3.214,328,2.002,329,2.521,330,2.843,331,2.521,332,2.521,333,2.998,334,3.778,335,3.778,336,3.214,337,3.778,338,2.002,339,2.521,340,3.778,341,3.786,342,3.778,343,2.565,344,3.778,345,3.043,346,2.344,347,2.521,348,2.521,349,3.778,350,2.521,351,1.835,352,2.235,353,2.521,354,2.521,355,2.521,356,2.521,357,2.565,358,3.778,359,1.741,360,2.002,361,2.521,362,2.565,363,3.778,364,3.778,365,2.521,366,2.344,367,2.521,368,2.344,369,2.521,370,2.521,371,2.521,372,1.088,373,2.521,374,2.521,375,1.441,376,1.021,377,1.244,378,1.564,379,2.521,380,1.162,381,1.336,382,1.897,383,2.145,384,2.145,385,1.897,386,2.521,387,2.521,388,2.521,389,2.145,390,3.778,391,2.521,392,1.279,393,2.521,394,2.521,395,3.214,396,3.778,397,4.53,398,2.521,399,2.521,400,2.521,401,2.521,402,2.145,403,2.521,404,2.521,405,2.521]],["title/classes/AppUser.html",[84,0.057,351,1.417]],["body/classes/AppUser.html",[3,0.226,4,0.197,8,0.197,12,0.341,15,0.64,24,0.655,36,0.226,37,1.19,44,0.813,58,0.446,59,0.024,62,1.191,63,0.57,75,1.008,80,1.785,84,0.093,86,2.715,89,0.295,92,3.129,104,1.121,105,1.262,109,3.129,123,0.429,139,0.226,149,1.191,154,1.279,174,1.87,182,1.937,183,1.806,204,0.512,266,0.049,267,0.049,302,1.205,306,2.324,323,1.158,333,3.201,338,2.672,351,2.619,360,3.333,380,1.747,381,2.009,392,1.776,406,2.167,407,5.832,408,2.853,409,2.672,410,3.795,411,5.043,412,4.482,413,2.883,414,5.351,415,2.673,416,6.041,417,5.14,418,5.043,419,3.748,420,3.129,421,5.043,422,3.129,423,2.324,424,3.791,425,3.791,426,3.791,427,3.791,428,2.672,429,3.791,430,3.425,431,4.291,432,4.392,433,4.291,434,5.043,435,3.791,436,3.791,437,3.129,438,3.748,439,2.672,440,3.129,441,3.129,442,3.129,443,2.324,444,3.129,445,3.129,446,2.352,447,2.853,448,3.129,449,3.129,450,2.611,451,3.791,452,3.791,453,3.791,454,4.822,455,4.291,456,5.043,457,5.043,458,2.009,459,3.791,460,3.225,461,3.791,462,3.791]],["title/components/ArrowBackBtnComponent.html",[0,0.174,196,0.454]],["body/components/ArrowBackBtnComponent.html",[0,0.323,1,0.54,2,0.749,3,0.248,4,0.216,5,0.625,6,0.625,7,0.625,8,0.216,12,0.281,13,1.051,14,0.593,15,0.385,21,0.54,22,0.625,23,1.105,24,0.955,25,0.805,26,0.695,27,0.625,30,0.54,31,0.54,32,0.805,34,0.805,59,0.023,78,3.325,84,0.068,89,0.279,123,0.315,127,0.385,139,0.248,185,0.625,186,0.749,187,0.749,188,0.625,189,0.941,190,0.625,191,0.625,192,0.582,193,0.625,194,0.54,195,0.625,196,0.813,197,1.038,198,0.981,199,0.805,200,0.54,201,0.625,202,0.625,203,0.54,204,0.422,205,0.805,206,0.582,207,0.625,208,0.54,209,0.625,210,0.54,211,0.625,212,0.54,213,0.625,214,0.54,215,0.805,216,0.625,217,0.54,218,0.625,219,0.54,220,0.625,221,0.54,222,0.625,223,0.625,224,0.54,225,0.582,226,0.625,227,0.54,228,0.625,229,0.54,230,0.54,231,0.805,232,0.625,233,0.625,234,0.54,235,0.582,236,0.582,237,0.625,238,0.625,239,0.582,240,0.54,241,0.625,242,0.54,243,0.582,244,0.625,245,0.625,246,0.54,247,0.625,248,0.54,249,0.625,250,0.54,251,0.625,252,0.54,253,0.58,254,0.625,255,0.54,256,0.625,257,0.582,258,0.625,259,0.54,260,0.625,261,0.54,262,0.625,263,0.625,264,0.625,265,0.625,266,0.052,267,0.052,463,3.538,464,2.824,465,3.129,466,4.559,467,4.559,468,5.358,469,5.358,470,4.559,471,4.559,472,4.559]],["title/injectables/AuthService.html",[282,1.332,473,1.417]],["body/injectables/AuthService.html",[3,0.152,4,0.133,8,0.133,12,0.366,36,0.152,37,0.701,41,1.211,44,0.614,58,0.418,59,0.024,60,0.457,61,0.592,62,1.278,63,0.56,75,1.026,76,1.476,80,1.8,84,0.042,86,2.623,89,0.322,104,1.308,105,1.23,110,0.913,116,1.214,123,0.43,127,0.236,139,0.152,149,1.487,174,3.446,178,2.587,182,1.366,225,0.924,230,0.909,240,0.494,243,0.757,266,0.037,267,0.037,277,1.457,282,1.926,285,3.525,302,1.211,304,2.904,308,4.398,321,3.207,323,1.282,324,3.248,328,2.681,338,3.338,343,3.858,351,2.301,352,2.671,372,1.1,376,1.033,377,1.258,380,1.175,381,1.351,385,2.867,392,1.709,395,4.305,415,2.049,423,1.755,428,2.018,443,2.331,458,2.869,473,2.049,474,1.457,475,2.169,476,2.587,477,3.097,478,5.06,479,5.06,480,5.06,481,3.81,482,3.807,483,5.06,484,4.305,485,4.018,486,5.415,487,3.81,488,4.561,489,3.81,490,5.06,491,1.731,492,3.436,493,3.81,494,2.364,495,2.55,496,2.364,497,3.241,498,3.81,499,4.075,500,4.11,501,6.053,502,2.364,503,2.55,504,3.81,505,2.55,506,5.06,507,4.275,508,5.06,509,5.06,510,3.81,511,2.55,512,2.587,513,3.81,514,3.81,515,3.81,516,2.867,517,2.892,518,3.81,519,2.55,520,4.398,521,2.55,522,3.81,523,2.587,524,2.55,525,3.241,526,3.81,527,2.55,528,3.432,529,3.81,530,2.55,531,2.867,532,2.867,533,3.81,534,5.06,535,2.55,536,2.867,537,3.81,538,3.81,539,2.55,540,2.169,541,2.55,542,2.587,543,2.867,544,3.241,545,2.867,546,3.241,547,2.867,548,3.241,549,3.81,550,3.81,551,3.36,552,2.55,553,1.731,554,1.919,555,1.731,556,1.582,557,2.08,558,3.858,559,4.741,560,2.55,561,2.169,562,4.075,563,2.55,564,3.81,565,2.55,566,1.731,567,1.1,568,1.731,569,2.55,570,2.55,571,2.55,572,2.55,573,2.55,574,2.55,575,2.55,576,2.55,577,2.55,578,2.55,579,2.55,580,2.169,581,2.55,582,2.55,583,2.55,584,2.55]],["title/classes/AuthUser.html",[84,0.057,412,2.376]],["body/classes/AuthUser.html",[3,0.273,4,0.237,8,0.237,12,0.384,36,0.273,37,1.192,44,0.916,58,0.45,59,0.024,63,0.56,75,0.854,80,1.145,84,0.101,86,2.845,89,0.237,104,1.015,105,0.954,139,0.273,149,1.078,174,3.196,182,1.703,183,2.036,230,0.593,266,0.055,267,0.055,302,1.451,306,2.62,308,3.101,323,1.192,392,1.289,406,2.611,408,3.436,409,2.42,412,3.861,413,2.611,415,2.624,419,4.02,420,3.528,422,3.528,423,2.62,437,3.528,438,4.02,439,3.013,440,3.528,441,3.528,442,3.528,443,2.853,444,3.528,445,3.528,446,2.833,448,3.528,449,3.528,450,2.104,528,4.876,561,3.885,585,5.782,586,4.567,587,4.567,588,3.885,589,3.436,590,4.567,591,5.686,592,4.567,593,4.567,594,4.567,595,4.567,596,4.567,597,4.567,598,4.837,599,4.837,600,4.567]],["title/injectables/AutoscrollService.html",[473,1.417,601,2.633]],["body/injectables/AutoscrollService.html",[3,0.267,4,0.233,8,0.233,12,0.435,36,0.267,44,0.905,58,0.415,59,0.024,61,0.835,63,0.516,75,0.923,76,1.539,84,0.073,89,0.319,104,1.364,105,1.282,123,0.339,127,0.415,139,0.267,149,1.449,182,1.928,186,0.9,187,0.997,266,0.054,267,0.054,277,2.562,323,1.245,415,2.607,473,2.607,474,2.562,476,4.371,556,2.781,557,1.951,601,4.229,602,3.813,603,5.62,604,6.764,605,5.62,606,5.62,607,5.62,608,5.62,609,4.482,610,6.436,611,4.229,612,6.436,613,5.476,614,5.62,615,4.482,616,5.62,617,5.62,618,4.482,619,4.781,620,5.62,621,4.229,622,6.139,623,5.62,624,5.62,625,4.482,626,4.482,627,4.482,628,3.813,629,4.482,630,4.482,631,4.482,632,4.482,633,4.482,634,4.482,635,4.482]],["title/components/BoardComponent.html",[0,0.174,200,0.454]],["body/components/BoardComponent.html",[0,0.311,1,0.264,2,0.448,3,0.122,4,0.106,5,0.306,6,0.306,7,0.306,8,0.106,12,0.367,13,0.629,14,0.719,15,0.189,17,3.96,19,3.934,21,0.264,22,0.306,23,1.049,24,0.905,25,0.482,26,0.584,27,0.482,28,1.055,29,2.692,30,0.264,31,0.264,32,0.482,34,0.482,36,0.122,37,0.59,41,1.651,44,0.516,52,2.46,57,3.054,58,0.427,59,0.024,60,0.712,61,0.77,62,0.936,63,0.564,74,2.79,75,0.949,76,1.487,80,0.994,84,0.033,86,1.606,87,1.383,89,0.293,90,2.692,91,3.223,92,2.46,101,1.581,102,2.101,104,1.154,105,1.085,109,3.494,116,0.853,123,0.449,126,0.938,127,0.189,128,0.51,132,1.263,139,0.122,149,1.155,159,1.079,161,1.532,165,3.035,182,1.962,185,0.306,186,0.726,187,0.829,188,0.306,189,0.676,190,0.306,191,0.306,192,0.629,193,0.306,194,0.264,195,0.306,196,0.264,197,0.306,198,0.285,199,0.482,200,0.584,201,0.306,202,0.781,203,0.264,204,0.496,205,0.482,206,0.285,207,0.306,208,0.264,209,0.306,210,0.264,211,0.306,212,0.264,213,0.306,214,0.264,215,0.482,216,0.306,217,0.264,218,0.306,219,0.264,220,0.306,221,0.264,222,0.306,223,0.306,224,0.264,225,0.285,226,0.306,227,0.264,228,0.306,229,0.264,230,0.264,231,0.482,232,0.306,233,0.306,234,0.264,235,0.285,236,0.285,237,0.306,238,0.306,239,0.285,240,0.264,241,0.306,242,0.264,243,0.285,244,0.306,245,0.306,246,0.264,247,0.306,248,0.264,249,0.306,250,0.264,251,0.306,252,0.264,253,0.666,254,0.306,255,0.264,256,0.306,257,0.629,258,0.306,259,0.584,260,0.306,261,0.264,262,0.306,263,0.306,264,0.306,265,0.306,266,0.031,267,0.031,293,2.218,304,2.925,317,2.177,318,1.989,323,0.59,338,2.752,352,2.681,359,2.67,366,1.989,372,0.879,376,0.825,378,1.263,392,0.575,413,2.571,415,2.687,450,2.505,496,3.223,512,2.177,516,2.412,517,2.796,545,3.384,551,3.035,567,2.61,588,3.373,611,3.384,636,1.732,637,1.989,638,3.206,639,2.727,640,3.206,641,3.206,642,3.206,643,3.206,644,3.206,645,3.965,646,4.891,647,4.891,648,3.965,649,4.891,650,3.965,651,3.965,652,5.435,653,3.206,654,4.497,655,4.497,656,2.727,657,4.497,658,4.497,659,3.206,660,3.206,661,3.206,662,4.497,663,3.206,664,3.206,665,3.965,666,2.036,667,3.206,668,3.965,669,3.965,670,5.195,671,5.195,672,3.373,673,3.909,674,3.68,675,4.419,676,3.965,677,3.965,678,2.266,679,3.965,680,3.373,681,4.09,682,3.965,683,2.692,684,2.692,685,3.965,686,3.373,687,3.965,688,3.965,689,3.373,690,2.036,691,3.457,692,3.457,693,2.983,694,2.036,695,1.004,696,1.383,697,2.036,698,2.036,699,3.494,700,3.206,701,2.036,702,3.206,703,3.206,704,3.206,705,3.206,706,2.727,707,2.036,708,3.206,709,2.036,710,3.206,711,1.532,712,3.206,713,3.206,714,2.036,715,5.794,716,3.206,717,4.497,718,4.497,719,3.206,720,2.036,721,3.206,722,2.036,723,2.727,724,3.206,725,2.727,726,2.727,727,2.036,728,3.206,729,3.206,730,2.036,731,2.727,732,2.036,733,3.206,734,2.036,735,2.036,736,2.412,737,2.036,738,2.036,739,2.036,740,2.036,741,2.036,742,2.036,743,2.036,744,2.036,745,1.263,746,1.532,747,2.036,748,1.732,749,2.036,750,1.263,751,2.036,752,2.036,753,3.206,754,3.965,755,2.036,756,2.036,757,2.036,758,2.036,759,2.036,760,3.206,761,2.036,762,2.036,763,2.036,764,2.412,765,4.497]],["title/components/CloseBtnComponent.html",[0,0.174,31,0.454]],["body/components/CloseBtnComponent.html",[0,0.322,1,0.536,2,0.746,3,0.246,4,0.215,5,0.62,6,0.62,7,0.62,8,0.215,12,0.279,13,1.046,14,0.59,15,0.382,21,0.536,22,0.62,23,1.105,24,0.954,25,0.801,26,0.692,27,0.801,28,1.572,30,0.536,31,0.81,32,0.801,34,0.801,36,0.246,51,1.597,58,0.279,59,0.023,63,0.347,78,3.308,84,0.067,89,0.277,116,1.419,123,0.404,124,1.505,127,0.382,128,1.035,135,3.308,139,0.246,185,0.62,186,0.746,187,0.746,188,0.62,189,0.938,190,0.62,191,0.62,192,0.577,193,0.62,194,0.536,195,0.62,196,0.536,197,0.62,198,0.577,199,0.801,200,0.536,201,0.62,202,1.013,203,0.536,204,0.419,205,0.801,206,0.577,207,0.62,208,0.536,209,0.62,210,0.536,211,0.62,212,0.536,213,0.62,214,0.536,215,0.801,216,0.62,217,0.536,218,0.62,219,0.536,220,0.62,221,0.536,222,0.62,223,0.62,224,0.536,225,0.577,226,0.62,227,0.536,228,0.62,229,0.536,230,0.536,231,0.801,232,0.62,233,0.62,234,0.536,235,0.577,236,0.577,237,0.62,238,0.62,239,0.577,240,0.536,241,0.62,242,0.536,243,0.577,244,0.62,245,0.62,246,0.536,247,0.62,248,0.536,249,0.62,250,0.536,251,0.62,252,0.536,253,0.578,254,0.62,255,0.536,256,0.62,257,0.577,258,0.62,259,0.536,260,0.62,261,0.536,262,0.62,263,0.62,264,0.62,265,0.62,266,0.052,267,0.052,465,3.106,470,4.537,471,4.537,472,4.537,766,4.537,767,5.332,768,5.332,769,5.907,770,4.127]],["title/classes/Contact.html",[15,0.324,84,0.057]],["body/classes/Contact.html",[3,0.239,4,0.208,8,0.208,12,0.353,15,0.608,36,0.239,37,1.136,44,0.842,58,0.452,59,0.024,63,0.57,75,0.927,80,1.646,84,0.105,86,2.803,89,0.333,94,3.27,104,0.89,105,1.338,123,0.303,139,0.239,149,0.945,174,3.044,181,5.251,182,1.848,183,1.872,266,0.051,267,0.051,269,3.934,302,1.272,306,2.409,323,1.283,360,2.77,380,1.845,381,2.121,392,1.476,406,2.289,409,2.77,410,3.934,414,5.251,415,2.593,417,5.251,419,3.829,420,3.244,422,3.244,423,2.409,430,3.55,431,4.448,432,4.459,433,4.448,437,3.244,438,4.074,439,2.77,440,3.244,441,3.244,442,3.244,443,2.409,444,3.244,445,3.244,446,2.484,448,3.612,449,3.244,450,2.844,454,4.953,455,4.448,458,2.77,460,3.406,557,1.272,598,4.448,599,4.448,771,3.406,772,5.228,773,5.228,774,3.934,775,2.988,776,5.228,777,4.003,778,4.003,779,4.003,780,4.003,781,4.003,782,4.003,783,4.448,784,4.448,785,5.228,786,5.228,787,4.003,788,4.003,789,3.012,790,3.406]],["title/components/ContactListItemComponent.html",[0,0.174,203,0.454]],["body/components/ContactListItemComponent.html",[0,0.307,1,0.465,2,0.679,3,0.214,4,0.186,5,0.539,6,0.539,7,0.539,8,0.186,12,0.242,13,0.953,14,0.537,15,0.622,21,0.465,22,0.539,23,1.096,24,0.947,25,0.73,26,0.63,27,0.73,28,1.466,30,0.766,31,0.465,32,0.73,34,0.73,36,0.214,51,1.455,58,0.43,59,0.023,60,0.741,61,0.801,63,0.535,84,0.058,89,0.356,110,2.115,116,1.571,123,0.447,124,1.837,127,0.332,128,0.898,129,2.433,130,2.049,131,2.433,139,0.214,174,2.717,185,0.539,186,0.679,187,0.679,188,0.539,189,0.887,190,0.539,191,0.539,192,0.501,193,0.539,194,0.465,195,0.539,196,0.465,197,0.539,198,0.501,199,0.73,200,0.465,201,0.539,202,0.539,203,0.766,204,0.726,205,0.73,206,0.501,207,0.539,208,0.766,209,0.539,210,0.465,211,0.539,212,0.465,213,0.539,214,0.465,215,0.73,216,0.539,217,0.465,218,0.539,219,0.465,220,0.539,221,0.465,222,0.539,223,0.539,224,0.465,225,0.501,226,0.539,227,0.465,228,0.539,229,0.465,230,0.465,231,0.73,232,0.539,233,0.539,234,0.465,235,0.501,236,0.501,237,0.539,238,0.539,239,0.501,240,0.465,241,0.539,242,0.465,243,0.501,244,0.539,245,0.539,246,0.465,247,0.539,248,0.465,249,0.539,250,0.465,251,0.539,252,0.465,253,0.589,254,0.539,255,0.465,256,0.539,257,0.501,258,0.539,259,0.465,260,0.539,261,0.465,262,0.539,263,0.539,264,0.539,265,0.539,266,0.047,267,0.047,306,2.538,323,1.171,360,3.129,432,3.741,458,2.573,507,3.654,699,3.013,791,5.536,792,4.896,793,2.697,794,3.298,795,3.654,796,4.132,797,4.132,798,5.508,799,5.508,800,4.856,801,3.584,802,3.584,803,3.049,804,3.584,805,3.049,806,3.584,807,3.584,808,4.856]],["title/injectables/ContactsService.html",[284,2.376,473,1.417]],["body/injectables/ContactsService.html",[3,0.158,4,0.138,8,0.138,12,0.39,14,0.571,15,0.682,36,0.158,37,0.722,41,1.247,44,0.632,46,3.338,56,3.295,58,0.414,59,0.024,60,0.318,61,0.344,62,1.218,63,0.526,75,0.97,76,1.445,80,1.535,84,0.043,89,0.31,94,2.734,99,3.201,104,1.325,105,1.246,123,0.436,127,0.246,133,1.996,139,0.158,149,1.361,154,1.323,182,1.727,184,3.338,204,0.705,253,0.363,266,0.038,267,0.038,277,1.517,282,2.27,284,2.664,302,1.247,321,3.579,324,2.949,360,3.555,376,1.074,380,1.222,381,1.406,392,1.627,415,2.767,428,3.245,430,2.664,443,1.808,450,2.377,458,3.054,473,1.589,474,1.517,485,4.052,491,1.802,492,3.504,494,2.434,497,4.389,502,4.13,516,3.882,520,4.587,531,4.338,542,2.664,546,4.904,547,4.608,548,3.338,551,3.416,553,1.802,555,1.802,556,1.646,557,1.987,558,3.504,559,3.882,562,1.996,566,2.664,567,1.145,568,1.802,809,2.257,810,3.924,811,3.924,812,3.924,813,5.159,814,3.924,815,3.924,816,3.924,817,3.924,818,2.653,819,6.657,820,5.764,821,3.338,822,4.32,823,5.813,824,5.764,825,5.764,826,3.924,827,2.653,828,5.764,829,5.764,830,3.924,831,2.653,832,3.338,833,3.972,834,3.924,835,2.653,836,3.924,837,2.653,838,3.338,839,3.924,840,2.653,841,3.914,842,3.924,843,3.924,844,4.684,845,3.504,846,3.924,847,2.653,848,1.996,849,5.964,850,2.653,851,5.506,852,2.653,853,2.653,854,2.653,855,2.653,856,5.159,857,2.653,858,3.924,859,2.653,860,5.159,861,2.653,862,2.257,863,5.159,864,3.924,865,3.924,866,2.653,867,3.338,868,2.664,869,2.653,870,2.257,871,2.653]],["title/components/EmailComponent.html",[0,0.174,208,0.454]],["body/components/EmailComponent.html",[0,0.323,1,0.542,2,0.751,3,0.249,4,0.217,5,0.628,6,0.628,7,0.628,8,0.217,12,0.282,13,1.054,14,0.594,15,0.387,21,0.542,22,0.628,23,1.106,24,0.955,25,0.808,26,0.697,27,0.628,30,0.542,31,0.542,32,0.808,34,0.808,36,0.249,51,1.609,58,0.282,59,0.023,60,0.501,61,0.542,63,0.351,84,0.068,89,0.279,123,0.316,124,1.517,127,0.387,139,0.249,174,3.462,185,0.628,186,0.751,187,0.751,188,0.628,189,0.943,190,0.628,191,0.628,192,0.584,193,0.628,194,0.542,195,0.628,196,0.542,197,0.628,198,0.584,199,0.808,200,0.542,201,0.628,202,0.628,203,0.542,204,0.424,205,0.808,206,0.584,207,0.628,208,0.814,209,0.628,210,0.542,211,0.628,212,0.542,213,0.628,214,0.542,215,0.808,216,0.628,217,0.542,218,0.628,219,0.542,220,0.628,221,0.542,222,0.628,223,0.628,224,0.542,225,0.584,226,0.628,227,0.542,228,0.628,229,0.542,230,0.542,231,0.808,232,0.628,233,0.628,234,0.542,235,0.584,236,0.584,237,0.628,238,0.628,239,0.584,240,0.542,241,0.628,242,0.542,243,0.584,244,0.628,245,0.628,246,0.542,247,0.628,248,0.542,249,0.628,250,0.542,251,0.628,252,0.542,253,0.581,254,0.628,255,0.542,256,0.628,257,0.584,258,0.628,259,0.542,260,0.628,261,0.542,262,0.628,263,0.628,264,0.628,265,0.628,266,0.052,267,0.052,323,0.989,532,4.043,872,3.553,873,5.373,874,5.373,875,5.373,876,4.177]],["title/components/GreetingComponent.html",[0,0.174,210,0.454]],["body/components/GreetingComponent.html",[0,0.314,1,0.415,2,0.628,3,0.191,4,0.166,5,0.481,6,0.481,7,0.481,8,0.166,12,0.303,13,0.881,14,0.497,15,0.296,21,0.415,22,0.481,23,1.088,24,0.942,25,0.675,26,0.583,27,0.481,30,0.415,31,0.415,32,0.675,34,0.675,36,0.191,37,0.826,41,1.649,44,0.723,47,2.592,58,0.303,59,0.024,60,0.623,61,0.673,62,1.225,63,0.53,75,0.89,76,1.54,80,1.681,84,0.052,87,3.82,89,0.34,91,3.49,104,0.711,105,0.668,123,0.426,126,1.473,127,0.296,139,0.191,149,0.755,154,1.078,185,0.481,186,0.628,187,0.628,188,0.481,189,0.845,190,0.481,191,0.481,192,0.447,193,0.481,194,0.415,195,0.481,196,0.415,197,0.481,198,0.447,199,0.675,200,0.415,201,0.481,202,0.481,203,0.415,204,0.325,205,0.675,206,0.447,207,0.481,208,0.415,209,0.481,210,0.73,211,0.481,212,0.415,213,0.481,214,0.415,215,0.675,216,0.481,217,0.415,218,0.481,219,0.415,220,0.481,221,0.415,222,0.481,223,0.481,224,0.415,225,0.726,226,0.481,227,0.415,228,0.481,229,0.415,230,0.415,231,0.675,232,0.481,233,0.481,234,0.415,235,0.447,236,0.447,237,0.481,238,0.481,239,0.447,240,0.415,241,0.481,242,0.415,243,0.447,244,0.481,245,0.481,246,0.415,247,0.481,248,0.415,249,0.481,250,0.415,251,0.481,252,0.415,253,0.521,254,0.481,255,0.415,256,0.481,257,0.447,258,0.481,259,0.415,260,0.481,261,0.415,262,0.481,263,0.481,264,0.481,265,0.481,266,0.043,267,0.043,274,2.069,275,2.749,276,3.904,282,2.141,283,4.414,285,3.219,299,3.82,308,3.049,309,3.819,323,1.09,330,3.378,343,3.049,345,2.923,346,2.785,351,2.488,352,3.338,375,1.828,376,1.295,377,1.577,383,2.721,389,2.721,500,3.049,512,3.049,517,2.566,528,4.623,545,3.378,557,1.016,684,3.82,689,3.819,695,2.214,726,3.819,774,3.378,877,2.721,878,3.819,879,5.569,880,5.625,881,4.489,882,4.233,883,4.489,884,4.489,885,5.041,886,6.144,887,4.489,888,3.198,889,3.378,890,4.489,891,4.489,892,3.198,893,3.819,894,3.819,895,3.198,896,3.198,897,2.785,898,4.489,899,4.489,900,3.819,901,3.198,902,3.198,903,3.198,904,3.198,905,3.198,906,3.198,907,3.198,908,3.819,909,3.198,910,3.198,911,3.198,912,3.198,913,4.489]],["title/components/HeaderComponent.html",[0,0.174,212,0.454]],["body/components/HeaderComponent.html",[0,0.32,1,0.443,2,0.657,3,0.204,4,0.177,5,0.513,6,0.513,7,0.513,8,0.177,12,0.231,13,0.922,14,0.52,15,0.316,21,0.443,22,0.513,23,1.093,24,0.944,25,0.706,26,0.61,27,0.706,28,1.429,30,0.751,31,0.443,32,0.706,34,0.706,36,0.204,37,0.864,41,1.992,44,0.757,51,1.407,53,2.914,58,0.363,59,0.024,60,0.645,61,0.697,62,0.806,63,0.54,66,3.332,75,0.706,76,1.178,80,1.346,84,0.056,89,0.244,101,2.317,102,2.489,103,2.685,110,1.682,112,2.914,115,3.189,116,1.25,123,0.475,124,1.516,125,2.914,126,1.572,127,0.316,128,0.856,129,2.317,130,1.951,131,2.317,139,0.204,185,0.513,186,0.657,187,0.657,188,0.513,189,0.869,190,0.513,191,0.513,192,0.477,193,0.513,194,0.443,195,0.513,196,0.443,197,0.513,198,0.477,199,0.706,200,0.443,201,0.513,202,0.513,203,0.443,204,0.346,205,0.706,206,0.477,207,0.513,208,0.443,209,0.513,210,0.443,211,0.513,212,0.751,213,0.513,214,0.443,215,0.706,216,0.513,217,0.443,218,0.513,219,0.443,220,0.513,221,0.443,222,0.807,223,0.513,224,0.443,225,0.848,226,0.513,227,0.443,228,0.513,229,0.443,230,0.443,231,0.706,232,0.513,233,0.513,234,0.443,235,0.477,236,0.477,237,0.807,238,0.513,239,0.477,240,0.443,241,0.513,242,0.443,243,0.477,244,0.513,245,0.513,246,0.443,247,0.513,248,0.443,249,0.513,250,0.443,251,0.513,252,0.443,253,0.536,254,0.513,255,0.443,256,0.513,257,0.477,258,0.513,259,0.443,260,0.513,261,0.443,262,0.513,263,0.513,264,0.513,265,0.513,266,0.045,267,0.045,279,3.332,282,2.386,285,3.332,304,2.854,316,4.922,317,3.929,318,3.59,327,3.996,328,3.322,346,2.914,351,2.175,352,2.317,362,3.189,372,1.473,375,1.951,377,1.683,413,2.685,484,4.922,523,3.189,675,3.996,736,3.534,774,3.534,795,3.534,914,2.903,915,4.697,916,4.697,917,4.697,918,4.922,919,4.569,920,5.371,921,3.413,922,3.413,923,3.413,924,3.413,925,3.189,926,3.534,927,2.685,928,3.413,929,3.413,930,3.413,931,3.996,932,3.413,933,3.413,934,2.568,935,3.996,936,3.189,937,3.996,938,3.996,939,4.697,940,2.914,941,3.189]],["title/components/HeadlineOtherComponent.html",[0,0.174,214,0.454]],["body/components/HeadlineOtherComponent.html",[0,0.309,1,0.473,2,0.832,3,0.218,4,0.19,5,0.548,6,0.548,7,0.548,8,0.19,12,0.247,13,0.964,14,0.544,15,0.338,21,0.473,22,0.548,23,1.097,24,0.948,25,0.739,26,0.638,27,0.739,30,0.473,31,0.473,32,0.739,34,0.739,36,0.218,37,0.905,41,2.033,44,0.792,51,1.472,58,0.247,59,0.023,60,0.667,61,0.721,63,0.5,75,0.548,76,0.915,78,3.049,84,0.06,89,0.256,123,0.45,124,1.388,126,1.681,127,0.338,136,2.477,139,0.218,185,0.548,186,0.687,187,0.687,188,0.548,189,0.894,190,0.548,191,0.548,192,0.51,193,0.548,194,0.473,195,0.548,196,0.772,197,0.961,198,0.914,199,0.739,200,0.473,201,0.548,202,0.548,203,0.473,204,0.37,205,0.739,206,0.51,207,0.548,208,0.473,209,0.548,210,0.473,211,0.548,212,0.473,213,0.548,214,0.772,215,1.057,216,0.548,217,0.473,218,0.548,219,0.473,220,0.548,221,0.473,222,0.548,223,0.548,224,0.473,225,0.51,226,0.548,227,0.473,228,0.548,229,0.473,230,0.473,231,0.739,232,0.548,233,0.548,234,0.473,235,0.51,236,0.51,237,0.548,238,0.548,239,0.51,240,0.473,241,0.548,242,0.473,243,0.51,244,0.548,245,0.548,246,0.473,247,0.548,248,0.473,249,0.548,250,0.473,251,0.548,252,0.473,253,0.551,254,0.548,255,0.473,256,0.548,257,0.51,258,0.548,259,0.473,260,0.548,261,0.473,262,0.548,263,0.548,264,0.548,265,0.548,266,0.048,267,0.048,282,2.264,304,2.934,323,0.905,336,4.182,341,4.476,346,3.049,357,3.338,372,1.574,375,2.085,464,2.477,557,1.159,628,4.182,683,3.338,695,2.424,736,3.698,925,3.338,926,3.698,927,3.4,934,2.745,942,4.672,943,4.216,944,3.104,945,4.182,946,4.915,947,4.182,948,4.915,949,4.915,950,5.948,951,3.648,952,3.648,953,4.182,954,3.648,955,3.648,956,4.915,957,3.648,958,3.648]],["title/components/HeadlineSloganComponent.html",[0,0.174,217,0.454]],["body/components/HeadlineSloganComponent.html",[0,0.319,1,0.519,2,0.731,3,0.239,4,0.208,5,0.601,6,0.601,7,0.601,8,0.208,12,0.27,13,1.025,14,0.578,15,0.37,21,0.519,22,0.601,23,1.103,24,0.953,25,0.785,26,0.678,27,0.601,30,0.519,31,0.519,32,0.785,34,0.785,36,0.239,51,1.565,58,0.353,59,0.023,60,0.627,61,0.678,63,0.439,84,0.065,89,0.272,123,0.303,124,1.643,127,0.37,139,0.239,185,0.601,186,0.731,187,0.731,188,0.601,189,0.927,190,0.601,191,0.601,192,0.559,193,0.601,194,0.519,195,0.601,196,0.519,197,0.601,198,0.559,199,0.785,200,0.519,201,0.601,202,0.601,203,0.519,204,0.406,205,0.785,206,0.559,207,0.601,208,0.519,209,0.601,210,0.519,211,0.601,212,0.519,213,0.601,214,0.519,215,1.069,216,0.601,217,0.801,218,0.601,219,0.519,220,0.601,221,0.519,222,0.601,223,0.601,224,0.519,225,0.559,226,0.601,227,0.519,228,0.601,229,0.519,230,0.519,231,0.785,232,0.601,233,0.601,234,0.519,235,0.559,236,0.559,237,0.601,238,0.601,239,0.559,240,0.519,241,0.601,242,0.519,243,0.559,244,0.601,245,0.601,246,0.519,247,0.601,248,0.519,249,0.601,250,0.519,251,0.601,252,0.519,253,0.571,254,0.601,255,0.519,256,0.601,257,0.559,258,0.601,259,0.519,260,0.601,261,0.519,262,0.601,263,0.601,264,0.601,265,0.601,266,0.051,267,0.051,323,1.135,410,3.931,467,4.445,942,4.378,945,4.445,959,4.378,960,3.402,961,6.858,962,5.224,963,5.224,964,5.224,965,5.224,966,3.999,967,3.999]],["title/components/HelpComponent.html",[0,0.174,219,0.454]],["body/components/HelpComponent.html",[0,0.28,1,0.361,2,0.569,3,0.166,4,0.145,5,0.419,6,0.419,7,0.419,8,0.145,12,0.325,13,0.798,14,0.584,15,0.52,21,0.361,22,0.419,23,1.078,24,0.931,25,0.611,26,0.528,27,0.611,30,0.361,31,0.361,32,0.611,34,0.611,56,2.324,59,0.022,60,0.634,62,1.247,78,2.523,80,1.019,84,0.045,85,2.154,89,0.275,92,3.277,94,2.798,114,2.324,123,0.364,127,0.258,139,0.166,165,3.852,167,3.459,171,3.459,183,1.456,185,0.419,186,0.569,187,0.569,188,0.419,189,0.794,190,0.419,191,0.419,192,0.389,193,0.419,194,0.361,195,0.419,196,0.361,197,0.419,198,0.389,199,0.611,200,0.361,201,0.419,202,0.419,203,0.361,204,0.615,205,0.611,206,0.389,207,0.419,208,0.685,209,0.419,210,0.361,211,0.419,212,0.361,213,0.419,214,0.685,215,0.611,216,0.419,217,0.361,218,0.419,219,0.685,220,0.419,221,0.361,222,0.419,223,0.419,224,0.361,225,0.672,226,0.419,227,0.361,228,0.419,229,0.361,230,0.361,231,0.611,232,0.419,233,0.419,234,0.361,235,0.389,236,0.389,237,0.419,238,0.419,239,0.389,240,0.361,241,0.419,242,0.361,243,0.389,244,0.419,245,0.419,246,0.361,247,0.419,248,0.361,249,0.419,250,0.361,251,0.419,252,0.361,253,0.611,254,0.419,255,0.361,256,0.419,257,0.389,258,0.419,259,0.361,260,0.419,261,0.361,262,0.419,263,0.419,264,0.419,265,0.419,266,0.039,267,0.039,321,2.154,359,3.094,360,3.409,362,4.216,368,4.404,409,2.154,413,2.324,540,3.459,567,1.755,637,2.523,674,4.413,678,3.353,683,3.586,691,3.019,692,2.324,693,2.605,696,3.586,699,3.852,775,2.324,822,2.761,832,3.459,845,2.761,927,2.324,935,5.282,936,4.216,937,4.493,938,4.493,943,1.891,968,2.369,969,3.974,970,4.066,971,4.066,972,4.066,973,2.096,974,2.369,975,2.369,976,4.066,977,5.281,978,5.865,979,2.785,980,4.066,981,4.066,982,4.066,983,5.281,984,4.066,985,3.459,986,4.066,987,3.459,988,3.459,989,3.459,990,3.06,991,3.459,992,3.459,993,3.459,994,4.066,995,4.066,996,4.066,997,4.066,998,4.066,999,4.066,1000,4.066,1001,4.493,1002,4.066,1003,4.066,1004,4.066,1005,4.066,1006,4.066,1007,4.066,1008,4.066,1009,5.281,1010,4.066,1011,4.066,1012,4.066,1013,4.066,1014,4.066,1015,3.459,1016,5.281,1017,3.459,1018,3.459,1019,3.459,1020,4.066,1021,5.281,1022,4.066,1023,4.066,1024,4.066,1025,3.459,1026,4.493,1027,3.459,1028,3.459,1029,3.459,1030,4.066,1031,3.459,1032,3.459,1033,5.281,1034,3.459,1035,2.785,1036,4.066,1037,4.066,1038,4.066,1039,4.066,1040,4.066,1041,3.459,1042,4.066,1043,5.281,1044,5.281,1045,3.06,1046,4.066,1047,6.594,1048,4.066,1049,2.785,1050,4.066,1051,4.066,1052,3.459,1053,4.066,1054,4.066,1055,4.066,1056,2.761,1057,2.324,1058,4.066,1059,4.066,1060,4.066,1061,4.066,1062,3.974,1063,4.066,1064,4.066,1065,4.066,1066,4.066,1067,5.865,1068,4.066,1069,4.066,1070,4.066,1071,3.06,1072,4.066,1073,4.066,1074,4.066,1075,4.066,1076,3.06,1077,4.066,1078,3.06,1079,3.459,1080,4.066,1081,4.066,1082,2.785,1083,4.066,1084,2.785,1085,2.785,1086,2.785,1087,2.785]],["title/components/LegalNoticeComponent.html",[0,0.174,221,0.454]],["body/components/LegalNoticeComponent.html",[0,0.278,1,0.355,2,0.561,3,0.163,4,0.142,5,0.411,6,0.411,7,0.411,8,0.142,12,0.185,13,0.787,14,0.444,15,0.44,21,0.355,22,0.411,23,1.076,24,0.929,25,0.603,26,0.521,27,0.603,30,0.355,31,0.355,32,0.603,34,0.603,59,0.022,84,0.045,86,1.624,89,0.209,92,2.489,102,2.125,123,0.36,127,0.253,139,0.163,185,0.411,186,0.561,187,0.561,188,0.411,189,0.787,190,0.411,191,0.411,192,0.382,193,0.411,194,0.355,195,0.411,196,0.355,197,0.411,198,0.382,199,0.603,200,0.355,201,0.411,202,0.411,203,0.355,204,0.277,205,0.603,206,0.382,207,0.411,208,0.679,209,0.411,210,0.355,211,0.411,212,0.355,213,0.411,214,0.679,215,0.603,216,0.411,217,0.355,218,0.411,219,0.355,220,0.411,221,0.679,222,0.997,223,0.411,224,0.355,225,0.382,226,0.411,227,0.355,228,0.411,229,0.355,230,0.355,231,0.603,232,0.714,233,0.411,234,0.355,235,0.382,236,0.382,237,0.411,238,0.411,239,0.382,240,0.355,241,0.411,242,0.355,243,0.382,244,0.411,245,0.411,246,0.355,247,0.411,248,0.355,249,0.411,250,0.355,251,0.411,252,0.355,253,0.485,254,0.411,255,0.355,256,0.411,257,0.382,258,0.411,259,0.355,260,0.411,261,0.355,262,0.411,263,0.411,264,0.411,265,0.411,266,0.039,267,0.039,328,2.773,359,1.848,368,4.327,672,3.413,674,3.018,678,3.756,684,4.194,695,1.979,775,2.293,794,4.194,841,2.724,845,2.724,936,2.724,940,3.832,943,1.856,969,3.018,973,2.057,974,2.326,975,2.326,985,3.413,987,5.255,988,3.413,989,3.413,990,3.018,991,3.413,992,5.451,993,5.451,1015,3.413,1017,4.453,1018,3.413,1019,3.413,1025,3.413,1026,3.413,1027,3.413,1028,3.413,1029,3.413,1031,3.413,1032,3.413,1034,3.413,1057,2.293,1071,3.018,1079,3.413,1088,2.326,1089,2.326,1090,2.326,1091,4.011,1092,4.011,1093,4.011,1094,4.011,1095,4.011,1096,4.011,1097,4.011,1098,4.011,1099,4.011,1100,4.011,1101,4.011,1102,4.011,1103,4.011,1104,4.011,1105,4.011,1106,4.011,1107,4.011,1108,5.827,1109,4.011,1110,6.176,1111,4.011,1112,5.235,1113,4.011,1114,5.235,1115,4.011,1116,4.011,1117,4.011,1118,4.011,1119,4.011,1120,6.176,1121,3.413,1122,4.453,1123,4.011,1124,4.011,1125,4.011,1126,4.011,1127,5.827,1128,5.235,1129,4.011,1130,5.235,1131,4.011,1132,5.827,1133,5.235,1134,4.011,1135,4.011,1136,4.011,1137,4.011,1138,4.011,1139,5.235,1140,5.235,1141,5.827,1142,5.235,1143,3.413,1144,4.011,1145,4.011,1146,4.011,1147,4.011,1148,4.011,1149,4.011,1150,4.011,1151,4.011,1152,4.011,1153,4.011,1154,4.011,1155,4.011,1156,4.011,1157,4.011,1158,4.011,1159,4.011,1160,4.011,1161,4.011,1162,4.011,1163,4.011,1164,4.011,1165,5.235,1166,4.011,1167,5.235,1168,4.011,1169,4.011,1170,4.011,1171,4.011,1172,5.235,1173,5.235,1174,4.011,1175,4.011,1176,4.011,1177,4.011,1178,4.011,1179,4.011,1180,4.011,1181,4.011,1182,4.011,1183,4.011,1184,4.011,1185,4.011,1186,5.827,1187,5.235,1188,4.011,1189,4.011,1190,4.011,1191,4.011,1192,4.011,1193,4.011,1194,4.011,1195,5.235,1196,3.413,1197,4.011,1198,4.011,1199,4.011,1200,4.011,1201,4.011,1202,4.011,1203,4.011,1204,4.011,1205,4.011,1206,4.011,1207,4.011,1208,4.011,1209,4.011,1210,4.011,1211,4.011,1212,4.011,1213,4.011,1214,4.011,1215,4.011,1216,4.011,1217,4.011,1218,4.011,1219,4.011,1220,3.413,1221,4.011,1222,4.011]],["title/components/LogInPageComponent.html",[0,0.174,224,0.454]],["body/components/LogInPageComponent.html",[0,0.335,1,0.443,2,0.657,3,0.204,4,0.177,5,0.513,6,0.513,7,0.513,8,0.177,12,0.231,14,0.52,15,0.316,17,3.59,21,0.443,22,0.513,23,1.093,24,0.944,25,0.706,26,0.751,27,0.706,28,1.429,30,0.443,31,0.443,32,0.706,34,0.706,36,0.204,37,0.864,44,0.757,47,2.666,52,2.914,58,0.317,59,0.024,60,0.564,61,0.61,63,0.486,74,3.59,75,0.706,76,1.178,80,1.178,84,0.056,89,0.244,110,1.222,116,1.25,123,0.438,127,0.316,128,0.856,139,0.204,159,1.808,185,0.513,186,0.657,187,0.657,188,0.513,189,0.869,190,0.513,191,0.513,192,0.477,193,0.513,194,0.443,195,0.513,196,0.443,197,0.513,198,0.477,199,0.706,200,0.443,201,0.513,202,0.513,203,0.443,204,0.346,205,0.706,206,0.477,207,0.513,208,0.443,209,0.513,210,0.443,211,0.513,212,0.443,213,0.513,214,0.443,215,0.706,216,0.513,217,0.443,218,0.513,219,0.443,220,0.513,221,0.443,222,0.807,223,0.513,224,0.751,225,0.99,226,0.513,227,0.443,228,0.513,229,0.443,230,0.443,231,0.706,232,0.513,233,0.513,234,0.443,235,0.477,236,0.477,237,0.807,238,0.513,239,0.809,240,0.814,241,0.513,242,0.443,243,0.477,244,0.513,245,0.513,246,0.443,247,0.513,248,0.443,249,0.513,250,0.443,251,0.513,252,0.443,253,0.536,254,0.513,255,0.443,256,0.513,257,0.477,258,0.513,259,0.443,260,0.513,261,0.443,262,0.513,263,0.513,264,0.513,265,0.513,266,0.045,267,0.045,274,2.164,275,2.846,279,3.332,368,2.914,372,1.473,409,2.489,482,3.534,893,3.996,897,4.12,926,3.534,927,3.584,940,2.914,941,3.189,953,3.996,1223,5.161,1224,5.161,1225,2.903,1226,4.697,1227,4.697,1228,4.697,1229,5.785,1230,4.697,1231,4.697,1232,4.697,1233,4.697,1234,5.371,1235,5.371,1236,5.785,1237,3.413,1238,4.697,1239,4.697,1240,4.697,1241,5.371,1242,4.697,1243,3.413,1244,4.697,1245,3.534,1246,6.424,1247,3.413,1248,3.413,1249,2.903,1250,3.413,1251,3.413,1252,5.371,1253,4.697]],["title/components/MenuComponent.html",[0,0.174,227,0.454]],["body/components/MenuComponent.html",[0,0.314,1,0.496,2,0.709,3,0.228,4,0.199,5,0.574,6,0.574,7,0.574,8,0.199,12,0.343,13,0.995,14,0.67,15,0.354,21,0.496,22,0.574,23,1.1,24,0.95,25,0.762,26,0.658,27,0.762,28,1.514,30,0.496,31,0.496,32,0.762,34,0.762,36,0.228,44,0.817,58,0.258,59,0.023,63,0.426,75,0.762,80,1.271,84,0.062,89,0.296,104,0.849,105,0.798,123,0.431,127,0.354,128,0.958,139,0.228,149,0.902,183,1.816,185,0.574,186,0.709,187,0.709,188,0.574,189,0.911,190,0.574,191,0.574,192,0.534,193,0.574,194,0.496,195,0.574,196,0.496,197,0.574,198,0.534,199,0.762,200,0.496,201,0.574,202,0.574,203,0.496,204,0.388,205,0.762,206,0.534,207,0.574,208,0.496,209,0.574,210,0.496,211,0.574,212,0.496,213,0.574,214,0.496,215,0.762,216,0.574,217,0.496,218,0.574,219,0.496,220,0.574,221,0.496,222,0.855,223,0.574,224,0.496,225,0.534,226,0.574,227,0.786,228,0.574,229,0.496,230,0.496,231,0.762,232,0.574,233,0.574,234,0.496,235,0.534,236,0.534,237,0.855,238,0.574,239,0.534,240,0.496,241,0.574,242,0.496,243,0.534,244,0.574,245,0.574,246,0.496,247,0.574,248,0.496,249,0.574,250,0.496,251,0.574,252,0.496,253,0.6,254,0.574,255,0.496,256,0.574,257,0.534,258,0.574,259,0.496,260,0.574,261,0.496,262,0.574,263,0.574,264,0.574,265,0.574,266,0.049,267,0.049,279,3.53,297,5.156,302,1.214,303,2.595,304,3.457,306,2.792,318,3.76,321,3.211,322,3.815,324,2.898,341,3.815,357,3.443,359,2.336,360,2.686,372,1.649,382,2.875,392,1.079,402,3.251,940,3.146,941,3.443,1254,3.251,1255,5.07,1256,5.07,1257,5.07,1258,4.313,1259,5.07,1260,5.07,1261,3.821,1262,3.821]],["title/components/PasswordIconComponent.html",[0,0.174,229,0.454]],["body/components/PasswordIconComponent.html",[0,0.319,1,0.519,2,0.731,3,0.239,4,0.208,5,0.601,6,0.601,7,0.601,8,0.208,12,0.27,13,1.025,14,0.578,15,0.37,21,0.519,22,0.601,23,1.103,24,0.953,25,0.785,26,0.678,27,0.785,28,1.548,30,0.519,31,0.519,32,0.785,34,0.785,36,0.239,51,1.565,58,0.27,59,0.023,60,0.768,61,0.519,63,0.336,84,0.065,89,0.272,114,3.659,123,0.395,124,1.853,127,0.37,128,1.003,139,0.239,185,0.601,186,0.731,187,0.731,188,0.601,189,0.927,190,0.601,191,0.601,192,0.559,193,0.601,194,0.519,195,0.601,196,0.519,197,0.601,198,0.559,199,0.785,200,0.519,201,0.601,202,0.601,203,0.519,204,0.406,205,0.785,206,0.559,207,0.601,208,0.519,209,0.601,210,0.519,211,0.601,212,0.519,213,0.601,214,0.519,215,0.785,216,0.601,217,0.519,218,0.601,219,0.519,220,0.601,221,0.519,222,0.601,223,0.601,224,0.519,225,0.559,226,0.601,227,0.519,228,0.601,229,0.801,230,0.905,231,0.785,232,0.601,233,0.601,234,0.519,235,0.559,236,0.559,237,0.601,238,0.601,239,0.559,240,0.519,241,0.601,242,0.519,243,0.559,244,0.601,245,0.601,246,0.519,247,0.601,248,0.519,249,0.601,250,0.519,251,0.601,252,0.519,253,0.571,254,0.601,255,0.519,256,0.601,257,0.559,258,0.601,259,0.519,260,0.601,261,0.519,262,0.601,263,0.601,264,0.601,265,0.601,266,0.051,267,0.051,1263,4.445,1264,3.931,1265,3.009,1266,5.248,1267,5.224,1268,4.445,1269,5.224,1270,4.445,1271,4.445,1272,4.445,1273,4.445,1274,4.445,1275,3.931,1276,3.999]],["title/components/PersonBadgeComponent.html",[0,0.174,30,0.454]],["body/components/PersonBadgeComponent.html",[0,0.307,1,0.465,2,0.679,3,0.214,4,0.186,5,0.538,6,0.538,7,0.538,8,0.186,12,0.242,13,0.952,14,0.537,15,0.332,21,0.465,22,0.538,23,1.096,24,0.947,25,0.729,26,0.63,27,0.729,28,1.465,30,0.766,31,0.465,32,0.729,34,0.729,36,0.214,44,0.782,51,1.454,58,0.417,59,0.024,60,0.583,61,0.63,63,0.535,75,0.729,84,0.058,89,0.338,105,1.014,116,1.571,123,0.367,124,1.796,127,0.332,128,0.898,130,3.719,139,0.214,154,1.637,185,0.538,186,0.679,187,0.679,188,0.538,189,0.887,190,0.538,191,0.538,192,0.501,193,0.538,194,0.465,195,0.538,196,0.465,197,0.538,198,0.501,199,0.729,200,0.465,201,0.538,202,0.538,203,0.465,204,0.363,205,0.729,206,0.501,207,0.538,208,0.465,209,0.538,210,0.465,211,0.538,212,0.465,213,0.538,214,0.465,215,0.729,216,0.538,217,0.465,218,0.538,219,0.465,220,0.538,221,0.465,222,0.538,223,0.538,224,0.465,225,0.501,226,0.538,227,0.465,228,0.538,229,0.465,230,0.465,231,0.729,232,0.978,233,0.538,234,0.465,235,0.501,236,0.501,237,0.538,238,0.538,239,0.501,240,0.465,241,0.538,242,0.465,243,0.501,244,0.538,245,0.538,246,0.465,247,0.538,248,0.465,249,0.538,250,0.465,251,0.538,252,0.465,253,0.547,254,0.538,255,0.465,256,0.538,257,0.501,258,0.538,259,0.465,260,0.538,261,0.465,262,0.538,263,0.538,264,0.538,265,0.538,266,0.047,267,0.047,285,3.416,313,4.129,323,1.135,392,1.011,432,4.189,557,1.542,790,4.129,795,4.442,1052,4.129,1271,4.129,1277,5.535,1278,3.046,1279,4.853,1280,4.853,1281,6.361,1282,4.853,1283,3.652,1284,4.853,1285,4.853,1286,4.853,1287,4.853,1288,6.361,1289,5.506,1290,5.506,1291,3.58,1292,3.58,1293,3.58,1294,3.58,1295,4.853,1296,3.58,1297,3.58,1298,5.506,1299,3.58,1300,3.58,1301,3.58,1302,3.58,1303,3.58,1304,4.129,1305,4.853]],["title/components/PrioIconComponent.html",[0,0.174,234,0.454]],["body/components/PrioIconComponent.html",[0,0.317,1,0.508,2,0.721,3,0.234,4,0.204,5,0.589,6,0.589,7,0.589,8,0.204,12,0.265,13,1.011,14,0.57,15,0.363,21,0.508,22,0.589,23,1.102,24,0.952,25,0.775,26,0.669,27,0.589,30,0.508,31,0.508,32,0.775,34,0.775,36,0.234,51,1.544,58,0.265,59,0.024,60,0.47,61,0.508,63,0.329,84,0.064,89,0.268,101,2.543,123,0.297,124,1.455,127,0.363,139,0.234,185,0.589,186,0.721,187,0.721,188,0.589,189,0.92,190,0.589,191,0.589,192,0.548,193,0.589,194,0.508,195,0.589,196,0.508,197,0.589,198,0.548,199,0.775,200,0.508,201,0.589,202,0.589,203,0.508,204,0.398,205,0.775,206,0.548,207,0.589,208,0.508,209,0.589,210,0.508,211,0.589,212,0.508,213,0.589,214,0.508,215,0.775,216,0.589,217,0.508,218,0.589,219,0.508,220,0.589,221,0.508,222,0.589,223,0.589,224,0.508,225,0.548,226,0.589,227,0.508,228,0.589,229,0.508,230,0.508,231,0.775,232,0.589,233,0.589,234,0.794,235,0.964,236,0.548,237,0.589,238,0.589,239,0.548,240,0.508,241,0.589,242,0.508,243,0.548,244,0.589,245,0.589,246,0.508,247,0.589,248,0.508,249,0.589,250,0.508,251,0.589,252,0.508,253,0.567,254,0.589,255,0.508,256,0.589,257,0.548,258,0.589,259,0.508,260,0.589,261,0.508,262,0.589,263,0.589,264,0.589,265,0.589,266,0.05,267,0.05,323,0.721,1062,3.879,1265,2.948,1266,5.207,1270,5.207,1272,4.385,1273,4.385,1274,4.385,1306,4.385,1307,3.5,1308,4.605,1309,5.154,1310,5.154,1311,4.156,1312,5.207,1313,5.207,1314,3.918,1315,6.528]],["title/components/ResetPasswordComponent.html",[0,0.174,242,0.454]],["body/components/ResetPasswordComponent.html",[0,0.274,1,0.272,2,0.459,3,0.125,4,0.109,5,0.315,6,0.315,7,0.315,8,0.109,12,0.371,13,0.644,14,0.363,15,0.194,17,4.085,21,0.272,22,0.315,23,1.052,24,0.908,25,0.493,26,0.524,27,0.493,28,1.075,29,2.744,30,0.272,31,0.272,32,0.493,34,0.493,36,0.125,37,0.604,39,3.438,41,1.284,44,0.528,47,2.106,48,2.791,52,2.035,58,0.455,59,0.024,60,0.66,61,0.791,62,0.775,63,0.557,75,0.944,76,1.319,84,0.034,89,0.304,95,2.791,96,4.975,98,3.888,99,2.836,101,1.618,103,2.612,104,1.299,105,1.148,110,1.175,112,2.836,116,1.514,123,0.431,124,1.83,127,0.194,128,0.526,132,1.301,139,0.125,149,1.242,150,1.784,151,1.784,154,2.017,159,1.738,185,0.315,186,0.736,187,0.866,188,0.315,189,0.687,190,0.315,191,0.315,192,0.293,193,0.315,194,0.272,195,0.315,196,0.272,197,0.315,198,0.293,199,0.493,200,0.272,201,0.315,202,0.315,203,0.272,204,0.213,205,0.493,206,0.293,207,0.315,208,0.272,209,0.315,210,0.272,211,0.315,212,0.272,213,0.315,214,0.272,215,0.493,216,0.315,217,0.272,218,0.315,219,0.272,220,0.315,221,0.272,222,0.607,223,0.315,224,0.272,225,0.293,226,0.315,227,0.272,228,0.315,229,0.593,230,0.929,231,0.493,232,0.315,233,0.315,234,0.272,235,0.293,236,0.293,237,0.607,238,0.315,239,0.293,240,0.759,241,0.315,242,0.593,243,0.898,244,0.315,245,0.315,246,0.272,247,0.315,248,0.272,249,0.315,250,0.272,251,0.315,252,0.272,253,0.423,254,0.315,255,0.272,256,0.315,257,0.293,258,0.315,259,0.272,260,0.315,261,0.593,262,0.607,263,0.607,264,0.315,265,0.315,266,0.032,267,0.032,274,1.512,275,2.141,279,2.507,282,2.092,302,1.042,303,1.424,304,2.594,321,1.738,322,3.732,323,0.841,333,3.014,338,2.421,345,1.993,352,2.254,372,0.905,375,1.199,376,0.849,392,1.29,428,1.111,430,2.228,482,2.468,499,4.4,525,2.791,613,3.888,711,2.468,731,2.791,794,2.228,934,1.578,940,2.035,941,2.228,1071,2.468,1076,2.468,1264,1.578,1268,5.342,1275,4.586,1316,5.672,1317,5.672,1318,1.784,1319,3.28,1320,3.28,1321,3.28,1322,3.28,1323,4.96,1324,4.041,1325,4.041,1326,4.041,1327,4.041,1328,4.041,1329,4.041,1330,5.259,1331,3.28,1332,3.28,1333,3.28,1334,3.28,1335,3.28,1336,4.57,1337,4.57,1338,3.28,1339,2.097,1340,4.57,1341,4.57,1342,3.28,1343,5.981,1344,3.28,1345,4.676,1346,2.097,1347,4.57,1348,2.791,1349,3.28,1350,3.28,1351,4.975,1352,2.097,1353,3.888,1354,3.28,1355,3.28,1356,3.28,1357,2.097,1358,3.28,1359,4.57,1360,2.097,1361,3.28,1362,2.097,1363,3.28,1364,3.28,1365,2.097,1366,2.791,1367,3.28,1368,3.28,1369,2.097,1370,3.28,1371,2.791,1372,3.28,1373,2.791,1374,2.097,1375,3.28,1376,3.28,1377,2.097,1378,3.28,1379,2.097,1380,3.28,1381,2.097,1382,2.097,1383,3.28,1384,2.097,1385,2.097,1386,2.097,1387,2.097,1388,1.784,1389,2.097,1390,1.578,1391,2.097,1392,1.578,1393,2.097,1394,2.097,1395,2.097,1396,4.041,1397,2.097,1398,2.097,1399,2.097,1400,2.097,1401,2.097,1402,2.097,1403,2.097,1404,2.097,1405,2.097,1406,2.097,1407,2.097,1408,1.784,1409,1.784,1410,1.784,1411,2.097,1412,2.097,1413,2.097,1414,2.097,1415,2.097,1416,2.097,1417,2.097,1418,4.041,1419,2.097,1420,2.097,1421,2.097,1422,2.097,1423,2.097,1424,2.097,1425,2.097,1426,2.097,1427,3.28,1428,3.28,1429,3.28,1430,3.28,1431,3.28,1432,3.28,1433,3.28,1434,3.28,1435,2.791,1436,3.28,1437,3.28,1438,2.097,1439,2.097,1440,2.097,1441,2.097]],["title/components/SlideComponent.html",[0,0.174,21,0.454]],["body/components/SlideComponent.html",[0,0.349,1,0.463,2,0.677,3,0.213,4,0.185,5,0.536,6,0.536,7,0.536,8,0.185,12,0.241,14,0.535,15,0.33,18,3.643,19,3.287,21,0.765,22,0.536,23,1.096,24,0.946,25,0.728,26,0.765,27,0.536,30,0.463,31,0.463,32,0.728,34,0.728,36,0.213,37,0.891,43,4.636,44,0.78,47,2.716,50,4.435,53,3.004,57,4.761,58,0.327,59,0.023,60,0.428,61,0.463,62,0.842,63,0.495,66,3.41,75,0.728,76,1.378,84,0.09,85,2.565,87,3.287,89,0.252,102,2.565,103,3.369,112,3.004,113,3.643,114,3.369,115,3.287,116,1.288,123,0.27,125,3.004,127,0.33,139,0.213,158,2.684,159,1.89,185,0.536,186,0.677,187,0.677,188,0.536,189,0.886,190,0.536,191,0.536,192,0.499,193,0.536,194,0.463,195,0.536,196,0.463,197,0.536,198,0.499,199,0.728,200,0.463,201,0.536,202,0.536,203,0.463,204,0.362,205,0.728,206,0.499,207,0.536,208,0.463,209,0.536,210,0.463,211,0.536,212,0.463,213,0.536,214,0.463,215,0.728,216,0.536,217,0.463,218,0.536,219,0.463,220,0.536,221,0.463,222,0.536,223,0.536,224,0.463,225,0.499,226,0.536,227,0.463,228,0.536,229,0.463,230,0.463,231,0.728,232,0.536,233,0.536,234,0.463,235,0.499,236,0.499,237,0.536,238,0.536,239,0.499,240,0.463,241,0.536,242,0.463,243,0.499,244,0.536,245,0.536,246,0.463,247,0.536,248,0.463,249,0.536,250,0.463,251,0.536,252,0.463,253,0.546,254,0.536,255,0.463,256,0.536,257,0.499,258,0.536,259,0.463,260,0.536,261,0.463,262,0.536,263,0.536,264,0.536,265,0.536,274,2.231,275,2.912,328,2.565,450,1.644,517,2.767,678,2.767,681,3.643,695,2.388,897,3.004,900,5.014,969,3.643,1001,4.119,1076,4.435,1442,3.035,1443,5.014,1444,4.119,1445,4.841,1446,4.841,1447,4.841,1448,4.841,1449,5.894,1450,4.841,1451,4.841,1452,4.119,1453,4.841,1454,4.841,1455,4.841,1456,4.841,1457,3.567,1458,3.567,1459,4.841,1460,3.567,1461,3.567,1462,5.495,1463,3.567]],["title/components/StatsItemComponent.html",[0,0.174,246,0.454]],["body/components/StatsItemComponent.html",[0,0.306,1,0.46,2,0.674,3,0.212,4,0.184,5,0.533,6,0.533,7,0.533,8,0.184,12,0.326,13,0.946,14,0.533,15,0.328,21,0.46,22,0.533,23,1.096,24,0.946,25,0.724,26,0.626,27,0.724,28,1.457,30,0.46,31,0.46,32,0.724,34,0.724,36,0.212,44,0.777,51,1.444,58,0.397,59,0.024,60,0.657,61,0.857,63,0.517,75,0.533,76,0.889,84,0.058,89,0.343,104,0.787,105,0.74,123,0.415,124,1.659,127,0.328,128,0.889,139,0.212,149,0.837,154,1.626,182,1.444,183,1.726,185,0.533,186,0.674,187,0.674,188,0.533,189,0.883,190,0.533,191,0.533,192,0.496,193,0.533,194,0.46,195,0.533,196,0.46,197,0.533,198,0.496,199,0.724,200,0.46,201,0.533,202,0.533,203,0.46,204,0.36,205,0.724,206,0.496,207,0.533,208,0.46,209,0.533,210,0.46,211,0.533,212,0.46,213,0.533,214,0.46,215,0.724,216,0.533,217,0.46,218,0.533,219,0.46,220,0.533,221,0.46,222,0.533,223,0.533,224,0.46,225,0.496,226,0.533,227,0.46,228,0.533,229,0.46,230,0.46,231,0.724,232,0.533,233,0.533,234,0.46,235,0.496,236,0.496,237,0.533,238,0.533,239,0.496,240,0.46,241,0.533,242,0.46,243,0.496,244,0.533,245,0.533,246,0.763,247,0.975,248,0.46,249,0.533,250,0.46,251,0.533,252,0.46,253,0.587,254,0.533,255,0.46,256,0.533,257,0.496,258,0.533,259,0.46,260,0.533,261,0.46,262,0.533,263,0.533,264,0.533,265,0.533,266,0.047,267,0.047,302,1.126,303,2.407,304,3.37,306,2.708,323,1.167,359,2.221,372,1.529,382,2.667,507,4.423,793,2.667,796,4.101,797,4.101,803,4.101,805,3.015,925,3.273,927,3.36,1304,4.101,1311,3.273,1464,5.396,1465,4.772,1466,4.82,1467,4.82,1468,4.82,1469,5.878,1470,5.52,1471,3.544,1472,3.544,1473,3.544,1474,4.82,1475,3.544,1476,3.544,1477,3.544,1478,4.82,1479,3.544,1480,3.544,1481,3.544]],["title/classes/Subtask.html",[84,0.057,1482,1.854]],["body/classes/Subtask.html",[3,0.269,4,0.235,8,0.235,12,0.381,36,0.269,37,1.187,44,0.909,58,0.458,59,0.024,63,0.569,75,0.848,84,0.101,86,2.815,89,0.345,104,1.003,105,0.943,139,0.269,149,1.066,182,1.933,183,2.021,253,0.418,266,0.055,267,0.055,302,1.434,306,2.601,323,1.039,392,1.274,406,2.58,409,2.391,415,2.494,419,4.003,420,3.502,422,3.502,423,2.601,437,3.502,438,4.204,439,2.991,440,3.502,441,3.502,442,3.502,443,2.601,444,3.502,445,3.502,446,2.8,448,3.821,449,3.502,450,2.838,557,1.434,640,3.183,693,2.784,783,4.802,784,4.802,789,3.396,1482,3.263,1483,3.84,1484,3.84,1485,6.158,1486,5.644,1487,4.513,1488,4.513,1489,4.513,1490,4.513,1491,5.644,1492,5.644,1493,4.802,1494,4.802]],["title/components/SubtaskComponent.html",[0,0.174,248,0.454]],["body/components/SubtaskComponent.html",[0,0.321,1,0.363,2,0.57,3,0.167,4,0.145,5,0.42,6,0.42,7,0.42,8,0.145,12,0.276,13,0.8,14,0.451,15,0.259,16,3.592,17,3.282,21,0.363,22,0.42,23,1.078,24,0.931,25,0.613,26,0.625,27,0.613,28,1.281,29,3.268,30,0.363,31,0.363,32,0.613,34,0.613,36,0.167,37,0.75,41,1.529,44,0.657,45,4.419,47,2.438,51,1.221,53,2.53,56,2.751,58,0.42,59,0.024,60,0.675,61,0.73,62,1.467,63,0.569,66,3.49,75,0.911,76,1.52,84,0.046,85,2.16,89,0.339,90,4.431,91,3.282,102,3.112,103,2.331,104,0.621,105,0.584,110,1.724,116,1.085,123,0.426,124,1.658,125,2.986,127,0.259,128,0.701,132,1.734,139,0.167,149,0.66,154,0.943,159,1.481,163,2.103,185,0.42,186,0.57,187,0.74,188,0.42,189,0.795,190,0.42,191,0.42,192,0.391,193,0.42,194,0.363,195,0.42,196,0.363,197,0.42,198,0.391,199,0.613,200,0.363,201,0.42,202,0.42,203,0.363,204,0.284,205,0.613,206,0.391,207,0.42,208,0.363,209,0.42,210,0.363,211,0.42,212,0.363,213,0.42,214,0.363,215,0.613,216,0.42,217,0.363,218,0.42,219,0.363,220,0.42,221,0.363,222,0.42,223,0.42,224,0.363,225,0.391,226,0.42,227,0.363,228,0.42,229,0.363,230,0.363,231,0.613,232,0.42,233,0.42,234,0.363,235,0.391,236,0.391,237,0.42,238,0.42,239,0.391,240,0.363,241,0.42,242,0.363,243,0.391,244,0.42,245,0.42,246,0.363,247,0.42,248,0.687,249,0.42,250,0.363,251,0.42,252,0.363,253,0.617,254,0.42,255,0.363,256,0.42,257,0.391,258,0.42,259,0.363,260,0.42,261,0.363,262,0.42,263,0.42,264,0.42,265,0.42,266,0.039,267,0.039,269,3.068,274,1.879,275,2.55,299,3.592,323,0.75,345,2.374,376,1.132,554,4.233,557,0.888,640,2.011,683,2.769,686,4.501,711,2.103,1345,2.378,1348,3.469,1351,4.095,1388,2.378,1408,2.378,1409,2.378,1410,2.378,1435,4.095,1482,3.629,1495,5.794,1496,2.378,1497,4.077,1498,4.077,1499,4.077,1500,4.077,1501,4.077,1502,4.077,1503,4.813,1504,4.813,1505,4.813,1506,4.077,1507,3.981,1508,5.29,1509,4.813,1510,4.813,1511,2.795,1512,2.795,1513,2.795,1514,2.795,1515,2.795,1516,4.077,1517,4.077,1518,2.795,1519,4.077,1520,2.795,1521,4.077,1522,2.795,1523,4.077,1524,2.795,1525,4.077,1526,5.29,1527,4.077,1528,5.29,1529,2.795,1530,4.077,1531,3.469,1532,2.795,1533,4.077,1534,4.077,1535,2.795,1536,4.077,1537,4.077,1538,3.469,1539,4.077,1540,3.469,1541,2.795,1542,4.077,1543,2.795,1544,2.795,1545,2.795,1546,2.378,1547,2.795,1548,2.795,1549,4.813,1550,4.813,1551,2.795,1552,4.813,1553,2.795,1554,4.077,1555,2.795,1556,2.795,1557,2.795,1558,2.795,1559,2.795,1560,4.077,1561,2.795,1562,4.077,1563,2.795]],["title/components/SummaryComponent.html",[0,0.174,250,0.454]],["body/components/SummaryComponent.html",[0,0.275,1,0.347,2,0.552,3,0.16,4,0.139,5,0.402,6,0.402,7,0.402,8,0.139,12,0.317,13,1.017,14,0.437,15,0.248,21,0.347,22,0.402,23,1.074,24,0.928,25,0.594,26,0.513,27,0.594,28,1.249,30,0.347,31,0.347,32,0.594,34,0.594,36,0.16,37,0.727,41,1.838,44,0.636,58,0.317,59,0.024,60,0.563,61,0.813,62,0.632,63,0.55,74,2.451,75,0.993,76,0.99,80,0.99,84,0.044,89,0.319,91,2.451,104,0.878,105,0.825,109,2.451,123,0.465,126,1.233,127,0.248,128,0.671,139,0.16,149,0.933,154,1.583,165,4.245,182,1.732,183,1.415,185,0.402,186,0.552,187,0.552,188,0.402,189,0.779,190,0.402,191,0.402,192,0.374,193,0.402,194,0.347,195,0.402,196,0.347,197,0.402,198,0.374,199,0.594,200,0.347,201,0.402,202,0.402,203,0.347,204,0.272,205,0.594,206,0.374,207,0.402,208,0.347,209,0.402,210,0.672,211,0.402,212,0.347,213,0.402,214,0.347,215,0.594,216,0.402,217,0.672,218,0.402,219,0.347,220,0.402,221,0.347,222,0.402,223,0.402,224,0.347,225,0.656,226,0.402,227,0.347,228,0.402,229,0.347,230,0.347,231,0.594,232,0.402,233,0.402,234,0.347,235,0.374,236,0.374,237,0.402,238,0.402,239,0.374,240,0.347,241,0.402,242,0.347,243,0.374,244,0.402,245,0.402,246,0.672,247,0.594,248,0.347,249,0.402,250,0.672,251,0.402,252,0.347,253,0.618,254,0.402,255,0.347,256,0.402,257,0.374,258,0.402,259,0.347,260,0.402,261,0.347,262,0.402,263,0.402,264,0.402,265,0.402,266,0.038,267,0.038,274,1.82,276,3.532,282,1.972,293,2.556,299,3.519,301,4.409,302,1.492,307,3.36,323,1.216,328,2.093,330,2.972,343,2.682,345,2.556,346,2.451,352,2.951,357,3.519,359,2.388,366,2.451,375,1.53,378,1.661,384,2.277,392,1.77,439,2.093,517,2.258,557,1.756,567,2.026,580,3.36,640,2.853,691,2.683,692,2.683,693,2.315,695,1.948,745,1.661,868,2.682,878,3.36,879,4.409,882,2.972,885,3.993,889,2.972,894,3.36,908,2.277,959,2.014,973,2.014,1056,4.169,1057,2.683,1062,2.972,1220,2.277,1258,3.36,1308,3.899,1311,3.753,1465,2.014,1470,3.36,1564,2.277,1565,3.95,1566,4.409,1567,3.95,1568,3.95,1569,3.95,1570,3.95,1571,3.95,1572,4.694,1573,3.36,1574,5.182,1575,5.182,1576,5.182,1577,3.95,1578,3.95,1579,3.36,1580,2.677,1581,5.223,1582,3.519,1583,2.677,1584,5.182,1585,2.677,1586,3.95,1587,2.677,1588,2.677,1589,3.95,1590,2.677,1591,3.95,1592,4.409,1593,2.677,1594,3.95,1595,2.972,1596,3.95,1597,2.677,1598,2.677,1599,2.677,1600,2.277,1601,2.677,1602,2.677,1603,3.95,1604,2.677,1605,2.277,1606,2.677,1607,2.677,1608,2.677,1609,2.677,1610,3.95,1611,2.677,1612,2.677,1613,2.677,1614,2.677,1615,2.677,1616,2.677,1617,2.677,1618,2.677,1619,2.677,1620,2.677,1621,2.677,1622,2.677,1623,2.677,1624,2.677,1625,2.677,1626,2.677,1627,2.677,1628,2.677,1629,2.677,1630,2.677,1631,2.677,1632,2.677,1633,3.36,1634,2.677,1635,2.677]],["title/classes/Task.html",[84,0.057,253,0.324]],["body/classes/Task.html",[3,0.196,4,0.171,8,0.171,12,0.419,36,0.196,37,1.047,44,0.737,58,0.463,59,0.024,60,0.718,61,0.683,63,0.579,75,0.931,80,1.651,84,0.086,86,2.625,89,0.238,104,1.016,105,1.189,110,1.175,116,1.216,123,0.346,139,0.196,149,1.079,154,1.107,182,1.941,183,1.637,235,0.796,253,0.61,266,0.044,267,0.044,294,4.841,302,1.043,306,2.107,323,1.26,333,3.17,338,2.422,351,2.423,377,1.619,392,1.291,406,1.876,409,2.422,415,2.13,419,3.53,420,2.836,422,2.836,423,2.107,437,2.836,438,3.843,439,3.282,440,2.836,441,2.836,442,2.836,443,2.107,444,2.836,445,2.836,446,2.036,448,3.264,449,2.836,450,2.107,458,3.015,557,1.808,567,1.973,640,2.807,673,3.44,691,2.613,692,2.613,693,2.255,695,2.255,725,3.889,789,2.47,882,2.47,1045,4.501,1056,4.402,1057,3.541,1275,3.44,1311,3.104,1312,4.476,1313,3.889,1482,3.015,1484,3.889,1493,3.889,1494,3.889,1592,4.476,1633,2.792,1636,2.47,1637,4.841,1638,3.864,1639,5.261,1640,5.69,1641,4.572,1642,4.572,1643,3.282,1644,4.476,1645,3.889,1646,3.282,1647,3.282,1648,3.282,1649,3.282,1650,3.282,1651,3.282,1652,4.572,1653,3.282,1654,3.282,1655,3.282,1656,4.572,1657,3.889,1658,3.889,1659,3.889,1660,4.572,1661,3.889,1662,4.572,1663,4.572,1664,3.282,1665,3.282,1666,4.572,1667,4.572,1668,4.572,1669,4.572,1670,5.261,1671,4.572,1672,5.261,1673,4.572,1674,2.47,1675,4.572,1676,4.572,1677,4.572,1678,4.572,1679,3.282,1680,3.282,1681,3.282,1682,3.282,1683,3.282,1684,4.572,1685,3.282,1686,3.282,1687,3.282,1688,3.282,1689,3.282,1690,3.282,1691,3.282,1692,3.282,1693,3.282,1694,3.282]],["title/components/TaskCardComponent.html",[0,0.174,252,0.454]],["body/components/TaskCardComponent.html",[0,0.3,1,0.355,2,0.561,3,0.163,4,0.142,5,0.411,6,0.411,7,0.411,8,0.142,12,0.417,13,0.787,14,0.443,15,0.253,16,2.723,21,0.355,22,0.411,23,1.076,24,0.929,25,0.603,26,0.52,27,0.603,28,1.264,30,0.679,31,0.679,32,0.603,34,0.603,36,0.163,37,0.738,41,1.509,42,2.773,44,0.646,47,2.411,51,1.201,58,0.394,59,0.024,60,0.699,61,0.756,62,1.235,63,0.552,75,0.928,76,1.46,80,1.397,84,0.045,89,0.272,104,0.891,105,0.838,110,1.701,116,1.264,120,2.723,123,0.497,124,1.341,126,1.259,127,0.253,128,0.685,129,1.855,130,1.562,131,1.855,134,2.056,135,1.695,136,2.723,138,1.855,139,0.163,154,1.88,182,1.423,185,0.411,186,0.561,187,0.561,188,0.411,189,0.786,190,0.411,191,0.411,192,0.382,193,0.411,194,0.355,195,0.411,196,0.679,197,0.411,198,0.664,199,0.603,200,0.355,201,0.411,202,0.411,203,0.355,204,0.277,205,0.603,206,0.382,207,0.411,208,0.355,209,0.411,210,0.355,211,0.411,212,0.355,213,0.411,214,0.355,215,0.603,216,0.411,217,0.355,218,0.411,219,0.355,220,0.411,221,0.355,222,0.411,223,0.411,224,0.355,225,0.382,226,0.411,227,0.355,228,0.411,229,0.355,230,0.355,231,0.603,232,0.411,233,0.411,234,0.679,235,0.382,236,0.382,237,0.411,238,0.411,239,0.382,240,0.355,241,0.411,242,0.355,243,0.382,244,0.411,245,0.411,246,0.355,247,0.411,248,0.355,249,0.411,250,0.355,251,0.411,252,0.679,253,0.648,254,0.411,255,0.679,256,0.411,257,0.382,258,0.411,259,0.355,260,0.411,261,0.355,262,0.411,263,0.411,264,0.411,265,0.411,266,0.039,267,0.039,274,1.847,275,2.517,293,2.581,317,2.723,318,2.488,323,0.963,333,2.517,338,1.447,345,1.978,351,1.923,352,1.978,359,1.847,366,2.488,376,1.106,377,1.348,378,1.695,392,0.771,423,1.847,464,1.855,466,3.411,477,3.225,496,2.947,517,1.562,554,4.193,567,2.405,640,2.343,673,3.938,681,3.017,691,3.186,692,3.186,693,2.97,696,2.723,699,3.247,745,1.695,750,4.116,764,3.017,775,3.186,897,2.488,918,4.452,919,4.041,931,4.041,1245,2.056,1307,1.855,1390,2.056,1443,3.411,1531,3.411,1538,3.411,1582,2.723,1638,3.225,1661,3.411,1695,4.505,1696,4.505,1697,2.324,1698,4.009,1699,4.009,1700,4.75,1701,4.009,1702,5.233,1703,4.009,1704,4.75,1705,2.732,1706,2.732,1707,2.732,1708,2.732,1709,2.732,1710,2.732,1711,2.732,1712,2.732,1713,2.732,1714,2.732,1715,2.732,1716,4.009,1717,4.009,1718,4.009,1719,2.732,1720,4.009,1721,4.009,1722,4.009,1723,4.009,1724,4.009,1725,4.009,1726,4.009,1727,4.009,1728,4.009,1729,2.732,1730,2.732,1731,2.732,1732,2.732,1733,2.732,1734,2.732,1735,1.855,1736,2.324,1737,2.324,1738,2.732,1739,2.056,1740,2.324,1741,2.732,1742,2.732,1743,2.732,1744,4.009,1745,2.732,1746,2.732,1747,2.732,1748,2.732,1749,2.732,1750,2.732,1751,3.411,1752,4.009,1753,4.009,1754,3.411,1755,3.411,1756,3.411,1757,3.411]],["title/components/TaskCategoryComponent.html",[0,0.174,255,0.454]],["body/components/TaskCategoryComponent.html",[0,0.293,1,0.532,2,0.743,3,0.245,4,0.213,5,0.616,6,0.616,7,0.616,8,0.213,14,0.587,15,0.38,21,0.532,22,0.616,23,1.105,24,0.954,25,0.798,26,0.689,27,0.798,28,1.567,30,0.532,31,0.532,32,0.798,34,0.798,36,0.245,51,1.591,58,0.277,59,0.023,60,0.492,61,0.532,63,0.345,80,1.331,84,0.067,89,0.276,123,0.402,124,1.499,127,0.38,128,1.028,139,0.245,185,0.616,186,0.743,187,0.743,188,0.616,189,0.936,190,0.616,191,0.616,192,0.574,193,0.616,194,0.532,195,0.616,196,0.532,197,0.616,198,0.574,199,0.798,200,0.532,201,0.616,202,0.616,203,0.532,204,0.416,205,0.798,206,0.574,207,0.616,208,0.532,209,0.616,210,0.532,211,0.616,212,0.532,213,0.616,214,0.532,215,0.798,216,0.616,217,0.532,218,0.616,219,0.532,220,0.616,221,0.532,222,0.616,223,0.616,224,0.532,225,0.574,226,0.616,227,0.532,228,0.616,229,0.532,230,0.532,231,0.798,232,0.616,233,0.616,234,0.532,235,0.574,236,0.574,237,0.616,238,0.616,239,0.574,240,0.532,241,0.616,242,0.532,243,0.574,244,0.616,245,0.616,246,0.532,247,0.616,248,0.532,249,0.616,250,0.532,251,0.616,252,0.532,253,0.658,254,0.616,255,0.808,256,0.616,257,0.574,258,0.616,259,0.532,260,0.616,261,0.532,262,0.616,263,0.616,264,0.616,265,0.616,266,0.051,267,0.051,750,3.295,1637,5.723,1644,5.299,1645,4.518,1695,3.606,1696,3.606,1735,3.606,1758,3.489,1759,5.31,1760,5.31,1761,4.101]],["title/components/TaskViewComponent.html",[0,0.174,259,0.454]],["body/components/TaskViewComponent.html",[0,0.317,1,0.345,2,0.55,3,0.159,4,0.138,5,0.4,6,0.4,7,0.4,8,0.138,12,0.266,13,0.772,14,0.435,15,0.247,16,3.509,18,2.96,19,3.509,20,3.347,21,0.795,22,0.4,23,1.074,24,0.927,25,0.591,26,0.607,27,0.591,28,1.245,30,0.345,31,0.671,32,0.591,34,0.591,36,0.356,37,0.724,41,1.487,42,2.738,43,2.96,44,0.634,45,4.343,47,2.659,50,3.521,51,1.178,53,2.441,54,3.98,56,2.954,57,3.744,58,0.403,59,0.024,60,0.62,61,0.671,62,0.929,63,0.564,66,3.581,70,4.397,71,2.265,74,2.441,75,0.867,76,1.447,80,0.667,82,3.347,83,4.691,84,0.076,85,2.084,89,0.243,90,2.671,100,3.347,101,1.94,102,2.479,103,2.675,104,0.591,105,0.556,111,2.265,112,2.903,113,2.003,114,1.522,115,1.808,116,0.708,120,2.671,122,2.265,123,0.489,124,1.321,125,2.903,126,1.227,127,0.247,128,0.667,134,2.003,135,1.652,136,1.808,137,2.265,138,1.808,139,0.159,142,2.265,143,2.265,149,0.629,154,1.743,158,2.003,159,1.41,160,2.265,161,2.003,163,2.003,182,1.401,185,0.4,186,0.55,187,0.55,188,0.4,189,0.777,190,0.4,191,0.4,192,0.372,193,0.4,194,0.345,195,0.4,196,0.345,197,0.4,198,0.372,199,0.591,200,0.345,201,0.4,202,0.4,203,0.671,204,0.475,205,0.591,206,0.372,207,0.4,208,0.345,209,0.4,210,0.345,211,0.4,212,0.345,213,0.4,214,0.345,215,0.591,216,0.4,217,0.345,218,0.4,219,0.345,220,0.4,221,0.345,222,0.4,223,0.4,224,0.345,225,0.372,226,0.4,227,0.345,228,0.4,229,0.345,230,0.345,231,0.591,232,0.4,233,0.4,234,0.671,235,0.372,236,0.372,237,0.4,238,0.4,239,0.372,240,0.345,241,0.4,242,0.345,243,0.372,244,0.4,245,0.4,246,0.345,247,0.4,248,0.345,249,0.4,250,0.345,251,0.4,252,0.345,253,0.659,254,0.4,255,0.671,256,0.4,257,0.372,258,0.4,259,0.671,260,0.4,261,0.345,262,0.4,263,0.4,264,0.4,265,0.4,266,0.038,267,0.038,293,2.549,302,1.752,310,3.347,351,1.895,366,2.441,377,1.313,378,1.652,413,2.249,477,3.177,485,2.903,557,0.846,567,1.149,611,2.96,640,1.94,693,2.308,699,2.441,745,1.652,746,4.917,750,1.652,764,3.889,775,3.152,792,2.003,841,2.671,845,2.671,1045,2.96,1056,2.671,1057,2.249,1078,2.96,1143,3.347,1245,2.96,1307,1.808,1308,2.96,1390,2.003,1452,3.347,1482,3.421,1507,3.889,1582,3.509,1600,2.265,1638,2.671,1695,4.438,1696,1.808,1735,1.808,1736,2.265,1737,2.265,1739,2.003,1740,2.265,1751,3.347,1754,3.347,1755,3.347,1756,3.347,1757,3.347,1762,2.265,1763,5.772,1764,3.934,1765,3.934,1766,3.934,1767,3.934,1768,5.168,1769,3.934,1770,4.679,1771,3.934,1772,2.662,1773,2.662,1774,2.662,1775,2.662,1776,2.662,1777,2.662,1778,3.934,1779,2.662,1780,3.934,1781,2.662,1782,3.934,1783,3.934,1784,2.662,1785,3.934,1786,3.347,1787,2.662,1788,2.662,1789,3.934,1790,2.662,1791,2.662,1792,3.934,1793,2.662,1794,2.662,1795,2.662,1796,3.934,1797,3.934,1798,3.934,1799,3.934,1800,3.934]],["title/injectables/TasksService.html",[293,1.726,473,1.417]],["body/injectables/TasksService.html",[3,0.12,4,0.105,8,0.105,12,0.414,14,0.697,26,0.262,36,0.19,37,0.586,41,1.011,44,0.513,56,3.209,58,0.442,59,0.024,60,0.537,61,0.581,62,1.056,63,0.563,75,1.001,76,1.483,84,0.033,85,1.686,86,1.289,89,0.328,94,2.088,99,2.776,101,1.569,104,1.4,105,1.316,110,1.411,116,0.847,123,0.41,127,0.187,139,0.12,149,1.469,154,1.329,165,4.282,182,1.864,183,1.139,204,0.323,253,0.675,266,0.031,267,0.031,277,1.153,282,2.061,293,1.569,302,1.011,324,3.209,345,1.569,376,0.817,380,0.929,381,1.069,392,1.703,415,2.795,423,1.466,428,2.37,443,2.826,450,2.243,458,1.686,473,1.812,474,1.153,476,2.161,477,2.676,485,4.195,491,1.37,492,3.038,494,1.974,500,2.161,502,3.482,520,4.499,536,2.394,542,3.513,543,3.366,544,3.806,547,3.366,551,3.021,553,1.37,555,1.37,556,1.251,557,2.092,558,3.812,559,4.224,562,2.394,566,2.676,567,2.337,568,2.161,589,2.394,619,2.707,621,2.394,639,3.806,640,2.672,656,2.707,684,2.161,691,2.783,692,2.783,693,1.944,695,1.569,696,2.161,706,2.707,745,1.251,794,2.161,822,2.161,823,5.218,833,4.142,838,3.806,841,4.165,844,3.806,848,1.518,862,2.707,867,3.352,868,2.676,870,2.707,1122,4.402,1371,2.707,1482,3.635,1507,2.394,1546,1.716,1573,2.707,1579,2.707,1581,3.806,1582,3.812,1595,2.394,1638,4.44,1786,5.472,1801,1.716,1802,2.707,1803,2.707,1804,3.182,1805,3.94,1806,3.94,1807,3.182,1808,3.182,1809,3.182,1810,3.182,1811,3.182,1812,4.474,1813,3.182,1814,3.182,1815,3.806,1816,4.474,1817,4.474,1818,3.182,1819,3.182,1820,3.182,1821,3.182,1822,3.182,1823,2.017,1824,3.182,1825,2.017,1826,3.182,1827,3.182,1828,2.017,1829,3.182,1830,2.017,1831,3.182,1832,2.017,1833,5.174,1834,2.017,1835,3.182,1836,3.182,1837,3.182,1838,3.182,1839,2.017,1840,3.182,1841,2.017,1842,3.182,1843,2.017,1844,2.017,1845,2.017,1846,2.017,1847,2.707,1848,3.182,1849,3.182,1850,2.017,1851,3.182,1852,2.017,1853,3.182,1854,2.017,1855,4.474,1856,3.182,1857,2.017,1858,3.182,1859,2.017,1860,2.017,1861,2.017,1862,2.017,1863,1.716,1864,2.707,1865,2.017,1866,2.017,1867,2.017,1868,1.716,1869,3.182,1870,2.017,1871,3.182,1872,2.017,1873,2.017,1874,2.017,1875,2.017,1876,4.869,1877,2.017,1878,3.182,1879,2.017,1880,2.017,1881,2.017,1882,2.017,1883,2.017,1884,2.017,1885,2.017,1886,4.474,1887,3.94,1888,4.474,1889,3.182,1890,2.017,1891,2.017,1892,3.182,1893,2.017,1894,4.474,1895,2.017,1896,3.182,1897,2.017,1898,2.017,1899,2.017,1900,2.017,1901,2.017,1902,2.017,1903,3.182,1904,3.182]],["title/components/ToastNotificationComponent.html",[0,0.174,261,0.454]],["body/components/ToastNotificationComponent.html",[0,0.317,1,0.512,2,0.724,3,0.235,4,0.205,5,0.592,6,0.592,7,0.592,8,0.205,12,0.266,13,1.015,14,0.572,15,0.365,21,0.512,22,0.592,23,1.102,24,0.952,25,0.778,26,0.672,27,0.778,28,1.537,30,0.512,31,0.512,32,0.778,34,0.778,36,0.235,51,1.55,58,0.35,59,0.023,60,0.621,61,0.672,63,0.435,84,0.064,89,0.269,94,2.742,110,1.853,116,1.377,123,0.392,124,1.631,127,0.365,128,0.988,139,0.235,185,0.592,186,0.724,187,0.724,188,0.592,189,0.922,190,0.592,191,0.592,192,0.551,193,0.592,194,0.512,195,0.592,196,0.512,197,0.592,198,0.551,199,0.778,200,0.512,201,0.592,202,0.592,203,0.512,204,0.4,205,0.778,206,0.551,207,0.592,208,0.512,209,0.592,210,0.512,211,0.592,212,0.512,213,0.592,214,0.512,215,0.778,216,0.592,217,0.512,218,0.592,219,0.512,220,0.592,221,0.512,222,0.592,223,0.592,224,0.512,225,0.551,226,0.592,227,0.512,228,0.592,229,0.512,230,0.512,231,0.778,232,0.592,233,0.592,234,0.512,235,0.551,236,0.551,237,0.592,238,0.592,239,0.551,240,0.512,241,0.592,242,0.512,243,0.551,244,0.592,245,0.592,246,0.512,247,0.592,248,0.512,249,0.592,250,0.512,251,0.592,252,0.512,253,0.606,254,0.592,255,0.512,256,0.592,257,0.551,258,0.592,259,0.512,260,0.592,261,0.796,262,1.028,263,0.957,264,0.592,265,0.592,266,0.05,267,0.05,323,0.952,359,2.385,680,4.403,723,4.915,1392,4.348,1444,4.403,1566,5.42,1905,4.915,1906,3.354,1907,5.175,1908,5.175,1909,5.175,1910,3.942,1911,3.942,1912,5.175]],["title/injectables/UsersService.html",[42,1.854,473,1.417]],["body/injectables/UsersService.html",[3,0.18,4,0.157,8,0.157,12,0.392,14,0.476,15,0.63,24,0.869,26,0.782,36,0.18,37,0.793,40,3.664,41,1.369,42,2.282,44,0.694,58,0.419,59,0.024,60,0.517,61,0.559,62,1.368,63,0.543,75,0.996,76,0.756,80,1.818,84,0.049,86,1.744,89,0.301,94,2.282,99,2.672,104,1.288,105,1.211,110,2.076,116,1.458,123,0.47,127,0.279,133,2.269,139,0.18,149,1.294,174,3.331,177,3.664,178,4.547,182,1.805,183,1.542,204,0.665,240,0.711,266,0.042,267,0.042,277,1.724,282,2.361,302,1.369,323,0.924,324,1.724,333,3.361,345,2.124,351,2.615,376,1.221,377,1.487,380,1.389,381,1.598,392,1.636,415,2.755,423,1.984,428,3.361,443,1.984,447,4.123,473,2.219,474,1.724,476,2.924,485,3.117,491,2.048,492,3.721,494,2.672,500,2.924,502,3.4,512,2.924,520,3.721,523,2.924,532,4.535,536,4.123,542,2.924,543,3.241,551,3.596,553,2.048,555,2.048,556,1.871,557,1.596,558,2.048,566,2.924,567,1.301,568,2.048,589,3.241,621,3.241,678,2.462,775,3.991,821,3.664,822,2.924,848,2.269,868,2.924,897,2.672,1196,3.664,1595,4.123,1605,3.664,1739,2.269,1802,3.664,1803,3.664,1815,4.662,1847,3.664,1863,2.566,1864,2.566,1868,2.566,1913,2.566,1914,4.307,1915,4.307,1916,4.307,1917,5.48,1918,4.307,1919,4.307,1920,3.015,1921,4.307,1922,3.015,1923,3.015,1924,4.307,1925,4.307,1926,4.307,1927,4.307,1928,4.307,1929,3.015,1930,5.48,1931,4.307,1932,3.015,1933,4.307,1934,4.307,1935,3.015,1936,4.307,1937,4.307,1938,3.015,1939,3.015,1940,4.307,1941,3.015,1942,4.307,1943,3.015,1944,3.015,1945,3.015,1946,4.307,1947,3.015,1948,3.015,1949,3.015,1950,3.015,1951,3.015,1952,3.015]],["title/coverage.html",[1953,4.065]],["body/coverage.html",[0,0.364,1,0.492,8,0.197,9,3.229,10,3.229,11,3.229,15,0.352,21,0.492,30,0.492,31,0.492,42,2.011,58,0.256,59,0.024,62,0.896,84,0.103,130,2.169,135,2.355,154,2.038,192,0.531,194,0.492,196,0.492,198,0.706,200,0.492,203,0.492,204,0.512,206,0.531,208,0.492,210,0.492,212,0.492,214,0.492,217,0.492,219,0.492,221,0.492,224,0.492,227,0.492,229,0.492,234,0.492,236,0.531,239,0.531,242,0.492,246,0.492,248,0.492,250,0.492,252,0.492,253,0.352,255,0.492,257,0.531,259,0.492,261,0.492,266,0.049,267,0.049,268,3.229,282,1.444,284,2.577,293,1.872,351,1.537,380,2.325,407,3.229,408,3.798,412,2.577,463,3.229,464,2.577,465,3.798,473,2.548,475,3.229,496,2.355,585,3.229,601,2.856,602,3.229,636,3.229,746,2.856,748,3.229,750,3.518,766,3.229,771,3.229,791,3.229,792,2.856,793,3.798,809,3.229,872,3.229,877,3.229,914,3.229,942,3.798,943,2.577,944,3.229,959,2.856,960,3.229,968,3.229,1088,3.229,1089,3.229,1090,3.229,1223,4.294,1224,3.229,1225,3.229,1249,3.229,1254,3.229,1263,3.229,1264,2.856,1265,3.798,1277,3.229,1278,3.229,1306,3.229,1307,2.577,1316,3.229,1317,3.229,1318,3.229,1366,5.142,1373,3.229,1392,2.856,1442,3.229,1464,3.229,1465,2.856,1482,2.011,1483,3.229,1495,4.294,1496,3.229,1564,3.229,1636,3.798,1674,2.856,1695,4.104,1696,3.427,1697,3.229,1735,2.577,1758,3.229,1762,3.229,1801,3.229,1905,3.229,1906,3.229,1913,3.229,1953,3.229,1954,3.795,1955,3.795,1956,3.795,1957,3.795,1958,3.229,1959,3.229,1960,5.67,1961,6.043,1962,5.047,1963,3.795,1964,3.795,1965,3.795,1966,3.795,1967,3.795,1968,3.795,1969,6.788,1970,5.047,1971,3.795,1972,3.795,1973,5.047,1974,3.795,1975,3.795,1976,3.795,1977,5.047,1978,3.795,1979,3.795,1980,3.795,1981,3.795,1982,3.795,1983,5.047,1984,3.795,1985,6.043,1986,3.795,1987,5.047,1988,3.795,1989,3.795,1990,6.602,1991,6.292,1992,3.795,1993,3.795,1994,3.795,1995,3.795,1996,3.795,1997,3.795,1998,3.229,1999,3.229,2000,3.229,2001,3.795,2002,3.795,2003,3.795,2004,3.795,2005,3.795,2006,3.795,2007,3.795,2008,3.795,2009,3.795,2010,3.795,2011,3.795,2012,3.795,2013,3.795,2014,5.67,2015,5.047,2016,3.795,2017,3.795,2018,3.229,2019,3.229,2020,3.795,2021,3.795,2022,3.795,2023,3.795,2024,3.795,2025,3.795,2026,3.795,2027,3.795]],["title/dependencies.html",[2028,2.197,2029,3.58]],["body/dependencies.html",[59,0.023,127,0.502,128,1.359,132,3.362,266,0.061,267,0.061,372,2.339,376,2.195,2029,4.61,2030,5.419,2031,7.181,2032,5.419,2033,6.303,2034,6.303,2035,5.419,2036,5.419,2037,5.419,2038,5.419,2039,5.419,2040,5.419,2041,5.419,2042,5.419]],["title/miscellaneous/functions.html",[2043,1.983,2044,3.58]],["body/miscellaneous/functions.html",[36,0.331,59,0.021,60,0.665,75,0.96,266,0.062,267,0.062,321,3.384,323,1.175,439,2.937,496,3.439,1057,3.846,1636,4.171,1657,4.716,1658,4.716,1659,4.716,1674,5.062,2043,3.764,2044,4.716,2045,5.544]],["title/index.html",[36,0.174,2046,2.92,2047,2.92]],["body/index.html",[0,0.32,4,0.259,14,0.551,59,0.019,62,1.177,89,0.259,266,0.058,267,0.058,270,5.475,274,2.297,328,2.641,333,2.641,362,4.37,368,3.093,502,3.722,523,4.074,637,3.093,678,3.679,889,4.843,925,3.385,927,2.85,936,4.074,947,4.241,990,3.751,1041,4.241,1078,3.751,1121,4.241,1353,4.241,1540,4.241,2028,3.751,2048,4.985,2049,6.436,2050,4.241,2051,4.985,2052,6.833,2053,7.019,2054,4.985,2055,4.985,2056,4.985,2057,4.985,2058,4.985,2059,4.985,2060,4.985,2061,4.985,2062,4.985,2063,6.678,2064,4.985,2065,4.985,2066,4.985,2067,5.999,2068,5.999,2069,6.678,2070,4.985,2071,5.999,2072,4.985,2073,6.94,2074,4.985,2075,4.985,2076,4.985,2077,5.999,2078,4.985,2079,4.985,2080,4.985,2081,4.985,2082,4.985]],["title/modules.html",[2083,4.065]],["body/modules.html",[59,0.021,266,0.063,267,0.063,2083,4.877]],["title/overview.html",[637,2.964]],["body/overview.html",[2,0.795,59,0.021,266,0.063,267,0.063,406,3.248,474,3.248,637,3.526,2084,5.682,2085,6.477]],["title/properties.html",[37,0.774,2028,2.197]],["body/properties.html",[37,1.05,59,0.022,266,0.063,267,0.063,2050,4.856,2086,5.707]],["title/miscellaneous/variables.html",[1283,3.167,2043,1.983]],["body/miscellaneous/variables.html",[36,0.278,58,0.441,59,0.024,60,0.784,61,0.847,62,1.102,266,0.056,267,0.056,319,3.97,380,3.008,385,4.336,392,1.317,428,3.053,447,3.511,494,2.895,499,5.141,531,4.336,557,1.483,1283,3.511,1958,3.97,1959,4.902,1998,3.97,1999,4.902,2000,4.902,2018,3.97,2019,3.97,2043,3.169,2087,4.666,2088,4.666,2089,4.666,2090,4.666,2091,4.666,2092,4.666,2093,4.666,2094,4.666,2095,4.666,2096,4.666,2097,4.666,2098,4.666,2099,4.666,2100,4.666,2101,4.666,2102,4.666,2103,4.666,2104,4.666,2105,5.762,2106,5.762,2107,5.762,2108,5.762,2109,5.762,2110,5.762,2111,5.762,2112,5.762,2113,5.762,2114,5.762,2115,5.762,2116,5.762,2117,5.762,2118,5.762,2119,5.762,2120,5.762,2121,5.762,2122,5.762,2123,5.762,2124,5.762,2125,5.762,2126,5.762,2127,5.762,2128,5.762,2129,5.762,2130,5.762,2131,5.762,2132,5.762,2133,4.666,2134,4.666]]],"invertedIndex":[["",{"_index":59,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":154,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["0\">{{printdescription",{"_index":1752,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["0\">{{task.description",{"_index":1796,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["0.0.0",{"_index":2086,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1960,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["05cdd7",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":450,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/SlideComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["1.1.25",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["10/20",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":161,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/TaskViewComponent.html":{}}}],["125ms",{"_index":1448,"title":{},"body":{"components/SlideComponent.html":{}}}],["13/16",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["13/23",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["14/35",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["160",{"_index":733,"title":{},"body":{"components/BoardComponent.html":{}}}],["17.2.0",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["17.2.1",{"_index":2051,"title":{},"body":{"index.html":{}}}],["19/23",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":1222,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["22/35",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":788,"title":{},"body":{"classes/Contact.html":{}}}],["26",{"_index":1221,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["26/40",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["26123",{"_index":1105,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["28",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["2aec8b",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2afdc3",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2fb287",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["309cf4",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":2084,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["33/55",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["33da81",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1744,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["36",{"_index":1746,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["36b3f0",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["38b",{"_index":1104,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["4/4",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["42f9b9",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2085,"title":{},"body":{"overview.html":{}}}],["5/13",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["5/15",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["58ac47",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1433,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["6/10",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["6dd44a",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["7/18",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["768",{"_index":757,"title":{},"body":{"components/BoardComponent.html":{}}}],["8/10",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["8/16",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["8/23",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1241,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["809283",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["8ea906",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/13",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUser.html":{}}}],["a.due.localecompare(b.due",{"_index":1616,"title":{},"body":{"components/SummaryComponent.html":{}}}],["a8ee51",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a9ddc7",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aborted",{"_index":1528,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["acceptance",{"_index":1107,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["accessing",{"_index":1109,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["accordance",{"_index":1151,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["according",{"_index":1363,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accuracy",{"_index":1029,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["acknowledge",{"_index":1111,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["action",{"_index":1073,"title":{},"body":{"components/HelpComponent.html":{}}}],["activatedroute",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["active",{"_index":774,"title":{},"body":{"classes/Contact.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{}}}],["activities",{"_index":1156,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["actual",{"_index":726,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["actual_component",{"_index":265,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["add",{"_index":14,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["add/edit",{"_index":106,"title":{},"body":{"components/AddContactComponent.html":{}}}],["add_task",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["addcontact",{"_index":810,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontact(contact",{"_index":817,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontactcomponent",{"_index":1,"title":{"components/AddContactComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["addcontactlocally",{"_index":811,"title":{},"body":{"injectables/ContactsService.html":{}}}],["addcontactlocally(contact",{"_index":826,"title":{},"body":{"injectables/ContactsService.html":{}}}],["added",{"_index":94,"title":{},"body":{"components/AddContactComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["adding",{"_index":696,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["additional",{"_index":410,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"components/HeadlineSloganComponent.html":{}}}],["address",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"components/EmailComponent.html":{},"injectables/UsersService.html":{}}}],["addsubtask",{"_index":1807,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtask(subtask",{"_index":1822,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtaskstotasks",{"_index":1808,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtaskstotasks(subtasksdata",{"_index":1824,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtasktotask",{"_index":1809,"title":{},"body":{"injectables/TasksService.html":{}}}],["addsubtasktotask(subtask",{"_index":1827,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtask",{"_index":1810,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtask(task",{"_index":1829,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtaskcomponent",{"_index":192,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["addtasklocally",{"_index":1811,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtasklocally(task",{"_index":1831,"title":{},"body":{"injectables/TasksService.html":{}}}],["addtostatus",{"_index":653,"title":{},"body":{"components/BoardComponent.html":{}}}],["addtostatus(status",{"_index":690,"title":{},"body":{"components/BoardComponent.html":{}}}],["adress",{"_index":175,"title":{},"body":{"components/AddContactComponent.html":{}}}],["advised",{"_index":1193,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["affiliates",{"_index":1203,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["afterwards",{"_index":1372,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["against",{"_index":1209,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["agents",{"_index":1207,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["agree",{"_index":1112,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["akademie",{"_index":993,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["allows",{"_index":1765,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["already",{"_index":177,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/UsersService.html":{}}}],["amendments",{"_index":1117,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["and/or",{"_index":1217,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["angular",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":128,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":132,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1234,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["animation",{"_index":74,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["another",{"_index":92,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["app.component.html",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["app/main",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["app/other",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{}}}],["appcomponent",{"_index":194,"title":{"components/AppComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1152,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["application",{"_index":2057,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1054,"title":{},"body":{"components/HelpComponent.html":{}}}],["appuser",{"_index":351,"title":{"classes/AppUser.html":{}},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["appuser(resp",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["appuser(udata",{"_index":1944,"title":{},"body":{"injectables/UsersService.html":{}}}],["appuser(userdata",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["april",{"_index":1624,"title":{},"body":{"components/SummaryComponent.html":{}}}],["arguments",{"_index":666,"title":{},"body":{"components/BoardComponent.html":{}}}],["arising",{"_index":1195,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["array",{"_index":1582,"title":{},"body":{"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["array).foreach(cdata",{"_index":852,"title":{},"body":{"injectables/ContactsService.html":{}}}],["array).foreach(tdata",{"_index":1873,"title":{},"body":{"injectables/TasksService.html":{}}}],["array).foreach(udata",{"_index":1941,"title":{},"body":{"injectables/UsersService.html":{}}}],["arrow",{"_index":197,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["arrowbackbtncomponent",{"_index":196,"title":{"components/ArrowBackBtnComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["artifacts",{"_index":2064,"title":{},"body":{"index.html":{}}}],["ascontact",{"_index":416,"title":{},"body":{"classes/AppUser.html":{}}}],["aside",{"_index":1143,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{}}}],["aspect",{"_index":1131,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["aspects",{"_index":1030,"title":{},"body":{"components/HelpComponent.html":{}}}],["assigned",{"_index":1045,"title":{},"body":{"components/HelpComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{}}}],["assigned_to",{"_index":1687,"title":{},"body":{"classes/Task.html":{}}}],["assignees",{"_index":1058,"title":{},"body":{"components/HelpComponent.html":{}}}],["assignment",{"_index":1757,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["associated",{"_index":1145,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["associates",{"_index":1851,"title":{},"body":{"injectables/TasksService.html":{}}}],["async",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["attribute",{"_index":613,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/ResetPasswordComponent.html":{}}}],["august",{"_index":1626,"title":{},"body":{"components/SummaryComponent.html":{}}}],["auth",{"_index":447,"title":{},"body":{"classes/AppUser.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":848,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["auth_token_headers",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_token_interceptor",{"_index":2000,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["authentication",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/GreetingComponent.html":{}}}],["autherror",{"_index":1323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["authorization",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":282,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice.currentuser",{"_index":1594,"title":{},"body":{"components/SummaryComponent.html":{}}}],["authservice.user",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["authsub",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["authuser",{"_index":412,"title":{"classes/AuthUser.html":{}},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"coverage.html":{}}}],["authuser(obj.user",{"_index":452,"title":{},"body":{"classes/AppUser.html":{}}}],["automatic",{"_index":603,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["automatically",{"_index":2058,"title":{},"body":{"index.html":{}}}],["autoscrollservice",{"_index":601,"title":{"injectables/AutoscrollService.html":{}},"body":{"injectables/AutoscrollService.html":{},"coverage.html":{}}}],["availability",{"_index":1027,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["available",{"_index":1930,"title":{},"body":{"injectables/UsersService.html":{}}}],["await",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1615,"title":{},"body":{"components/SummaryComponent.html":{}}}],["b579d2",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b663f3",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["back",{"_index":198,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["backend",{"_index":443,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["background",{"_index":1282,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge",{"_index":795,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["badge'},{'name",{"_index":233,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["badge.component",{"_index":131,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["badge.component.html",{"_index":1286,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.scss",{"_index":1287,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts",{"_index":1278,"title":{},"body":{"components/PersonBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:17",{"_index":1294,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:18",{"_index":1291,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1293,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:20",{"_index":1292,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:21",{"_index":1296,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge.component.ts:28",{"_index":1297,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["badge/person",{"_index":130,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{}}}],["badge_colors",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base_url",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":982,"title":{},"body":{"components/HelpComponent.html":{}}}],["before",{"_index":1836,"title":{},"body":{"injectables/TasksService.html":{}}}],["behavior",{"_index":626,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["being",{"_index":894,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["below",{"_index":680,"title":{},"body":{"components/BoardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["benefit",{"_index":981,"title":{},"body":{"components/HelpComponent.html":{}}}],["bengt",{"_index":1094,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["berg",{"_index":1103,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["best",{"_index":1022,"title":{},"body":{"components/HelpComponent.html":{}}}],["better",{"_index":166,"title":{},"body":{"components/AddContactComponent.html":{}}}],["between",{"_index":1245,"title":{},"body":{"components/LogInPageComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["bf59f2",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billboard",{"_index":997,"title":{},"body":{"components/HelpComponent.html":{}}}],["blue",{"_index":467,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/HeadlineSloganComponent.html":{}}}],["board",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["board'},{'name",{"_index":201,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["board.component.html",{"_index":643,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.scss",{"_index":644,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":200,"title":{"components/BoardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["body",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["boolean",{"_index":116,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["bootcamp",{"_index":991,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["both",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["bottom",{"_index":616,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["breach",{"_index":1218,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["bright",{"_index":769,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["browser",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":470,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn'},{'name",{"_index":199,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["btn.component",{"_index":136,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["btn.component.html",{"_index":471,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn.component.scss",{"_index":472,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{}}}],["btn.component.ts",{"_index":465,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{},"coverage.html":{}}}],["btn.component.ts:16",{"_index":770,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["btn/arrow",{"_index":464,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{}}}],["btn/close",{"_index":135,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["build",{"_index":2063,"title":{},"body":{"index.html":{}}}],["built",{"_index":984,"title":{},"body":{"components/HelpComponent.html":{}}}],["bull;{{task.name",{"_index":1561,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["business",{"_index":1019,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["button",{"_index":78,"title":{},"body":{"components/AddContactComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/CloseBtnComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{}}}],["c.id",{"_index":865,"title":{},"body":{"injectables/ContactsService.html":{}}}],["c27177",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c7acc0",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/TaskViewComponent.html":{}}}],["calls",{"_index":1537,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["cancel",{"_index":45,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["canceloverlay",{"_index":54,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["cancels",{"_index":1516,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["capabilities",{"_index":2081,"title":{},"body":{"index.html":{}}}],["capitalized",{"_index":1298,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["capitalized.substring(0,3",{"_index":1303,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["card",{"_index":699,"title":{},"body":{"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"components/HelpComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["card'},{'name",{"_index":254,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["card.component.html",{"_index":1698,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.scss",{"_index":1699,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts",{"_index":1697,"title":{},"body":{"components/TaskCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:26",{"_index":1733,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:27",{"_index":1706,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:28",{"_index":1731,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:29",{"_index":1705,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:30",{"_index":1734,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:31",{"_index":1732,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:38",{"_index":1715,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:50",{"_index":1719,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:71",{"_index":1710,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:81",{"_index":1707,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:90",{"_index":1730,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card.component.ts:95",{"_index":1729,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["card/task",{"_index":1696,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["cards",{"_index":1047,"title":{},"body":{"components/HelpComponent.html":{}}}],["case",{"_index":91,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{}}}],["case('done",{"_index":1476,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case('to",{"_index":1475,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case('urgent",{"_index":1477,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'done",{"_index":1480,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'to",{"_index":1479,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["case(\\'urgent",{"_index":1481,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["catch((err",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["catch(e",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["category",{"_index":1637,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["category'},{'name",{"_index":256,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["category.component",{"_index":1736,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["category.component.html",{"_index":1759,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category.component.scss",{"_index":1760,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category.component.ts",{"_index":1758,"title":{},"body":{"components/TaskCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":1761,"title":{},"body":{"components/TaskCategoryComponent.html":{}}}],["category/task",{"_index":1735,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["caution",{"_index":1072,"title":{},"body":{"components/HelpComponent.html":{}}}],["certain",{"_index":681,"title":{},"body":{"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskCardComponent.html":{}}}],["cesura/break",{"_index":1712,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["change",{"_index":1121,"title":{},"body":{"components/LegalNoticeComponent.html":{},"index.html":{}}}],["char",{"_index":1714,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["character",{"_index":1531,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["characters",{"_index":1434,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["check",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["checking",{"_index":1780,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["checkpasswordconfirmation",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["child",{"_index":700,"title":{},"body":{"components/BoardComponent.html":{}}}],["choice",{"_index":2076,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1210,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["class",{"_index":84,"title":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":406,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"overview.html":{}}}],["clear",{"_index":1835,"title":{},"body":{"injectables/TasksService.html":{}}}],["clearsubtasks",{"_index":1812,"title":{},"body":{"injectables/TasksService.html":{}}}],["cli",{"_index":2049,"title":{},"body":{"index.html":{}}}],["click",{"_index":683,"title":{},"body":{"components/BoardComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/SubtaskComponent.html":{}}}],["clicked",{"_index":1538,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["clicks",{"_index":1717,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["close",{"_index":202,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["closebtncomponent",{"_index":31,"title":{"components/CloseBtnComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["closedropdown",{"_index":1704,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["closeheaderdropdown",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["closes",{"_index":703,"title":{},"body":{"components/BoardComponent.html":{}}}],["closest",{"_index":1584,"title":{},"body":{"components/SummaryComponent.html":{}}}],["closetaskstatusdropdown",{"_index":654,"title":{},"body":{"components/BoardComponent.html":{}}}],["closetaskview",{"_index":655,"title":{},"body":{"components/BoardComponent.html":{}}}],["closing",{"_index":1443,"title":{},"body":{"components/SlideComponent.html":{},"components/TaskCardComponent.html":{}}}],["closingtaskstatusdropdown",{"_index":645,"title":{},"body":{"components/BoardComponent.html":{}}}],["code",{"_index":2060,"title":{},"body":{"index.html":{}}}],["collaborate",{"_index":1040,"title":{},"body":{"components/HelpComponent.html":{}}}],["color",{"_index":432,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["color_id",{"_index":414,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["column",{"_index":1567,"title":{},"body":{"components/SummaryComponent.html":{}}}],["command",{"_index":2077,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":28,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["communicate",{"_index":828,"title":{},"body":{"injectables/ContactsService.html":{}}}],["communicating",{"_index":1833,"title":{},"body":{"injectables/TasksService.html":{}}}],["communication",{"_index":1804,"title":{},"body":{"injectables/TasksService.html":{}}}],["compared",{"_index":411,"title":{},"body":{"classes/AppUser.html":{}}}],["complete",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["completed",{"_index":1068,"title":{},"body":{"components/HelpComponent.html":{}}}],["completely",{"_index":1778,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["compodoc/compodoc",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/overlay",{"_index":704,"title":{},"body":{"components/BoardComponent.html":{}}}],["component_template",{"_index":190,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1114,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["confirm",{"_index":1506,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["confirm(enter",{"_index":1517,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["confirmation",{"_index":1343,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirms",{"_index":1519,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["connection",{"_index":1196,"title":{},"body":{"components/LegalNoticeComponent.html":{},"injectables/UsersService.html":{}}}],["consequential",{"_index":1184,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["consider",{"_index":899,"title":{},"body":{"components/GreetingComponent.html":{}}}],["considered",{"_index":1933,"title":{},"body":{"injectables/UsersService.html":{}}}],["consistent",{"_index":1026,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["console.error('task",{"_index":867,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["console.error(e",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(resp",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["const",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/PersonBadgeComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1257,"title":{},"body":{"components/MenuComponent.html":{}}}],["constructor",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(http",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["constructor(obj",{"_index":420,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["constructor(private",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{}}}],["constructor(router",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{}}}],["contact",{"_index":15,"title":{"classes/Contact.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["contact'},{'name",{"_index":191,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["contact(cdata",{"_index":854,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact(this.inputcontact.tojson",{"_index":146,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.html",{"_index":33,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.scss",{"_index":35,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts",{"_index":11,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:22",{"_index":65,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:23",{"_index":64,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:24",{"_index":118,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:25",{"_index":67,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:26",{"_index":68,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:27",{"_index":69,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:28",{"_index":119,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:29",{"_index":117,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:30",{"_index":121,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:50",{"_index":97,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:64",{"_index":107,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:72",{"_index":72,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.component.ts:82",{"_index":77,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contact.email",{"_index":1951,"title":{},"body":{"injectables/UsersService.html":{}}}],["contact.id",{"_index":860,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact.tojson",{"_index":858,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contact/add",{"_index":10,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["contactform.submitted",{"_index":169,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contactlistitemcomponent",{"_index":203,"title":{"components/ContactListItemComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["contacts",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{}}}],["contacts'},{'name",{"_index":207,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["contacts/contact",{"_index":1788,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["contactsarrayindex",{"_index":863,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contactscomponent",{"_index":206,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["contactsservice",{"_index":284,"title":{"injectables/ContactsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ContactsService.html":{},"coverage.html":{}}}],["contactsubmission",{"_index":55,"title":{},"body":{"components/AddContactComponent.html":{}}}],["contain",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["container",{"_index":1355,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containerref",{"_index":1354,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containerref.nativeelement.getelementsbytagname('input')[0",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["containing",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{}}}],["contains",{"_index":413,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/TaskViewComponent.html":{}}}],["contexts",{"_index":1285,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["converts",{"_index":437,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["copyrighted",{"_index":1146,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["corresponding",{"_index":101,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["corresponds",{"_index":881,"title":{},"body":{"components/GreetingComponent.html":{}}}],["cost",{"_index":1213,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["coverage",{"_index":1953,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":183,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"classes/Contact.html":{},"components/SubtaskComponent.html":{}}}],["creating",{"_index":1039,"title":{},"body":{"components/HelpComponent.html":{}}}],["current",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["currenthour",{"_index":910,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currently",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["currentuser",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["currentuser.user.email.length",{"_index":907,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currentuser.user.username",{"_index":909,"title":{},"body":{"components/GreetingComponent.html":{}}}],["currentuser?.id",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["currentusername",{"_index":885,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["custom",{"_index":1358,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["cut",{"_index":1725,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["d1d1d1",{"_index":790,"title":{},"body":{"classes/Contact.html":{},"components/PersonBadgeComponent.html":{}}}],["d2fa60",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damage",{"_index":1212,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["damages",{"_index":1186,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["daniel",{"_index":1096,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["data",{"_index":86,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"components/LegalNoticeComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":1786,"title":{},"body":{"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["datainitafterauthcomplete",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":1057,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"miscellaneous/functions.html":{}}}],["date().gethours",{"_index":911,"title":{},"body":{"components/GreetingComponent.html":{}}}],["date(due",{"_index":1619,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.getdate",{"_index":1632,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.getfullyear",{"_index":1634,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.now",{"_index":1652,"title":{},"body":{"classes/Task.html":{}}}],["day",{"_index":882,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["dc3df5",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":1659,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["dd/mm/yyyy",{"_index":1660,"title":{},"body":{"classes/Task.html":{}}}],["dddddd",{"_index":800,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["deadline",{"_index":1470,"title":{},"body":{"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{}}}],["december",{"_index":1630,"title":{},"body":{"components/SummaryComponent.html":{}}}],["decorators",{"_index":711,"title":{},"body":{"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["dedicated",{"_index":986,"title":{},"body":{"components/HelpComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1200,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["defined",{"_index":63,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["deletecontact",{"_index":46,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{}}}],["deletecontact(id",{"_index":830,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deletecontactlocally",{"_index":812,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deletecontactlocally(id",{"_index":834,"title":{},"body":{"injectables/ContactsService.html":{}}}],["deleted",{"_index":833,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["deletelocalsessiontoken",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["deletes",{"_index":1523,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["deletesubtask",{"_index":1813,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletesubtask(id",{"_index":1838,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetask",{"_index":1507,"title":{},"body":{"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["deletetask(id",{"_index":1840,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetasklocally",{"_index":1814,"title":{},"body":{"injectables/TasksService.html":{}}}],["deletetasklocally(id",{"_index":1842,"title":{},"body":{"injectables/TasksService.html":{}}}],["deleting",{"_index":1067,"title":{},"body":{"components/HelpComponent.html":{}}}],["demand",{"_index":1211,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["dependencies",{"_index":2029,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depending",{"_index":1269,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["depends",{"_index":669,"title":{},"body":{"components/BoardComponent.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["descriptions",{"_index":1724,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["design",{"_index":1132,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["designateasyou",{"_index":798,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["designed",{"_index":983,"title":{},"body":{"components/HelpComponent.html":{}}}],["desired",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"components/SummaryComponent.html":{}}}],["desktop",{"_index":1295,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["destroyed",{"_index":1534,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["detail",{"_index":440,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["detailed",{"_index":1764,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["details",{"_index":1055,"title":{},"body":{"components/HelpComponent.html":{}}}],["dev",{"_index":2055,"title":{},"body":{"index.html":{}}}],["developed",{"_index":1125,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["developer",{"_index":992,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["development",{"_index":990,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"index.html":{}}}],["devices",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["different",{"_index":1271,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["direct",{"_index":1180,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["directive",{"_index":188,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["directives",{"_index":264,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2062,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1539,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["directors",{"_index":1206,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["directory",{"_index":947,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"index.html":{}}}],["disable",{"_index":88,"title":{},"body":{"components/AddContactComponent.html":{}}}],["disabled",{"_index":79,"title":{},"body":{"components/AddContactComponent.html":{}}}],["disables",{"_index":1240,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["disappearing",{"_index":1451,"title":{},"body":{"components/SlideComponent.html":{}}}],["disclaimer",{"_index":1164,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["displaydropdown",{"_index":919,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["displayed",{"_index":673,"title":{},"body":{"components/BoardComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["displaying",{"_index":731,"title":{},"body":{"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["displays",{"_index":13,"title":{},"body":{"components/AddContactComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["dist",{"_index":2066,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1137,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["document.activeelement",{"_index":1555,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["document.getelementbyid('pagewrapper",{"_index":633,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["document.getelementbyid(elementid",{"_index":624,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["documentation",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["don\\'t",{"_index":1438,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["don\\\\'t",{"_index":1440,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["done",{"_index":693,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["done').length",{"_index":1748,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["dots",{"_index":1727,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["drag",{"_index":620,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["dragcardheight",{"_index":646,"title":{},"body":{"components/BoardComponent.html":{}}}],["dragged",{"_index":718,"title":{},"body":{"components/BoardComponent.html":{}}}],["dragging",{"_index":1065,"title":{},"body":{"components/HelpComponent.html":{}}}],["dragstartstatus",{"_index":647,"title":{},"body":{"components/BoardComponent.html":{}}}],["dropdown",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["dropping",{"_index":1066,"title":{},"body":{"components/HelpComponent.html":{}}}],["due",{"_index":1056,"title":{},"body":{"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{}}}],["due.length",{"_index":1618,"title":{},"body":{"components/SummaryComponent.html":{}}}],["during",{"_index":619,"title":{},"body":{"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{}}}],["dynamic",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["e07d47",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":2074,"title":{},"body":{"index.html":{}}}],["e98366",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1342,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["edit",{"_index":16,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["editable",{"_index":1499,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["editing",{"_index":90,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["editinputref",{"_index":1503,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["edits",{"_index":1525,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["edittask",{"_index":1768,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["editthistask",{"_index":1770,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["educational",{"_index":1015,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["effective",{"_index":999,"title":{},"body":{"components/HelpComponent.html":{}}}],["effectively",{"_index":1075,"title":{},"body":{"components/HelpComponent.html":{}}}],["efficiency",{"_index":1004,"title":{},"body":{"components/HelpComponent.html":{}}}],["element",{"_index":187,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["element.scrollheight",{"_index":631,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["element.scrollintoview",{"_index":625,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["element.scrolltop",{"_index":630,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["elementid",{"_index":612,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["elementref",{"_index":1351,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["email",{"_index":174,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"injectables/UsersService.html":{}}}],["email'},{'name",{"_index":209,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["email.component.html",{"_index":874,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":875,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.valid",{"_index":173,"title":{},"body":{"components/AddContactComponent.html":{}}}],["email/email.component",{"_index":807,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["email/phone",{"_index":773,"title":{},"body":{"classes/Contact.html":{}}}],["emailcomponent",{"_index":208,"title":{"components/EmailComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["emailtaken",{"_index":38,"title":{},"body":{"components/AddContactComponent.html":{}}}],["emit",{"_index":115,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["emits",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["emitting",{"_index":100,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["employees",{"_index":1208,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["empty",{"_index":725,"title":{},"body":{"components/BoardComponent.html":{},"classes/Task.html":{}}}],["end",{"_index":2073,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":1083,"title":{},"body":{"components/HelpComponent.html":{}}}],["ensure",{"_index":1021,"title":{},"body":{"components/HelpComponent.html":{}}}],["enter",{"_index":1435,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["enter.stoppropagation",{"_index":1556,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["environment",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.badge_colors[this.color_id",{"_index":460,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["environment.base_url",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["environments/environment.development",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1059,"title":{},"body":{"components/HelpComponent.html":{}}}],["even",{"_index":1192,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["event",{"_index":102,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["eventemitter",{"_index":66,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["events",{"_index":621,"title":{},"body":{"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["eventsource(environment.base_url",{"_index":1864,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":1454,"title":{},"body":{"components/SlideComponent.html":{}}}],["execute",{"_index":2071,"title":{},"body":{"index.html":{}}}],["executed",{"_index":1855,"title":{},"body":{"injectables/TasksService.html":{}}}],["exemplary",{"_index":1185,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["exercise",{"_index":1016,"title":{},"body":{"components/HelpComponent.html":{}}}],["exist",{"_index":1662,"title":{},"body":{"classes/Task.html":{}}}],["existing",{"_index":842,"title":{},"body":{"injectables/ContactsService.html":{}}}],["exists",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":1024,"title":{},"body":{"components/HelpComponent.html":{}}}],["exploring",{"_index":1034,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["export",{"_index":139,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["express",{"_index":1171,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["extend",{"_index":82,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["extended",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["extending",{"_index":1447,"title":{},"body":{"components/SlideComponent.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["extensive",{"_index":1018,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["false",{"_index":110,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["fddc2f",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fe68c4",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["february",{"_index":1622,"title":{},"body":{"components/SummaryComponent.html":{}}}],["feedback",{"_index":692,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["feel",{"_index":1080,"title":{},"body":{"components/HelpComponent.html":{}}}],["fees",{"_index":1215,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["fetched",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetches",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["field",{"_index":1268,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":2059,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1043,"title":{},"body":{"components/HelpComponent.html":{}}}],["filter",{"_index":642,"title":{},"body":{"components/BoardComponent.html":{}}}],["filtered",{"_index":1581,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["find",{"_index":1036,"title":{},"body":{"components/HelpComponent.html":{}}}],["first",{"_index":2079,"title":{},"body":{"index.html":{}}}],["fit",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["fitness",{"_index":1175,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["flow",{"_index":1005,"title":{},"body":{"components/HelpComponent.html":{}}}],["focus",{"_index":1347,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuses",{"_index":1530,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["focuslastcharacter",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuslastcharacter(input",{"_index":1344,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["focuslastposition",{"_index":1508,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["following",{"_index":1113,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["for(assignment",{"_index":1755,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["form",{"_index":17,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["form'},{'name",{"_index":241,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["form.component",{"_index":1250,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["form.component.ts",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["form.form.valid",{"_index":151,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.submitted",{"_index":150,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form/overlay",{"_index":73,"title":{},"body":{"components/AddContactComponent.html":{}}}],["form/registration",{"_index":1249,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["format",{"_index":439,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["formatted",{"_index":441,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["formclick",{"_index":1509,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["formdata",{"_index":39,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formmode",{"_index":1235,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["formsmodule",{"_index":29,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["formsubscription",{"_index":1504,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["formula",{"_index":880,"title":{},"body":{"components/GreetingComponent.html":{}}}],["found",{"_index":868,"title":{},"body":{"injectables/ContactsService.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["four",{"_index":1037,"title":{},"body":{"components/HelpComponent.html":{}}}],["frederic",{"_index":1098,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["free",{"_index":1081,"title":{},"body":{"components/HelpComponent.html":{}}}],["frontend",{"_index":590,"title":{},"body":{"classes/AuthUser.html":{}}}],["früchtenicht",{"_index":1095,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["full",{"_index":708,"title":{},"body":{"components/BoardComponent.html":{}}}],["function",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functional",{"_index":946,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["functions",{"_index":2044,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functon",{"_index":702,"title":{},"body":{"components/BoardComponent.html":{}}}],["further",{"_index":2082,"title":{},"body":{"index.html":{}}}],["general",{"_index":953,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{}}}],["generate",{"_index":889,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["generated",{"_index":2048,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1802,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["getcolor",{"_index":417,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["getcurrentdate",{"_index":1674,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentroute",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["getcurrentuid",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["getduetotext",{"_index":1640,"title":{},"body":{"classes/Task.html":{}}}],["getfieldcontainerrefinput",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getfieldcontainerrefinput(containerref",{"_index":1350,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getfilteredtasks",{"_index":1573,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["getfilteredtasks(status",{"_index":1579,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["getgreeting",{"_index":886,"title":{},"body":{"components/GreetingComponent.html":{}}}],["getinitials",{"_index":1288,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["getlocalrememberme",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmosturgent",{"_index":1574,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getsubtasksdonenumber",{"_index":1700,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["getsubtasksdonenumber()}}/{{task.subtasks.length",{"_index":1753,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["gettaskbyid",{"_index":656,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(id",{"_index":706,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["gettasknumber",{"_index":1575,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getting",{"_index":2046,"title":{"index.html":{}},"body":{}}],["geturgent",{"_index":1576,"title":{},"body":{"components/SummaryComponent.html":{}}}],["getuserbyappid",{"_index":1914,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyappid(id",{"_index":1919,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyauthid",{"_index":1915,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyauthid(id",{"_index":1921,"title":{},"body":{"injectables/UsersService.html":{}}}],["gmbh",{"_index":1127,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["go",{"_index":1041,"title":{},"body":{"components/HelpComponent.html":{},"index.html":{}}}],["goodwill",{"_index":1189,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gotoboard",{"_index":1469,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["greeting",{"_index":879,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["greeting'},{'name",{"_index":211,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["greeting.component.html",{"_index":883,"title":{},"body":{"components/GreetingComponent.html":{}}}],["greeting.component.scss",{"_index":884,"title":{},"body":{"components/GreetingComponent.html":{}}}],["greeting/greeting.component",{"_index":1602,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcomponent",{"_index":210,"title":{"components/GreetingComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["group",{"_index":985,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["guarantee",{"_index":1025,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["guest",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["guestlogin",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["guestsub",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["guide",{"_index":977,"title":{},"body":{"components/HelpComponent.html":{}}}],["guidelines",{"_index":1116,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["handle",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["handled",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["handles",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["harass",{"_index":1157,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["harm",{"_index":1158,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["harmless",{"_index":1202,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["hasuserincontacts",{"_index":418,"title":{},"body":{"classes/AppUser.html":{}}}],["hasuserincontacts(appuser",{"_index":434,"title":{},"body":{"classes/AppUser.html":{}}}],["header",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":213,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["header.component.html",{"_index":916,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":917,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":212,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headline",{"_index":215,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["headlineothercomponent",{"_index":214,"title":{"components/HeadlineOtherComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["headlineslogancomponent",{"_index":217,"title":{"components/HeadlineSloganComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["height",{"_index":715,"title":{},"body":{"components/BoardComponent.html":{}}}],["help",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"index.html":{}}}],["help'},{'name",{"_index":220,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["help.component.html",{"_index":971,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.scss",{"_index":972,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpcomponent",{"_index":219,"title":{"components/HelpComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["here",{"_index":978,"title":{},"body":{"components/HelpComponent.html":{}}}],["hex",{"_index":433,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["hexadecimal",{"_index":431,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["hide",{"_index":710,"title":{},"body":{"components/BoardComponent.html":{}}}],["hidetaskform",{"_index":657,"title":{},"body":{"components/BoardComponent.html":{}}}],["highly",{"_index":998,"title":{},"body":{"components/HelpComponent.html":{}}}],["hold",{"_index":1201,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["hook",{"_index":1239,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["hostlistener",{"_index":744,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlistener('window:resize",{"_index":712,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlisteners",{"_index":664,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":186,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["htmlinputelement",{"_index":1345,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["http",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2056,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["httpheaders().set('authorization",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":1309,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["icon",{"_index":1266,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon'},{'name",{"_index":231,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["icon.component",{"_index":1390,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["icon.component.html",{"_index":1273,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon.component.scss",{"_index":1274,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["icon.component.ts",{"_index":1265,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:15",{"_index":1314,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["icon.component.ts:17",{"_index":1276,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["icon/password",{"_index":1264,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["icon/prio",{"_index":1307,"title":{},"body":{"components/PrioIconComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["icons",{"_index":1272,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["id",{"_index":415,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1373,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["if(!editing",{"_index":1562,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["if(!isuser",{"_index":176,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((email.touched",{"_index":172,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((name.touched",{"_index":168,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if((password.touched",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if((phone.touched",{"_index":179,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if(assignment",{"_index":1798,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["if(autherror.includes('wrong",{"_index":1439,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(autherror.includes(\\'wrong",{"_index":1441,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(currenthour",{"_index":912,"title":{},"body":{"components/GreetingComponent.html":{}}}],["if(currentuser",{"_index":939,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(currentusername",{"_index":913,"title":{},"body":{"components/GreetingComponent.html":{}}}],["if(designateasyou",{"_index":808,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["if(editing",{"_index":1560,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["if(formdata.password.length",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(formdata.passwordconfirmation.length",{"_index":1436,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(formmode",{"_index":1253,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["if(message",{"_index":1912,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["if(mode",{"_index":164,"title":{},"body":{"components/AddContactComponent.html":{}}}],["if(name",{"_index":1304,"title":{},"body":{"components/PersonBadgeComponent.html":{},"components/StatsItemComponent.html":{}}}],["if(password.value.length",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(passwordconfirmation.touched",{"_index":1437,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(prio",{"_index":1315,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["if(taskformid",{"_index":765,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(tasksarrayindex",{"_index":1896,"title":{},"body":{"injectables/TasksService.html":{}}}],["if(wrapper",{"_index":634,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["illegal",{"_index":1155,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["immediately",{"_index":1452,"title":{},"body":{"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["implements",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"index.html":{}}}],["implied",{"_index":1172,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["import",{"_index":123,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":1013,"title":{},"body":{"components/HelpComponent.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["imprint",{"_index":1093,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["in/sign",{"_index":1226,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["incidental",{"_index":1182,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["include",{"_index":890,"title":{},"body":{"components/GreetingComponent.html":{}}}],["included",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["includes",{"_index":1228,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["including",{"_index":794,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{}}}],["indemnify",{"_index":1199,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["indemnity",{"_index":1198,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1181,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["individual",{"_index":1052,"title":{},"body":{"components/HelpComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":845,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{}}}],["infringement",{"_index":1178,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["inherited",{"_index":70,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["init",{"_index":1815,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["initialization",{"_index":87,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SlideComponent.html":{}}}],["initialize",{"_index":423,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["initializes",{"_index":893,"title":{},"body":{"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{}}}],["initializing",{"_index":1782,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["initials",{"_index":1281,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["inituser",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["inituser(userdata",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["initusername",{"_index":887,"title":{},"body":{"components/GreetingComponent.html":{}}}],["initusername(currentuser",{"_index":891,"title":{},"body":{"components/GreetingComponent.html":{}}}],["inject",{"_index":126,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["inject(authservice",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/SummaryComponent.html":{}}}],["inject(contactsservice",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(router",{"_index":736,"title":{},"body":{"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{}}}],["inject(tasksservice",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["inject(usersservice",{"_index":120,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["injectable",{"_index":473,"title":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inline",{"_index":628,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/HeadlineOtherComponent.html":{}}}],["input",{"_index":124,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["input('contact",{"_index":140,"title":{},"body":{"components/AddContactComponent.html":{}}}],["input.focus",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["input.setselectionrange(input.value.length",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["input.value.length",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["inputcontact",{"_index":141,"title":{},"body":{"components/AddContactComponent.html":{}}}],["inputs",{"_index":51,"title":{},"body":{"components/AddContactComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["instance",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/MenuComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["intangible",{"_index":1190,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intended",{"_index":1017,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["interact",{"_index":1046,"title":{},"body":{"components/HelpComponent.html":{}}}],["interactions",{"_index":1163,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intercepts",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":1012,"title":{},"body":{"components/HelpComponent.html":{}}}],["intimidate",{"_index":1160,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["intro",{"_index":1229,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["introductory",{"_index":1569,"title":{},"body":{"components/SummaryComponent.html":{}}}],["intuitive",{"_index":1010,"title":{},"body":{"components/HelpComponent.html":{}}}],["irreversible",{"_index":1074,"title":{},"body":{"components/HelpComponent.html":{}}}],["isassignedto",{"_index":1641,"title":{},"body":{"classes/Task.html":{}}}],["isassignedto(appuser",{"_index":1663,"title":{},"body":{"classes/Task.html":{}}}],["isbreak",{"_index":1701,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["isbreak(char",{"_index":1709,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["isemailavailable",{"_index":1916,"title":{},"body":{"injectables/UsersService.html":{}}}],["isemailavailable(email",{"_index":1928,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuser",{"_index":40,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/UsersService.html":{}}}],["isuser(contact",{"_index":1931,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalid",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isvalid(form",{"_index":1356,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["item",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item'},{'name",{"_index":205,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["item.component",{"_index":1600,"title":{},"body":{"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["item.component.html",{"_index":796,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.scss",{"_index":797,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts",{"_index":793,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:17",{"_index":1471,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["item.component.ts:18",{"_index":805,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts:19",{"_index":803,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/StatsItemComponent.html":{}}}],["item.component.ts:20",{"_index":801,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:21",{"_index":804,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:22",{"_index":806,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:23",{"_index":802,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["item.component.ts:32",{"_index":1472,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["item/contact",{"_index":792,"title":{},"body":{"components/ContactListItemComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["item/stats",{"_index":1465,"title":{},"body":{"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["january",{"_index":1621,"title":{},"body":{"components/SummaryComponent.html":{}}}],["japanese",{"_index":994,"title":{},"body":{"components/HelpComponent.html":{}}}],["join",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"index.html":{}}}],["json",{"_index":438,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["json.id",{"_index":789,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["json.parse(item",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(remember",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonsubtasks",{"_index":1684,"title":{},"body":{"classes/Task.html":{}}}],["jsonsubtasks.push(s.tojson",{"_index":1686,"title":{},"body":{"classes/Task.html":{}}}],["july",{"_index":1220,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["june",{"_index":1625,"title":{},"body":{"components/SummaryComponent.html":{}}}],["kanban",{"_index":935,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["karma",{"_index":2072,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1926,"title":{},"body":{"injectables/UsersService.html":{}}}],["key",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["keydown.enter",{"_index":1521,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["kind",{"_index":1170,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["landing",{"_index":926,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{}}}],["landscape",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["large",{"_index":1289,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["last",{"_index":1348,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["lastvaluefrom",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["lastvaluefrom(this.http.delete(url",{"_index":870,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["lastvaluefrom(this.http.get(url",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["lastvaluefrom(this.http.post(url",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["lastvaluefrom(this.http.put(url",{"_index":862,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["latest",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TasksService.html":{}}}],["lawful",{"_index":1149,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["laws",{"_index":1153,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["layout",{"_index":1568,"title":{},"body":{"components/SummaryComponent.html":{}}}],["leaving",{"_index":724,"title":{},"body":{"components/BoardComponent.html":{}}}],["left",{"_index":469,"title":{},"body":{"components/ArrowBackBtnComponent.html":{}}}],["legal",{"_index":222,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["legal_notice",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["legalnoticecomponent",{"_index":221,"title":{"components/LegalNoticeComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["legend",{"_index":185,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["length",{"_index":1721,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["leverages",{"_index":1006,"title":{},"body":{"components/HelpComponent.html":{}}}],["liability",{"_index":1167,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["liable",{"_index":1179,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["lifecycle",{"_index":1238,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["limit",{"_index":1002,"title":{},"body":{"components/HelpComponent.html":{}}}],["limitation",{"_index":1166,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["limited",{"_index":1173,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["linked",{"_index":873,"title":{},"body":{"components/EmailComponent.html":{}}}],["list",{"_index":204,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":258,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["list.component",{"_index":751,"title":{},"body":{"components/BoardComponent.html":{}}}],["list.component.ts",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["list/task",{"_index":750,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["listed",{"_index":1120,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["listen",{"_index":1924,"title":{},"body":{"injectables/UsersService.html":{}}}],["listens",{"_index":1848,"title":{},"body":{"injectables/TasksService.html":{}}}],["lists",{"_index":1038,"title":{},"body":{"components/HelpComponent.html":{}}}],["literal",{"_index":446,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["loaded",{"_index":689,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{}}}],["local",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["locallogout",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["locally",{"_index":823,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["localstorage.getitem('remember_log_in",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.removeitem('token",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('remember_log_in",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":225,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["logged",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{}}}],["loggedin",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["logging",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["login",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login(email",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["login/guest",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginasguest",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginpagecomponent",{"_index":224,"title":{"components/LogInPageComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["logout",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["longer",{"_index":1723,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["loss",{"_index":1187,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["losses",{"_index":1191,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["lost",{"_index":687,"title":{},"body":{"components/BoardComponent.html":{}}}],["low",{"_index":1313,"title":{},"body":{"components/PrioIconComponent.html":{},"classes/Task.html":{}}}],["main/contacts/email/email.component",{"_index":975,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["main_routes",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["manage",{"_index":1008,"title":{},"body":{"components/HelpComponent.html":{}}}],["management",{"_index":937,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["manages",{"_index":1230,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["manner",{"_index":1500,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["manual",{"_index":970,"title":{},"body":{"components/HelpComponent.html":{}}}],["manually",{"_index":93,"title":{},"body":{"components/AddContactComponent.html":{}}}],["many",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["marcel",{"_index":1100,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["march",{"_index":1623,"title":{},"body":{"components/SummaryComponent.html":{}}}],["marking",{"_index":1267,"title":{},"body":{"components/PasswordIconComponent.html":{}}}],["marks",{"_index":1711,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["match",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["matching",{"_index":267,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1147,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["math.floor(math.random",{"_index":787,"title":{},"body":{"classes/Contact.html":{}}}],["maximize",{"_index":1003,"title":{},"body":{"components/HelpComponent.html":{}}}],["meaning",{"_index":996,"title":{},"body":{"components/HelpComponent.html":{}}}],["medium",{"_index":1312,"title":{},"body":{"components/PrioIconComponent.html":{},"classes/Task.html":{}}}],["meet",{"_index":442,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["memory",{"_index":829,"title":{},"body":{"injectables/ContactsService.html":{}}}],["menu",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/TaskCardComponent.html":{}}}],["menu'},{'name",{"_index":228,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["menu.component.html",{"_index":1259,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1260,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":227,"title":{"components/MenuComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["merchantability",{"_index":1174,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["message",{"_index":1566,"title":{},"body":{"components/SummaryComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["method",{"_index":85,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["milliseconds",{"_index":1242,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["miscellaneous",{"_index":2043,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":1658,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["mobile",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/PersonBadgeComponent.html":{}}}],["mode",{"_index":52,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["model",{"_index":1484,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["models/app",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["models/contact",{"_index":133,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"injectables/UsersService.html":{}}}],["models/subtask",{"_index":1546,"title":{},"body":{"components/SubtaskComponent.html":{},"injectables/TasksService.html":{}}}],["models/task",{"_index":745,"title":{},"body":{"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["modes",{"_index":1231,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["modification",{"_index":1136,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["modules",{"_index":2083,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":1592,"title":{},"body":{"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["months",{"_index":1620,"title":{},"body":{"components/SummaryComponent.html":{}}}],["months[date.getmonth",{"_index":1631,"title":{},"body":{"components/SummaryComponent.html":{}}}],["more",{"_index":1078,"title":{},"body":{"components/HelpComponent.html":{},"components/TaskViewComponent.html":{},"index.html":{}}}],["move",{"_index":1069,"title":{},"body":{"components/HelpComponent.html":{}}}],["moves",{"_index":1061,"title":{},"body":{"components/HelpComponent.html":{}}}],["moving",{"_index":1060,"title":{},"body":{"components/HelpComponent.html":{}}}],["name",{"_index":89,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["name.length",{"_index":1305,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["name.valid",{"_index":170,"title":{},"body":{"components/AddContactComponent.html":{}}}],["named",{"_index":1319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["nameparts",{"_index":1299,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["nameparts.map(part",{"_index":1301,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["naming",{"_index":444,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["navigate",{"_index":925,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/StatsItemComponent.html":{},"index.html":{}}}],["navigation",{"_index":675,"title":{},"body":{"components/BoardComponent.html":{},"components/HeaderComponent.html":{}}}],["nearest",{"_index":629,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["necessary",{"_index":586,"title":{},"body":{"classes/AuthUser.html":{}}}],["need",{"_index":2078,"title":{},"body":{"index.html":{}}}],["never",{"_index":588,"title":{},"body":{"classes/AuthUser.html":{},"components/BoardComponent.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["newpassword",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["newtaskstatus",{"_index":1805,"title":{},"body":{"injectables/TasksService.html":{}}}],["next",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":2053,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":1445,"title":{},"body":{"components/SlideComponent.html":{}}}],["ngform",{"_index":96,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngondestroy",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["non",{"_index":1177,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["none",{"_index":1635,"title":{},"body":{"components/SummaryComponent.html":{}}}],["note",{"_index":1014,"title":{},"body":{"components/HelpComponent.html":{}}}],["notice",{"_index":940,"title":{},"body":{"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["notice'},{'name",{"_index":223,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["notice.component.html",{"_index":1091,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.scss",{"_index":1092,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts",{"_index":1090,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notice/legal",{"_index":1089,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notices",{"_index":1219,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notification",{"_index":263,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["notification.component",{"_index":1393,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["notification.component.html",{"_index":1908,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.scss",{"_index":1909,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts",{"_index":1906,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["notification.component.ts:16",{"_index":1910,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification.component.ts:17",{"_index":1911,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["notification/toast",{"_index":1392,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["november",{"_index":1629,"title":{},"body":{"components/SummaryComponent.html":{}}}],["now",{"_index":1048,"title":{},"body":{"components/HelpComponent.html":{}}}],["null",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{}}}],["number",{"_index":182,"title":{},"body":{"components/AddContactComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["obj",{"_index":422,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.assigned_to",{"_index":1671,"title":{},"body":{"classes/Task.html":{}}}],["obj.category",{"_index":1678,"title":{},"body":{"classes/Task.html":{}}}],["obj.color_id",{"_index":455,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["obj.contacts",{"_index":457,"title":{},"body":{"classes/AppUser.html":{}}}],["obj.description",{"_index":1669,"title":{},"body":{"classes/Task.html":{}}}],["obj.due",{"_index":1673,"title":{},"body":{"classes/Task.html":{}}}],["obj.email",{"_index":599,"title":{},"body":{"classes/AuthUser.html":{},"classes/Contact.html":{}}}],["obj.id",{"_index":449,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.name",{"_index":784,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{}}}],["obj.phone",{"_index":786,"title":{},"body":{"classes/Contact.html":{}}}],["obj.prio",{"_index":1676,"title":{},"body":{"classes/Task.html":{}}}],["obj.status",{"_index":1494,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["obj.subtasks",{"_index":1679,"title":{},"body":{"classes/Task.html":{}}}],["obj.subtasks.foreach((sdata",{"_index":1681,"title":{},"body":{"classes/Task.html":{}}}],["obj.task",{"_index":1492,"title":{},"body":{"classes/Subtask.html":{}}}],["obj.title",{"_index":1667,"title":{},"body":{"classes/Task.html":{}}}],["obj.user",{"_index":453,"title":{},"body":{"classes/AppUser.html":{}}}],["obj.username",{"_index":596,"title":{},"body":{"classes/AuthUser.html":{}}}],["obj.username.replace('_",{"_index":597,"title":{},"body":{"classes/AuthUser.html":{}}}],["object",{"_index":428,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["october",{"_index":1628,"title":{},"body":{"components/SummaryComponent.html":{}}}],["officers",{"_index":1205,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["oldenburg",{"_index":1106,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["onbackclick",{"_index":950,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["once",{"_index":1044,"title":{},"body":{"components/HelpComponent.html":{}}}],["ondestroy",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["one",{"_index":1062,"title":{},"body":{"components/HelpComponent.html":{},"components/PrioIconComponent.html":{},"components/SummaryComponent.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{}}}],["onloginpage",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize",{"_index":658,"title":{},"body":{"components/BoardComponent.html":{}}}],["onsubmit",{"_index":48,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onsubmit(form",{"_index":95,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onto",{"_index":1718,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["oops",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["open",{"_index":685,"title":{},"body":{"components/BoardComponent.html":{}}}],["opened",{"_index":668,"title":{},"body":{"components/BoardComponent.html":{}}}],["operations",{"_index":1803,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":105,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1785,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["other'},{'name",{"_index":216,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["other.component",{"_index":974,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["other.component.html",{"_index":948,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.scss",{"_index":949,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts",{"_index":944,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"coverage.html":{}}}],["other.component.ts:19",{"_index":951,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:20",{"_index":955,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:21",{"_index":954,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other.component.ts:29",{"_index":952,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["other/headline",{"_index":943,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["other_routes",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwise",{"_index":1934,"title":{},"body":{"injectables/UsersService.html":{}}}],["out",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["output",{"_index":125,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["outputs",{"_index":53,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["overlay",{"_index":19,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["override",{"_index":142,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["overview",{"_index":637,"title":{"overview.html":{}},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"index.html":{},"overview.html":{}}}],["owned",{"_index":1133,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["ownership",{"_index":1124,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["package",{"_index":2028,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["paetzold",{"_index":1099,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["page",{"_index":927,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/StatsItemComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":226,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["page.component.html",{"_index":1232,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.scss",{"_index":1233,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts",{"_index":1225,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:20",{"_index":1247,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:21",{"_index":1248,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:28",{"_index":1237,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page.component.ts:36",{"_index":1243,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["page/log",{"_index":1224,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["page/registration",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["param",{"_index":149,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["params.get('token",{"_index":1397,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["paramsub",{"_index":1324,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parent",{"_index":103,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["parseint(parts[1",{"_index":1693,"title":{},"body":{"classes/Task.html":{}}}],["parseint(parts[2",{"_index":1694,"title":{},"body":{"classes/Task.html":{}}}],["part",{"_index":988,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["part.charat(0).touppercase()).join",{"_index":1302,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["particular",{"_index":1176,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["partners",{"_index":1204,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["parts",{"_index":1690,"title":{},"body":{"classes/Task.html":{}}}],["parts[0",{"_index":1692,"title":{},"body":{"classes/Task.html":{}}}],["password",{"_index":230,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["password'},{'name",{"_index":244,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["password.component.html",{"_index":1321,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1322,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1318,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:106",{"_index":1362,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:120",{"_index":1357,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:129",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:137",{"_index":1374,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1385,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1382,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1384,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1381,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1379,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1387,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1377,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1386,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":1360,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1369,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1352,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:84",{"_index":1346,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:97",{"_index":1365,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.valid",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":1317,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirmation",{"_index":1378,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordconfirmationcontainerref",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordconfirmationfieldtype",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordcontainerref",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordfieldtype",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordiconcomponent",{"_index":229,"title":{"components/PasswordIconComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["performance",{"_index":1197,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["performs",{"_index":898,"title":{},"body":{"components/GreetingComponent.html":{}}}],["permanently",{"_index":1070,"title":{},"body":{"components/HelpComponent.html":{}}}],["person",{"_index":232,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["person's",{"_index":1280,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["personal",{"_index":1129,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["personalized",{"_index":878,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["personbadgecomponent",{"_index":30,"title":{"components/PersonBadgeComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["phone",{"_index":181,"title":{},"body":{"components/AddContactComponent.html":{},"classes/Contact.html":{}}}],["phone.valid",{"_index":180,"title":{},"body":{"components/AddContactComponent.html":{}}}],["pixels",{"_index":716,"title":{},"body":{"components/BoardComponent.html":{}}}],["platform",{"_index":2075,"title":{},"body":{"index.html":{}}}],["please",{"_index":1071,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pointing",{"_index":468,"title":{},"body":{"components/ArrowBackBtnComponent.html":{}}}],["policies",{"_index":1115,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["policy",{"_index":941,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["policy'},{'name",{"_index":238,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["policy.component.ts",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["policy/privacy",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["position",{"_index":1349,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["possibility",{"_index":1194,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["possible",{"_index":1023,"title":{},"body":{"components/HelpComponent.html":{}}}],["post",{"_index":821,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/UsersService.html":{}}}],["presented",{"_index":1119,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["prevent",{"_index":1450,"title":{},"body":{"components/SlideComponent.html":{}}}],["prevention",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["previous",{"_index":686,"title":{},"body":{"components/BoardComponent.html":{},"components/SubtaskComponent.html":{}}}],["previousname",{"_index":1505,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["primary",{"_index":1255,"title":{},"body":{"components/MenuComponent.html":{}}}],["principles",{"_index":1007,"title":{},"body":{"components/HelpComponent.html":{}}}],["printdate",{"_index":1577,"title":{},"body":{"components/SummaryComponent.html":{}}}],["printdate(due",{"_index":1589,"title":{},"body":{"components/SummaryComponent.html":{}}}],["printdescription",{"_index":1702,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["printed",{"_index":1742,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["prints",{"_index":1720,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["prio",{"_index":235,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["prioiconcomponent",{"_index":234,"title":{"components/PrioIconComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["priority",{"_index":1308,"title":{},"body":{"components/PrioIconComponent.html":{},"components/SummaryComponent.html":{},"components/TaskViewComponent.html":{}}}],["privacy",{"_index":237,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["privacy_policy",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["privacypolicycomponent",{"_index":236,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["private",{"_index":41,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":1110,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["profits",{"_index":1188,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["progress",{"_index":691,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{}}}],["prohibited",{"_index":1140,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["project",{"_index":936,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"index.html":{}}}],["projects",{"_index":1009,"title":{},"body":{"components/HelpComponent.html":{}}}],["promise",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["property",{"_index":109,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{}}}],["proprietary",{"_index":1141,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["provide",{"_index":980,"title":{},"body":{"components/HelpComponent.html":{}}}],["provided",{"_index":1168,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["providedin",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["providehttpclient(withfetch",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([auth_token_interceptor",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["purpose",{"_index":1128,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["purposes",{"_index":1150,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["put",{"_index":843,"title":{},"body":{"injectables/ContactsService.html":{}}}],["quality",{"_index":1031,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["questions",{"_index":1079,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["re",{"_index":1371,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{}}}],["react",{"_index":1716,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["read",{"_index":1320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["readonly",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["real",{"_index":1849,"title":{},"body":{"injectables/TasksService.html":{}}}],["reasonable",{"_index":1214,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["recommended",{"_index":1453,"title":{},"body":{"components/SlideComponent.html":{}}}],["redeem",{"_index":1527,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["reduced",{"_index":679,"title":{},"body":{"components/BoardComponent.html":{}}}],["reference",{"_index":1353,"title":{},"body":{"components/ResetPasswordComponent.html":{},"index.html":{}}}],["reflect",{"_index":1064,"title":{},"body":{"components/HelpComponent.html":{}}}],["reflects",{"_index":1077,"title":{},"body":{"components/HelpComponent.html":{}}}],["regarding",{"_index":1032,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["register",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(username",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":178,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":240,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["registrationformcomponent",{"_index":239,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["regulations",{"_index":1154,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["related",{"_index":1925,"title":{},"body":{"injectables/UsersService.html":{}}}],["relating",{"_index":1216,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["reliability",{"_index":1028,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["reload",{"_index":1540,"title":{},"body":{"components/SubtaskComponent.html":{},"index.html":{}}}],["remains",{"_index":587,"title":{},"body":{"classes/AuthUser.html":{}}}],["remember",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"components/HelpComponent.html":{}}}],["remember_log_in",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["remembrance",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":832,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{}}}],["removed",{"_index":836,"title":{},"body":{"injectables/ContactsService.html":{}}}],["removes",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["replication",{"_index":1138,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["represent",{"_index":1051,"title":{},"body":{"components/HelpComponent.html":{}}}],["represents",{"_index":409,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["reproduction",{"_index":1135,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["request",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestpasswordreset",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestpasswordreset(email",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["requests",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":171,"title":{},"body":{"components/AddContactComponent.html":{},"components/HelpComponent.html":{}}}],["requirements",{"_index":445,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["requires",{"_index":1076,"title":{},"body":{"components/HelpComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{}}}],["reset",{"_index":243,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["resetemailtaken",{"_index":49,"title":{},"body":{"components/AddContactComponent.html":{}}}],["resetpassword",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(newpassword",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword/request",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":242,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["resetpasswordform.submitted",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resets",{"_index":108,"title":{},"body":{"components/AddContactComponent.html":{}}}],["resetting",{"_index":1376,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resolution",{"_index":671,"title":{},"body":{"components/BoardComponent.html":{}}}],["resolves",{"_index":1936,"title":{},"body":{"injectables/UsersService.html":{}}}],["resolving",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["resp",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["respective",{"_index":639,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TasksService.html":{}}}],["response",{"_index":825,"title":{},"body":{"injectables/ContactsService.html":{}}}],["responsible",{"_index":1162,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["responsive",{"_index":1290,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["result",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["results",{"_index":266,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1144,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["retrieve",{"_index":1595,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["retrieved",{"_index":717,"title":{},"body":{"components/BoardComponent.html":{}}}],["retrieves",{"_index":430,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{}}}],["return",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Subtask.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":75,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PersonBadgeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1142,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["root",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":195,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["route",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{}}}],["routermodule",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2052,"title":{},"body":{"index.html":{}}}],["running",{"_index":2067,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["s.status",{"_index":1747,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["save",{"_index":184,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{}}}],["saved",{"_index":688,"title":{},"body":{"components/BoardComponent.html":{}}}],["saves",{"_index":1526,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["scaffolding",{"_index":2061,"title":{},"body":{"index.html":{}}}],["schiller",{"_index":1101,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["schneider",{"_index":1097,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["scope",{"_index":1123,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["scratch",{"_index":772,"title":{},"body":{"classes/Contact.html":{}}}],["screen",{"_index":670,"title":{},"body":{"components/BoardComponent.html":{}}}],["screens",{"_index":677,"title":{},"body":{"components/BoardComponent.html":{}}}],["scroll",{"_index":610,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolling",{"_index":604,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollintoview",{"_index":605,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollintoview(elementid",{"_index":608,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollspeed",{"_index":622,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolltobottom",{"_index":606,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrolltobottom(elementid",{"_index":614,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollwhiledragging",{"_index":607,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["scrollwhiledragging(scrollspeed",{"_index":617,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["search",{"_index":641,"title":{},"body":{"components/BoardComponent.html":{}}}],["searchfilter",{"_index":648,"title":{},"body":{"components/BoardComponent.html":{}}}],["secondary",{"_index":915,"title":{},"body":{"components/HeaderComponent.html":{}}}],["section",{"_index":1042,"title":{},"body":{"components/HelpComponent.html":{}}}],["seen",{"_index":1467,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["selected",{"_index":799,"title":{},"body":{"components/ContactListItemComponent.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["sends",{"_index":820,"title":{},"body":{"injectables/ContactsService.html":{}}}],["sent",{"_index":589,"title":{},"body":{"classes/AuthUser.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["separated",{"_index":962,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["separator",{"_index":963,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["september",{"_index":1627,"title":{},"body":{"components/SummaryComponent.html":{}}}],["serve",{"_index":2054,"title":{},"body":{"index.html":{}}}],["server",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["server's",{"_index":824,"title":{},"body":{"injectables/ContactsService.html":{}}}],["serves",{"_index":1227,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["service",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["services/auth.service",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SummaryComponent.html":{}}}],["services/contacts.service",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["services/tasks.service",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["services/users.service",{"_index":138,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["session",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{}}}],["setdragcardheight",{"_index":659,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragcardheight(height",{"_index":713,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragstartstatus",{"_index":660,"title":{},"body":{"components/BoardComponent.html":{}}}],["setdragstartstatus(status",{"_index":719,"title":{},"body":{"components/BoardComponent.html":{}}}],["setheaders",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlocalrememberme",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["setlocalrememberme(remember",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["sets",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"injectables/UsersService.html":{}}}],["setstatus",{"_index":1703,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["setstatus(status",{"_index":1728,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["settimeout",{"_index":159,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["setting",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":1446,"title":{},"body":{"components/SlideComponent.html":{}}}],["setuser",{"_index":1596,"title":{},"body":{"components/SummaryComponent.html":{}}}],["shape",{"_index":768,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["shared/header/header.component",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/menu/menu.component",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":723,"title":{},"body":{"components/BoardComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["showheaderdropdown",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["showing",{"_index":1279,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["shows",{"_index":1498,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["showtaskform",{"_index":661,"title":{},"body":{"components/BoardComponent.html":{}}}],["showtaskform(id",{"_index":721,"title":{},"body":{"components/BoardComponent.html":{}}}],["showtoastmsg",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sign",{"_index":1246,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["signaled",{"_index":1726,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["slide",{"_index":57,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["slide'},{'name",{"_index":245,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slide.component.html",{"_index":1455,"title":{},"body":{"components/SlideComponent.html":{}}}],["slide.component.scss",{"_index":1456,"title":{},"body":{"components/SlideComponent.html":{}}}],["slidecomponent",{"_index":21,"title":{"components/SlideComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["slidecomponent:28",{"_index":122,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:29",{"_index":71,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:37",{"_index":81,"title":{},"body":{"components/AddContactComponent.html":{}}}],["slidecomponent:44",{"_index":111,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidecomponent:46",{"_index":1781,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["slideinout",{"_index":50,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["slidetaskformwrapper",{"_index":662,"title":{},"body":{"components/BoardComponent.html":{}}}],["sliding",{"_index":1444,"title":{},"body":{"components/SlideComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slogan",{"_index":961,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan'},{'name",{"_index":218,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["slogan.component",{"_index":1601,"title":{},"body":{"components/SummaryComponent.html":{}}}],["slogan.component.html",{"_index":964,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.scss",{"_index":965,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.ts",{"_index":960,"title":{},"body":{"components/HeadlineSloganComponent.html":{},"coverage.html":{}}}],["slogan.component.ts:16",{"_index":966,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan.component.ts:17",{"_index":967,"title":{},"body":{"components/HeadlineSloganComponent.html":{}}}],["slogan/headline",{"_index":959,"title":{},"body":{"components/HeadlineSloganComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["small",{"_index":466,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"components/TaskCardComponent.html":{}}}],["smaller",{"_index":676,"title":{},"body":{"components/BoardComponent.html":{}}}],["smooth",{"_index":627,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["solely",{"_index":1161,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["something",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sorted",{"_index":638,"title":{},"body":{"components/BoardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"components/ArrowBackBtnComponent.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["special",{"_index":1183,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["speed",{"_index":623,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/.../app.config.ts",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.ts",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:108",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:117",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:125",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/log",{"_index":1223,"title":{},"body":{"components/LogInPageComponent.html":{},"coverage.html":{}}}],["src/app/main/add",{"_index":1495,"title":{},"body":{"components/SubtaskComponent.html":{},"coverage.html":{}}}],["src/app/main/board/board.component.ts",{"_index":636,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/main/board/board.component.ts:100",{"_index":694,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:111",{"_index":727,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:121",{"_index":714,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:131",{"_index":720,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:139",{"_index":698,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:26",{"_index":742,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:27",{"_index":737,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:28",{"_index":739,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:29",{"_index":743,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:30",{"_index":740,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:31",{"_index":741,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:32",{"_index":734,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:33",{"_index":735,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:34",{"_index":738,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:35",{"_index":732,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:43",{"_index":707,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:52",{"_index":730,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:60",{"_index":701,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:70",{"_index":722,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:78",{"_index":709,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/board.component.ts:91",{"_index":667,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/main/board/task",{"_index":1695,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/add",{"_index":9,"title":{},"body":{"components/AddContactComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/contact",{"_index":791,"title":{},"body":{"components/ContactListItemComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/contacts.component.ts",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["src/app/main/contacts/email/email.component.ts",{"_index":872,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["src/app/main/contacts/email/email.component.ts:15",{"_index":876,"title":{},"body":{"components/EmailComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts",{"_index":877,"title":{},"body":{"components/GreetingComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:18",{"_index":901,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:19",{"_index":902,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:20",{"_index":903,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:28",{"_index":896,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:37",{"_index":895,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:47",{"_index":892,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/greeting/greeting.component.ts:60",{"_index":888,"title":{},"body":{"components/GreetingComponent.html":{}}}],["src/app/main/summary/stats",{"_index":1464,"title":{},"body":{"components/StatsItemComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/summary.component.ts",{"_index":1564,"title":{},"body":{"components/SummaryComponent.html":{},"coverage.html":{}}}],["src/app/main/summary/summary.component.ts:103",{"_index":1590,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:24",{"_index":1597,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:25",{"_index":1599,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:26",{"_index":1598,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:27",{"_index":1578,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:41",{"_index":1588,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:51",{"_index":1593,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:61",{"_index":1580,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:70",{"_index":1587,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:79",{"_index":1585,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/main/summary/summary.component.ts:88",{"_index":1583,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/other/help/help.component.ts",{"_index":968,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["src/app/other/legal",{"_index":1088,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["src/app/other/privacy",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["src/app/other/reset",{"_index":1316,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":1998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:103",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:117",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:132",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:143",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:152",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:163",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:171",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:64",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:75",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:88",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/autoscroll.service.ts",{"_index":602,"title":{},"body":{"injectables/AutoscrollService.html":{},"coverage.html":{}}}],["src/app/services/autoscroll.service.ts:17",{"_index":609,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/autoscroll.service.ts:27",{"_index":615,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/autoscroll.service.ts:37",{"_index":618,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["src/app/services/contacts.service.ts",{"_index":809,"title":{},"body":{"injectables/ContactsService.html":{},"coverage.html":{}}}],["src/app/services/contacts.service.ts:111",{"_index":831,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:12",{"_index":816,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:125",{"_index":835,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:25",{"_index":837,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:45",{"_index":818,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:60",{"_index":827,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:77",{"_index":840,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/contacts.service.ts:92",{"_index":847,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/services/tasks.service.ts",{"_index":1801,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/app/services/tasks.service.ts:103",{"_index":1828,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:117",{"_index":1830,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:129",{"_index":1832,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:140",{"_index":1857,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:154",{"_index":1859,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:169",{"_index":1841,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:18",{"_index":1861,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:182",{"_index":1843,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:19",{"_index":1862,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:198",{"_index":1845,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:20",{"_index":1860,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:208",{"_index":1844,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:21",{"_index":1821,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:217",{"_index":1823,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:229",{"_index":1854,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:242",{"_index":1839,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:37",{"_index":1846,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:51",{"_index":1852,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:68",{"_index":1850,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:84",{"_index":1825,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/tasks.service.ts:94",{"_index":1834,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/app/services/users.service.ts",{"_index":1913,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/services/users.service.ts:108",{"_index":1932,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:19",{"_index":1938,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:20",{"_index":1918,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:36",{"_index":1923,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:49",{"_index":1935,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:67",{"_index":1920,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:81",{"_index":1922,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:96",{"_index":1929,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":914,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:21",{"_index":921,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:22",{"_index":922,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:23",{"_index":923,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":929,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:25",{"_index":930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:31",{"_index":928,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:40",{"_index":924,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/menu/menu.component.ts",{"_index":1254,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/menu/menu.component.ts:17",{"_index":1261,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/shared/menu/menu.component.ts:31",{"_index":1262,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/templates/arrow",{"_index":463,"title":{},"body":{"components/ArrowBackBtnComponent.html":{},"coverage.html":{}}}],["src/app/templates/close",{"_index":766,"title":{},"body":{"components/CloseBtnComponent.html":{},"coverage.html":{}}}],["src/app/templates/headline",{"_index":942,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"coverage.html":{}}}],["src/app/templates/password",{"_index":1263,"title":{},"body":{"components/PasswordIconComponent.html":{},"coverage.html":{}}}],["src/app/templates/person",{"_index":1277,"title":{},"body":{"components/PersonBadgeComponent.html":{},"coverage.html":{}}}],["src/app/templates/prio",{"_index":1306,"title":{},"body":{"components/PrioIconComponent.html":{},"coverage.html":{}}}],["src/app/templates/slide/slide.component.ts",{"_index":1442,"title":{},"body":{"components/SlideComponent.html":{},"coverage.html":{}}}],["src/app/templates/slide/slide.component.ts:28",{"_index":1461,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:29",{"_index":1457,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:36",{"_index":1458,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/slide/slide.component.ts:44",{"_index":1460,"title":{},"body":{"components/SlideComponent.html":{}}}],["src/app/templates/toast",{"_index":1905,"title":{},"body":{"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/app",{"_index":407,"title":{},"body":{"classes/AppUser.html":{},"coverage.html":{}}}],["src/models/auth",{"_index":585,"title":{},"body":{"classes/AuthUser.html":{},"coverage.html":{}}}],["src/models/contact.ts",{"_index":771,"title":{},"body":{"classes/Contact.html":{},"coverage.html":{}}}],["src/models/contact.ts:11",{"_index":778,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:12",{"_index":779,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:13",{"_index":777,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:14",{"_index":780,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:15",{"_index":776,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:36",{"_index":782,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/contact.ts:52",{"_index":781,"title":{},"body":{"classes/Contact.html":{}}}],["src/models/subtask.ts",{"_index":1483,"title":{},"body":{"classes/Subtask.html":{},"coverage.html":{}}}],["src/models/subtask.ts:28",{"_index":1490,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:5",{"_index":1487,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:6",{"_index":1489,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:7",{"_index":1488,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/subtask.ts:8",{"_index":1486,"title":{},"body":{"classes/Subtask.html":{}}}],["src/models/task.ts",{"_index":1636,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/task.ts:10",{"_index":1654,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:11",{"_index":1647,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:12",{"_index":1643,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:13",{"_index":1648,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:14",{"_index":1650,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:15",{"_index":1646,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:16",{"_index":1651,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:17",{"_index":1653,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:18",{"_index":1642,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:46",{"_index":1665,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:69",{"_index":1664,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:79",{"_index":1655,"title":{},"body":{"classes/Task.html":{}}}],["src/models/task.ts:9",{"_index":1649,"title":{},"body":{"classes/Task.html":{}}}],["stage",{"_index":1063,"title":{},"body":{"components/HelpComponent.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["start",{"_index":1050,"title":{},"body":{"components/HelpComponent.html":{}}}],["started",{"_index":2047,"title":{"index.html":{}},"body":{}}],["state",{"_index":114,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/HelpComponent.html":{},"components/PasswordIconComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["statements",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["statistical",{"_index":1565,"title":{},"body":{"components/SummaryComponent.html":{}}}],["statistics",{"_index":1466,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["stats",{"_index":247,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["statsitemcomponent",{"_index":246,"title":{"components/StatsItemComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["status",{"_index":640,"title":{},"body":{"components/BoardComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["status/list",{"_index":697,"title":{},"body":{"components/BoardComponent.html":{}}}],["statuslist",{"_index":649,"title":{},"body":{"components/BoardComponent.html":{}}}],["step",{"_index":1033,"title":{},"body":{"components/HelpComponent.html":{}}}],["storage",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":2065,"title":{},"body":{"index.html":{}}}],["story",{"_index":1645,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["streaming",{"_index":1847,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["strictly",{"_index":1139,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["string",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["strive",{"_index":1020,"title":{},"body":{"components/HelpComponent.html":{}}}],["student",{"_index":1126,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["students",{"_index":987,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["styleurl",{"_index":34,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["styling",{"_index":1284,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["subauth",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["subguestlogout",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["submit",{"_index":98,"title":{},"body":{"components/AddContactComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["subscribers",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribes",{"_index":1536,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subscription",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["subtask",{"_index":1482,"title":{"classes/Subtask.html":{}},"body":{"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"classes/Task.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["subtask'},{'name",{"_index":249,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["subtask(sdata",{"_index":1683,"title":{},"body":{"classes/Task.html":{}}}],["subtask(stdata",{"_index":1883,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.component.html",{"_index":1501,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subtask.component.scss",{"_index":1502,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["subtask.id",{"_index":1904,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.name",{"_index":1800,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["subtask.status",{"_index":1792,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["subtask.task_id",{"_index":1889,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtask.tojson",{"_index":1903,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtaskcomponent",{"_index":248,"title":{"components/SubtaskComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["subtasks",{"_index":1638,"title":{},"body":{"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["subtasks/stream",{"_index":1867,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksdata",{"_index":1826,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksdata.foreach(stdata",{"_index":1881,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksevents",{"_index":1866,"title":{},"body":{"injectables/TasksService.html":{}}}],["subtasksevents.onmessage",{"_index":1870,"title":{},"body":{"injectables/TasksService.html":{}}}],["subusersinit",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["successfully",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{}}}],["such",{"_index":1130,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["summary",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/MenuComponent.html":{},"components/SummaryComponent.html":{}}}],["summary'},{'name",{"_index":251,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["summary.component.html",{"_index":1570,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary.component.scss",{"_index":1571,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary/landing",{"_index":1468,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["summarycomponent",{"_index":250,"title":{"components/SummaryComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["super",{"_index":83,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["super.ngoninit",{"_index":143,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["supposed",{"_index":1256,"title":{},"body":{"components/MenuComponent.html":{}}}],["switch(name",{"_index":1474,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["sync",{"_index":1927,"title":{},"body":{"injectables/UsersService.html":{}}}],["synccontacts",{"_index":813,"title":{},"body":{"injectables/ContactsService.html":{}}}],["synced",{"_index":838,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["synchronization",{"_index":1837,"title":{},"body":{"injectables/TasksService.html":{}}}],["synchronize",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["synchronized",{"_index":1937,"title":{},"body":{"injectables/UsersService.html":{}}}],["syncingsubtasks",{"_index":1806,"title":{},"body":{"injectables/TasksService.html":{}}}],["syncregisteredusers",{"_index":1917,"title":{},"body":{"injectables/UsersService.html":{}}}],["syncsubtasks",{"_index":1816,"title":{},"body":{"injectables/TasksService.html":{}}}],["synctasks",{"_index":1817,"title":{},"body":{"injectables/TasksService.html":{}}}],["syncuser",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["t.id",{"_index":1888,"title":{},"body":{"injectables/TasksService.html":{}}}],["t.prio",{"_index":1609,"title":{},"body":{"components/SummaryComponent.html":{}}}],["t.status",{"_index":1902,"title":{},"body":{"injectables/TasksService.html":{}}}],["t.subtasks",{"_index":1885,"title":{},"body":{"injectables/TasksService.html":{}}}],["table",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":253,"title":{"classes/Task.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["task's",{"_index":1497,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task'},{'name",{"_index":193,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["task(tdata",{"_index":1875,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.assigned",{"_index":1756,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.component",{"_index":749,"title":{},"body":{"components/BoardComponent.html":{}}}],["task.component.ts",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["task.getduetotext",{"_index":1797,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["task.id",{"_index":1894,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.name",{"_index":1563,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task.prio",{"_index":1754,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.subtasks",{"_index":1799,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["task.title",{"_index":1751,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["task.tojson",{"_index":1892,"title":{},"body":{"injectables/TasksService.html":{}}}],["task/add",{"_index":748,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["task/subtask/subtask.component.ts",{"_index":1496,"title":{},"body":{"components/SubtaskComponent.html":{},"coverage.html":{}}}],["task/subtask/subtask.component.ts:20",{"_index":1512,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:24",{"_index":1541,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:25",{"_index":1545,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:26",{"_index":1514,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:27",{"_index":1513,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:28",{"_index":1544,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:29",{"_index":1511,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:30",{"_index":1543,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:37",{"_index":1535,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:46",{"_index":1532,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:54",{"_index":1524,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:64",{"_index":1529,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:77",{"_index":1518,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:87",{"_index":1515,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task/subtask/subtask.component.ts:98",{"_index":1522,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["task_id",{"_index":1485,"title":{},"body":{"classes/Subtask.html":{}}}],["taskcardcomponent",{"_index":252,"title":{"components/TaskCardComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["taskcategorycomponent",{"_index":255,"title":{"components/TaskCategoryComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["taskchange",{"_index":1510,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["taskformid",{"_index":650,"title":{},"body":{"components/BoardComponent.html":{}}}],["taskformwrappertranslated",{"_index":651,"title":{},"body":{"components/BoardComponent.html":{}}}],["tasklistcomponent",{"_index":257,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["tasks",{"_index":165,"title":{},"body":{"components/AddContactComponent.html":{},"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/SummaryComponent.html":{},"injectables/TasksService.html":{}}}],["tasks.length",{"_index":1612,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasks.sort((a",{"_index":1614,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasks/stream",{"_index":1865,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks[0].due",{"_index":1617,"title":{},"body":{"components/SummaryComponent.html":{}}}],["tasksarrayindex",{"_index":1886,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasksevents",{"_index":1863,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tasksevents.onmessage",{"_index":1868,"title":{},"body":{"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["tasksservice",{"_index":293,"title":{"injectables/TasksService.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["taskviewcomponent",{"_index":259,"title":{"components/TaskViewComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["team",{"_index":167,"title":{},"body":{"components/AddContactComponent.html":{},"components/HelpComponent.html":{}}}],["technical",{"_index":1644,"title":{},"body":{"classes/Task.html":{},"components/TaskCategoryComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["templates/arrow",{"_index":1738,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["templates/close",{"_index":134,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/headline",{"_index":973,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["templates/password",{"_index":1389,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["templates/person",{"_index":129,"title":{},"body":{"components/AddContactComponent.html":{},"components/ContactListItemComponent.html":{},"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["templates/prio",{"_index":1737,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/slide/slide.component",{"_index":137,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["templates/toast",{"_index":1391,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["term",{"_index":995,"title":{},"body":{"components/HelpComponent.html":{}}}],["terms",{"_index":1108,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["test",{"_index":2070,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2080,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2069,"title":{},"body":{"index.html":{}}}],["text",{"_index":1275,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Task.html":{}}}],["then((resp",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["thereto",{"_index":1118,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["this.addcontactlocally(contact",{"_index":857,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.addsubtaskstotasks(resp",{"_index":1879,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.addsubtasktotask(new",{"_index":1882,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.addtasklocally(task",{"_index":1891,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.animate",{"_index":1251,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["this.assigned",{"_index":1670,"title":{},"body":{"classes/Task.html":{}}}],["this.assigned.includes(appuser.id",{"_index":1688,"title":{},"body":{"classes/Task.html":{}}}],["this.autherror",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.currentuser",{"_index":849,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser$.next(this.authservice.currentuser",{"_index":855,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser$.subscribe((u",{"_index":905,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.authservice.currentuser$.subscribe(currentuser",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.currentuser$.subscribe(u",{"_index":1604,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.authservice.currentuser.contacts",{"_index":851,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.findindex(c",{"_index":864,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.push(contact",{"_index":859,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts.splice(contactsarrayindex",{"_index":871,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.contacts[contactsarrayindex",{"_index":866,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser.user.id",{"_index":850,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.currentuser?.contacts?.push(new",{"_index":853,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.authservice.getcurrentuid",{"_index":957,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["this.authservice.logout",{"_index":933,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.resetpassword(this.formdata.password",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.syncuser",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsub",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["this.authsub.unsubscribe",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{}}}],["this.cancel",{"_index":163,"title":{},"body":{"components/AddContactComponent.html":{},"components/SubtaskComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.canceloverlay.emit",{"_index":160,"title":{},"body":{"components/AddContactComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.category",{"_index":1677,"title":{},"body":{"classes/Task.html":{}}}],["this.checkpasswordconfirmation",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.clearsubtasks",{"_index":1880,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.closedropdown.subscribe",{"_index":1741,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.closingtaskstatusdropdown.next",{"_index":763,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.color_id",{"_index":454,"title":{},"body":{"classes/AppUser.html":{},"classes/Contact.html":{}}}],["this.confirm",{"_index":1558,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.contacts",{"_index":456,"title":{},"body":{"classes/AppUser.html":{}}}],["this.contacts$.next",{"_index":856,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.contactsservice.synccontacts",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["this.contactsubmission.emit(this.formdata",{"_index":157,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.currentuser",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["this.currentuser$.next(null",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser$.next(this.currentuser",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser.id",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusername",{"_index":908,"title":{},"body":{"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["this.datainitafterauthcomplete",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["this.delete.emit",{"_index":162,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.delete.emit(true",{"_index":1559,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.deletecontactlocally(id",{"_index":869,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.deletelocalsessiontoken",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deletetasklocally(id",{"_index":1898,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.description",{"_index":1668,"title":{},"body":{"classes/Task.html":{}}}],["this.displaydropdown",{"_index":931,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["this.dragcardheight",{"_index":761,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.dragstartstatus",{"_index":762,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.due",{"_index":1672,"title":{},"body":{"classes/Task.html":{}}}],["this.due.length",{"_index":1689,"title":{},"body":{"classes/Task.html":{}}}],["this.due.split",{"_index":1691,"title":{},"body":{"classes/Task.html":{}}}],["this.editing",{"_index":1552,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.editinputref.nativeelement",{"_index":1554,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.editthistask.emit",{"_index":1795,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.email",{"_index":598,"title":{},"body":{"classes/AuthUser.html":{},"classes/Contact.html":{}}}],["this.emailtaken",{"_index":156,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.focuslastcharacter(this.getfieldcontainerrefinput(this.passwordconfirmationcontainerref",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.focuslastcharacter(this.getfieldcontainerrefinput(this.passwordcontainerref",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.focuslastposition",{"_index":1553,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formclick.subscribe",{"_index":1548,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formdata",{"_index":145,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.email",{"_index":152,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.email.length",{"_index":153,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.formdata.password",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.password.length",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.passwordconfirmation",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formdata.passwordconfirmation.length",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formmode",{"_index":1252,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["this.formsubscription",{"_index":1547,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.formsubscription.unsubscribe",{"_index":1551,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.geturgent",{"_index":1611,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.guestsub.unsubscribe",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["this.id",{"_index":448,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["this.initusername(this.authservice.currentuser",{"_index":904,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.initusername(u",{"_index":906,"title":{},"body":{"components/GreetingComponent.html":{}}}],["this.isemailavailable(contact.email",{"_index":1952,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isuser",{"_index":148,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.isvalid(form",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.locallogout",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loggedin",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["this.main_routes.includes(this.getcurrentroute",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mode",{"_index":144,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.name",{"_index":783,"title":{},"body":{"classes/Contact.html":{},"classes/Subtask.html":{}}}],["this.name.split",{"_index":1300,"title":{},"body":{"components/PersonBadgeComponent.html":{}}}],["this.other_routes.includes(this.getcurrentroute",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["this.paramsub",{"_index":1394,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.paramsub.unsubscribe",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordconfirmationfieldtype",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.passwordfieldtype",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.phone",{"_index":785,"title":{},"body":{"classes/Contact.html":{}}}],["this.previousname",{"_index":1549,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.prio",{"_index":1675,"title":{},"body":{"classes/Task.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1395,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate",{"_index":934,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate((['/summary",{"_index":958,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["this.router.navigate(['/add_task",{"_index":759,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.router.navigate(['/board",{"_index":1473,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["this.router.navigatebyurl",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.url",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["this.showheaderdropdown",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showtaskform",{"_index":758,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showtoastmsg",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.slide.emit",{"_index":1463,"title":{},"body":{"components/SlideComponent.html":{}}}],["this.slideinout",{"_index":158,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.slidetaskformwrapper",{"_index":755,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.status",{"_index":1493,"title":{},"body":{"classes/Subtask.html":{},"classes/Task.html":{}}}],["this.subauth",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/SummaryComponent.html":{}}}],["this.subtasks",{"_index":1680,"title":{},"body":{"classes/Task.html":{}}}],["this.subtasks?.foreach(s",{"_index":1685,"title":{},"body":{"classes/Task.html":{}}}],["this.subtasks?.push(new",{"_index":1682,"title":{},"body":{"classes/Task.html":{}}}],["this.syncingsubtasks",{"_index":1878,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.syncregisteredusers",{"_index":1940,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.syncsubtasks",{"_index":1871,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.synctasks",{"_index":1869,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.task",{"_index":1789,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task.description.length",{"_index":1745,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.description.slice(0",{"_index":1743,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.name",{"_index":1550,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.task.status",{"_index":1749,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.task.subtasks",{"_index":1790,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task.subtasks[index",{"_index":1791,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.task_id",{"_index":1491,"title":{},"body":{"classes/Subtask.html":{}}}],["this.taskchange.emit(this.task",{"_index":1557,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["this.taskformid",{"_index":754,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.taskformwrappertranslated",{"_index":760,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tasks",{"_index":1872,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks$.next",{"_index":1876,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter(t",{"_index":1901,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find(t",{"_index":1900,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.findindex(t",{"_index":1887,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.foreach(t",{"_index":1884,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.length",{"_index":1877,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(new",{"_index":1874,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":1893,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.splice(tasksarrayindex",{"_index":1899,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks[tasksarrayindex",{"_index":1897,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks[tasksarrayindex].subtasks?.push(subtask",{"_index":1890,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasksservice.deletetask(this.task.id",{"_index":1794,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.tasksservice.getfilteredtasks(status",{"_index":1607,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.gettaskbyid(id",{"_index":752,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tasksservice.init",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasksservice.tasks",{"_index":1613,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.tasks.filter(t",{"_index":1608,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.tasks.length",{"_index":1610,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasksservice.updatesubtask(subtask",{"_index":1793,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["this.tasksservice.updatetask(this.task",{"_index":1750,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["this.title",{"_index":1666,"title":{},"body":{"classes/Task.html":{}}}],["this.togglepasswordfieldtype(this.passwordconfirmationfieldtype",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.togglepasswordfieldtype(this.passwordfieldtype",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token",{"_index":1396,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.transferafterreset",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translated",{"_index":1462,"title":{},"body":{"components/SlideComponent.html":{}}}],["this.unsubauth",{"_index":1603,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.updatecontactlocally(contact",{"_index":861,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.updatedropdown.emit(this.displaydropdown",{"_index":932,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.updatetasklocally(task",{"_index":1895,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.user",{"_index":451,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.email",{"_index":462,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.tojson",{"_index":459,"title":{},"body":{"classes/AppUser.html":{}}}],["this.user.username",{"_index":461,"title":{},"body":{"classes/AppUser.html":{}}}],["this.username",{"_index":595,"title":{},"body":{"classes/AuthUser.html":{}}}],["this.username.replace",{"_index":600,"title":{},"body":{"classes/AuthUser.html":{}}}],["this.users",{"_index":1739,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["this.users$.next",{"_index":1945,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.find(u",{"_index":1949,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.foreach(u",{"_index":1946,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users.push(new",{"_index":1943,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.init",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersservice.isemailavailable(this.formdata.email",{"_index":155,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.usersservice.isuser(this.inputcontact",{"_index":147,"title":{},"body":{"components/AddContactComponent.html":{}}}],["this.usersservice.users",{"_index":1740,"title":{},"body":{"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["this.userssub.unsubscribe",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["this.viewtaskid",{"_index":753,"title":{},"body":{"components/BoardComponent.html":{}}}],["threaten",{"_index":1159,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["three",{"_index":1270,"title":{},"body":{"components/PasswordIconComponent.html":{},"components/PrioIconComponent.html":{}}}],["threshold",{"_index":682,"title":{},"body":{"components/BoardComponent.html":{}}}],["thus",{"_index":1722,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["time",{"_index":684,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/LegalNoticeComponent.html":{},"injectables/TasksService.html":{}}}],["timeout",{"_index":1449,"title":{},"body":{"components/SlideComponent.html":{}}}],["timestamp",{"_index":1639,"title":{},"body":{"classes/Task.html":{}}}],["title",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"classes/Task.html":{}}}],["toast",{"_index":262,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["toastnotificationcomponent",{"_index":261,"title":{"components/ToastNotificationComponent.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{},"coverage.html":{}}}],["together",{"_index":945,"title":{},"body":{"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{}}}],["toggle",{"_index":112,"title":{},"body":{"components/AddContactComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["toggled",{"_index":1367,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["toggledropdown",{"_index":918,"title":{},"body":{"components/HeaderComponent.html":{},"components/TaskCardComponent.html":{}}}],["toggleformmode",{"_index":1236,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["togglepasswordfieldtype",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["togglepasswordfieldtype(type",{"_index":1364,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["toggles",{"_index":1244,"title":{},"body":{"components/LogInPageComponent.html":{}}}],["togglesubtaskstatus",{"_index":1769,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["togglesubtaskstatus(index",{"_index":1783,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["togglevisibility",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["togglevisibility(field",{"_index":1368,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["tojson",{"_index":419,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"classes/Contact.html":{},"classes/Subtask.html":{},"classes/Task.html":{}}}],["token",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["token.interceptor.ts",{"_index":1999,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.key",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["tool",{"_index":938,"title":{},"body":{"components/HeaderComponent.html":{},"components/HelpComponent.html":{}}}],["total",{"_index":1586,"title":{},"body":{"components/SummaryComponent.html":{}}}],["track",{"_index":764,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{}}}],["trademarks",{"_index":1148,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["transfer",{"_index":1375,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["transferafterreset",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["transform",{"_index":1656,"title":{},"body":{"classes/Task.html":{}}}],["transformed",{"_index":1661,"title":{},"body":{"classes/Task.html":{},"components/TaskCardComponent.html":{}}}],["translated",{"_index":43,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["translation",{"_index":113,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["trigger",{"_index":728,"title":{},"body":{"components/BoardComponent.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":58,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"classes/Subtask.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":1605,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/UsersService.html":{}}}],["u.id",{"_index":1947,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.email",{"_index":1950,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.id",{"_index":1948,"title":{},"body":{"injectables/UsersService.html":{}}}],["u.user.username",{"_index":1606,"title":{},"body":{"components/SummaryComponent.html":{}}}],["udata.user.email",{"_index":1942,"title":{},"body":{"injectables/UsersService.html":{}}}],["uid",{"_index":956,"title":{},"body":{"components/HeadlineOtherComponent.html":{}}}],["unauthorized",{"_index":1134,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["undefined",{"_index":458,"title":{},"body":{"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/Contact.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["under",{"_index":1053,"title":{},"body":{"components/HelpComponent.html":{}}}],["unit",{"_index":2068,"title":{},"body":{"index.html":{}}}],["unsetting",{"_index":705,"title":{},"body":{"components/BoardComponent.html":{}}}],["unsubauth",{"_index":1572,"title":{},"body":{"components/SummaryComponent.html":{}}}],["unsubscribe",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/GreetingComponent.html":{},"components/SummaryComponent.html":{}}}],["unsubscribes",{"_index":1533,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["unterm",{"_index":1102,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["up",{"_index":897,"title":{},"body":{"components/GreetingComponent.html":{},"components/LogInPageComponent.html":{},"components/SlideComponent.html":{},"components/TaskCardComponent.html":{},"injectables/UsersService.html":{}}}],["upcoming",{"_index":1478,"title":{},"body":{"components/StatsItemComponent.html":{}}}],["update",{"_index":841,"title":{},"body":{"injectables/ContactsService.html":{},"components/LegalNoticeComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{}}}],["updatecontact",{"_index":814,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontact(contact",{"_index":839,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontactlocally",{"_index":815,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updatecontactlocally(contact",{"_index":846,"title":{},"body":{"injectables/ContactsService.html":{}}}],["updated",{"_index":844,"title":{},"body":{"injectables/ContactsService.html":{},"injectables/TasksService.html":{}}}],["updatedropdown",{"_index":920,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updates",{"_index":822,"title":{},"body":{"injectables/ContactsService.html":{},"components/HelpComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["updatesubtask",{"_index":1818,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatesubtask(subtask",{"_index":1853,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetask",{"_index":1819,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetask(task",{"_index":1856,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklocally",{"_index":1820,"title":{},"body":{"injectables/TasksService.html":{}}}],["updatetasklocally(task",{"_index":1858,"title":{},"body":{"injectables/TasksService.html":{}}}],["upon",{"_index":900,"title":{},"body":{"components/GreetingComponent.html":{},"components/SlideComponent.html":{}}}],["urgent",{"_index":1311,"title":{},"body":{"components/PrioIconComponent.html":{},"components/StatsItemComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["url",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"components/MenuComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["url/route",{"_index":1361,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["usage",{"_index":969,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{}}}],["use",{"_index":678,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["used",{"_index":695,"title":{},"body":{"components/BoardComponent.html":{},"components/GreetingComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LegalNoticeComponent.html":{},"components/SlideComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["user",{"_index":80,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"classes/AppUser.html":{},"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/BoardComponent.html":{},"classes/Contact.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HelpComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["user's",{"_index":819,"title":{},"body":{"injectables/ContactsService.html":{}}}],["user.ts",{"_index":408,"title":{},"body":{"classes/AppUser.html":{},"classes/AuthUser.html":{},"coverage.html":{}}}],["user.ts:11",{"_index":425,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:12",{"_index":426,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:13",{"_index":424,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:14",{"_index":421,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:27",{"_index":594,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:34",{"_index":436,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:47",{"_index":429,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:56",{"_index":427,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:6",{"_index":592,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:7",{"_index":593,"title":{},"body":{"classes/AuthUser.html":{}}}],["user.ts:70",{"_index":435,"title":{},"body":{"classes/AppUser.html":{}}}],["user.ts:8",{"_index":591,"title":{},"body":{"classes/AuthUser.html":{}}}],["userdata",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUser.html":{},"components/GreetingComponent.html":{}}}],["username.replace",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":775,"title":{},"body":{"classes/Contact.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{}}}],["users/current",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/stream",{"_index":1939,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":42,"title":{"injectables/UsersService.html":{}},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userssub",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":674,"title":{},"body":{"components/BoardComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["valid",{"_index":99,"title":{},"body":{"components/AddContactComponent.html":{},"injectables/ContactsService.html":{},"components/ResetPasswordComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["validation",{"_index":1359,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/ContactListItemComponent.html":{},"injectables/ContactsService.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/LogInPageComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"classes/Task.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"components/ToastNotificationComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1310,"title":{},"body":{"components/PrioIconComponent.html":{}}}],["var",{"_index":189,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["variable",{"_index":1366,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1283,"title":{"miscellaneous/variables.html":{}},"body":{"components/PersonBadgeComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2050,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["view",{"_index":611,"title":{},"body":{"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"components/TaskViewComponent.html":{}}}],["view'},{'name",{"_index":260,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"components/ArrowBackBtnComponent.html":{},"components/BoardComponent.html":{},"components/CloseBtnComponent.html":{},"components/ContactListItemComponent.html":{},"components/EmailComponent.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/HeadlineSloganComponent.html":{},"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LogInPageComponent.html":{},"components/MenuComponent.html":{},"components/PasswordIconComponent.html":{},"components/PersonBadgeComponent.html":{},"components/PrioIconComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskCategoryComponent.html":{},"components/TaskViewComponent.html":{},"components/ToastNotificationComponent.html":{}}}],["view.component",{"_index":747,"title":{},"body":{"components/BoardComponent.html":{}}}],["view.component.html",{"_index":1766,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.scss",{"_index":1767,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts",{"_index":1762,"title":{},"body":{"components/TaskViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:27",{"_index":1772,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:28",{"_index":1773,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:29",{"_index":1774,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:30",{"_index":1775,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:31",{"_index":1787,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:32",{"_index":1771,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:55",{"_index":1776,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:66",{"_index":1784,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:78",{"_index":1777,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view.component.ts:89",{"_index":1779,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["view/task",{"_index":746,"title":{},"body":{"components/BoardComponent.html":{},"components/TaskViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":1388,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SubtaskComponent.html":{}}}],["viewchild('editinput",{"_index":1542,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["viewchild('passwordconfirmationcontainer",{"_index":1380,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["viewchild('passwordcontainer",{"_index":1383,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["viewer",{"_index":1763,"title":{},"body":{"components/TaskViewComponent.html":{}}}],["viewport",{"_index":1907,"title":{},"body":{"components/ToastNotificationComponent.html":{}}}],["viewtask",{"_index":663,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewtask(id",{"_index":729,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewtaskid",{"_index":652,"title":{},"body":{"components/BoardComponent.html":{}}}],["visibility",{"_index":1370,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["visible",{"_index":1258,"title":{},"body":{"components/MenuComponent.html":{},"components/SummaryComponent.html":{}}}],["visual",{"_index":1011,"title":{},"body":{"components/HelpComponent.html":{}}}],["visualize",{"_index":1000,"title":{},"body":{"components/HelpComponent.html":{}}}],["void",{"_index":76,"title":{},"body":{"components/AddContactComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AutoscrollService.html":{},"components/BoardComponent.html":{},"injectables/ContactsService.html":{},"components/GreetingComponent.html":{},"components/HeaderComponent.html":{},"components/HeadlineOtherComponent.html":{},"components/LogInPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SlideComponent.html":{},"components/StatsItemComponent.html":{},"components/SubtaskComponent.html":{},"components/SummaryComponent.html":{},"components/TaskCardComponent.html":{},"components/TaskViewComponent.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["warranties",{"_index":1165,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["warranty",{"_index":1169,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["ways",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["we'll",{"_index":979,"title":{},"body":{"components/HelpComponent.html":{}}}],["we're",{"_index":1082,"title":{},"body":{"components/HelpComponent.html":{}}}],["we\\'ll",{"_index":1084,"title":{},"body":{"components/HelpComponent.html":{}}}],["we\\'re",{"_index":1087,"title":{},"body":{"components/HelpComponent.html":{}}}],["web",{"_index":989,"title":{},"body":{"components/HelpComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["welcome",{"_index":976,"title":{},"body":{"components/HelpComponent.html":{}}}],["went",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["whether",{"_index":672,"title":{},"body":{"components/BoardComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["whose",{"_index":1708,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["window.innerwidth",{"_index":756,"title":{},"body":{"components/BoardComponent.html":{}}}],["window:resize",{"_index":665,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":18,"title":{},"body":{"components/AddContactComponent.html":{},"components/SlideComponent.html":{},"components/TaskViewComponent.html":{}}}],["without",{"_index":1122,"title":{},"body":{"components/LegalNoticeComponent.html":{},"injectables/TasksService.html":{}}}],["words",{"_index":1713,"title":{},"body":{"components/TaskCardComponent.html":{}}}],["work",{"_index":1001,"title":{},"body":{"components/HelpComponent.html":{},"components/SlideComponent.html":{}}}],["workaround",{"_index":1459,"title":{},"body":{"components/SlideComponent.html":{}}}],["wrapper",{"_index":632,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["wrapper.scrollby(0",{"_index":635,"title":{},"body":{"injectables/AutoscrollService.html":{}}}],["writes",{"_index":1591,"title":{},"body":{"components/SummaryComponent.html":{}}}],["wrong",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["x",{"_index":767,"title":{},"body":{"components/CloseBtnComponent.html":{}}}],["year",{"_index":1633,"title":{},"body":{"components/SummaryComponent.html":{},"classes/Task.html":{}}}],["yes",{"_index":1520,"title":{},"body":{"components/SubtaskComponent.html":{}}}],["you'll",{"_index":1035,"title":{},"body":{"components/HelpComponent.html":{}}}],["you've",{"_index":1049,"title":{},"body":{"components/HelpComponent.html":{}}}],["you\\'ll",{"_index":1085,"title":{},"body":{"components/HelpComponent.html":{}}}],["you\\'ve",{"_index":1086,"title":{},"body":{"components/HelpComponent.html":{}}}],["yyyy",{"_index":1657,"title":{},"body":{"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddContactComponent.html":{"url":"components/AddContactComponent.html","title":"component - AddContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/add-contact/add-contact.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the \"add contact\" or \"edit contact\" form within an overlay.\n\n    \n\n    \n        Extends\n    \n    \n                    SlideComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-contact\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                PersonBadgeComponent\n                                CloseBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-contact.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-contact.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailTaken\n                            \n                            \n                                formData\n                            \n                            \n                                isUser\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                deleteContact\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetEmailTaken\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOverlay\n                            \n                            \n                                contactSubmission\n                            \n                            \n                                delete\n                            \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                \n                    \n                        Default value : new Contact({})\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     \"add\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'add'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelOverlay\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contactSubmission\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/add-contact/add-contact.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         SlideComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SlideComponent:29\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Cancel this form/overlay with slide animation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Delete this contact.\nThe delete button is disabled if the contact is a user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:37\n\n                        \n                    \n\n\n            \n                \n                        Extend super class \"ngOnInit()\" method by form data initialization.\nAlso disable name editing in case the contact is another user (rather than a manually added contact).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submit form if valid by emitting he corresponding event to the parent component\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    add/edit contact form\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEmailTaken\n                        \n                    \n                \n            \n            \n                \nresetEmailTaken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/contacts/add-contact/add-contact.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Resets the emailTaken property to the default value (false).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:44\n\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Contact({})\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/contacts/add-contact/add-contact.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         SlideComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         SlideComponent:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonBadgeComponent } from '../../../templates/person-badge/person-badge.component';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Contact } from '../../../../models/contact';\nimport { CloseBtnComponent } from '../../../templates/close-btn/close-btn.component';\nimport { SlideComponent } from '../../../templates/slide/slide.component';\nimport { UsersService } from '../../../services/users.service';\n\n\n/**\n * This component displays the \"add contact\" or \"edit contact\" form within an overlay.\n */\n@Component({\n  selector: 'app-add-contact',\n  standalone: true,\n  imports: [CommonModule, FormsModule, PersonBadgeComponent, CloseBtnComponent],\n  templateUrl: './add-contact.component.html',\n  styleUrl: './add-contact.component.scss'\n})\nexport class AddContactComponent extends SlideComponent {\n  @Input() mode: 'add' | 'edit' = 'add';\n  @Input('contact') inputContact: Contact = new Contact({});\n  formData = new Contact({});\n  @Output() cancelOverlay = new EventEmitter();\n  @Output() contactSubmission = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  isUser: boolean = false;\n  emailTaken: boolean = false;\n  private usersService = inject(UsersService);\n\n\n  /**\n   * Extend super class \"ngOnInit()\" method by form data initialization.\n   * Also disable name editing in case the contact is another user (rather than a manually added contact).\n   */\n  override ngOnInit() {\n    super.ngOnInit();\n    if (this.mode == 'edit') {\n      this.formData = new Contact(this.inputContact.toJson());\n      if (this.usersService.isUser(this.inputContact)) { this.isUser = true }\n    }\n  }\n\n\n  /**\n   * Submit form if valid by emitting he corresponding event to the parent component\n   * @param form add/edit contact form\n   */\n  onSubmit(form: NgForm): void {\n    if (form.submitted && form.form.valid) {\n      if (this.formData.email && this.formData.email.length > 0 && !this.usersService.isEmailAvailable(this.formData.email)) {\n        this.emailTaken = true;\n      } else {\n        this.contactSubmission.emit(this.formData);\n      }\n    }\n  }\n\n\n  /**\n   * Resets the emailTaken property to the default value (false).\n   */\n  resetEmailTaken(): void {\n    this.emailTaken = false;\n  }\n\n\n  /**\n   * Cancel this form/overlay with slide animation\n   */\n  cancel() {\n    this.slideInOut();\n    setTimeout(() => this.cancelOverlay.emit(), 125);\n  }\n\n\n  /**\n   * Delete this contact.\n   * The delete button is disabled if the contact is a user.\n   */\n  deleteContact() {\n    this.delete.emit();\n    this.cancel();\n  }\n}\n    \n\n    \n        \n    \n        \n            \n            \n                \n                \n                    @if(mode == 'add') {\n                    Add\n                    } @else {\n                    Edit\n                    }\n                    contact\n                \n            \n            Tasks are better with a team!\n            \n        \n        @if(mode == 'add') {\n        \n        } @else {\n        \n        }\n        \n            \n            \n                \n                @if((name.touched || contactForm.submitted) && !name.valid && !isUser) {\n                A contact name is required.\n                }\n                \n            \n            \n                \n                \n                @if((email.touched || contactForm.submitted) && !email.valid && !isUser) {\n                This is not a valid email adress.\n                } @else if(!isUser && contactForm.submitted && emailTaken) {\n                This email adress is already registered.\n                }\n            \n            \n                \n                \n                @if((phone.touched || contactForm.submitted) && !phone.valid) {\n                This is not a valid phone number.\n                }\n            \n            \n                @if(mode == 'add') {\n                \n                    Cancel\n                    \n                        \n                        \n                        \n                    \n                \n                \n                    Create Contact\n                    \n                \n                } @else {\n                \n                    Delete\n                \n                \n                    Save\n                    \n                \n                }\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        @if(mode == \\'add\\') {                    Add                    } @else {                    Edit                    }                    contact                                        Tasks are better with a team!                            @if(mode == \\'add\\') {                } @else {                }                                                                @if((name.touched || contactForm.submitted) && !name.valid && !isUser) {                A contact name is required.                }                                                                                        @if((email.touched || contactForm.submitted) && !email.valid && !isUser) {                This is not a valid email adress.                } @else if(!isUser && contactForm.submitted && emailTaken) {                This email adress is already registered.                }                                                                        @if((phone.touched || contactForm.submitted) && !phone.valid) {                This is not a valid phone number.                }                                        @if(mode == \\'add\\') {                                    Cancel                                                                                                                                                                    Create Contact                                                    } @else {                                    Delete                                                    Save                                                    }                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the app component created by Angular by default (but extended in many ways).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterModule\n                                MenuComponent\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                authSub\n                            \n                            \n                                    Private\n                                contactsService\n                            \n                            \n                                    Optional\n                                currentUser\n                            \n                            \n                                    Private\n                                dataInitAfterAuthComplete\n                            \n                            \n                                    Private\n                                guestSub\n                            \n                            \n                                loggedIn\n                            \n                            \n                                    Readonly\n                                MAIN_ROUTES\n                            \n                            \n                                    Readonly\n                                OTHER_ROUTES\n                            \n                            \n                                showHeaderDropdown\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                usersService\n                            \n                            \n                                    Private\n                                usersSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeHeaderDropdown\n                            \n                            \n                                getCurrentRoute\n                            \n                            \n                                localLogOut\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogInPage\n                            \n                            \n                                subAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            Create instance of router and subscribe to authentication service.\nCall landscape mode prevention for mobile devices.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeHeaderDropdown\n                        \n                    \n                \n            \n            \n                \ncloseHeaderDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Close header dropdown menu by setting the corresponding property\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentRoute\n                        \n                    \n                \n            \n            \n                \ngetCurrentRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Get current route from router\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                current URL\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localLogOut\n                        \n                    \n                \n            \n            \n                \nlocalLogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Fit log in state properties to logging out.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogInPage\n                        \n                    \n                \n            \n            \n                \nonLogInPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Check if the current route is not included in app/main and app/other component routes.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribe to authService.user$ to check log in state.\nIf a registered user is logged in, call subUsersInit() method.\nIf the user is logged in as guest, call subGuestLogOut() method.\n\n\n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contactsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ContactsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataInitAfterAuthComplete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        guestSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        MAIN_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/summary', '/add_task', '/board', '/contacts']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        OTHER_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/help', '/legal_notice', '/privacy_policy']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaderDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'join'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet, RouterModule, Router } from '@angular/router';\nimport { MenuComponent } from './shared/menu/menu.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { UsersService } from './services/users.service';\nimport { AuthService } from './services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from '../models/app-user';\nimport { TasksService } from './services/tasks.service';\nimport { ContactsService } from './services/contacts.service';\nimport { environment } from '../environments/environment.development';\n\n\n/**\n * This is the app component created by Angular by default (but extended in many ways).\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, RouterModule, MenuComponent, HeaderComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'join';\n  private authService = inject(AuthService);\n  private usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n  private contactsService = inject(ContactsService);\n  private authSub = new Subscription();\n  private guestSub = new Subscription();\n  private usersSub = new Subscription();\n  currentUser?: AppUser | null;\n  loggedIn: boolean = false;\n  showHeaderDropdown: boolean = false;\n  private dataInitAfterAuthComplete: boolean = false;\n  readonly MAIN_ROUTES = ['/summary', '/add_task', '/board', '/contacts'];\n  readonly OTHER_ROUTES = ['/help', '/legal_notice', '/privacy_policy'];\n\n\n  /**\n   * Create instance of router and subscribe to authentication service.\n   * Call landscape mode prevention for mobile devices.\n   * @param router instance of Router\n   */\n  constructor(private router: Router) {\n    this.authSub = this.subAuth();\n  }\n\n\n  ngOnInit(): void {\n    if (localStorage.getItem('token')) {\n      this.authService.syncUser()\n        .then(() => { })\n        .catch(e => console.error(e));\n    }\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n    this.guestSub.unsubscribe();\n    this.usersSub.unsubscribe();\n  }\n\n\n  /**\n   * Subscribe to authService.user$ to check log in state.\n   * If a registered user is logged in, call subUsersInit() method.\n   * If the user is logged in as guest, call subGuestLogOut() method.\n   * @returns \n   */\n  subAuth(): Subscription {\n    return this.authService.currentUser$.subscribe(currentUser => {\n      if (currentUser?.id) {\n        this.currentUser = currentUser;\n        this.loggedIn = true;\n        if (!this.dataInitAfterAuthComplete) {\n          this.usersService.init();\n          this.tasksService.init();\n          this.contactsService.syncContacts();\n          this.dataInitAfterAuthComplete = true;\n        }\n      } else { this.localLogOut() }\n    });\n  }\n\n\n  /**\n   * Fit log in state properties to logging out.\n   */\n  localLogOut() {\n    this.currentUser = null;\n    this.loggedIn = false;\n    this.dataInitAfterAuthComplete = false;\n    this.guestSub.unsubscribe();\n  }\n\n\n  /**\n   * Get current route from router\n   * @returns current URL\n   */\n  getCurrentRoute(): string {\n    return this.router.url;\n  }\n\n\n  /**\n   * Check if the current route is not included in app/main and app/other component routes.\n   * @returns check result\n   */\n  onLogInPage(): boolean {\n    return !(this.MAIN_ROUTES.includes(this.getCurrentRoute()) || this.OTHER_ROUTES.includes(this.getCurrentRoute()));\n  }\n\n\n  /**\n   * Close header dropdown menu by setting the corresponding property\n   */\n  closeHeaderDropdown() {\n    this.showHeaderDropdown = false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppUser.html":{"url":"classes/AppUser.html","title":"class - AppUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/app-user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an in-app user, which has additional properties compared to AuthUser.\nIt contains the AuthUser as its \"user\" property.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color_id\n                            \n                            \n                                    Optional\n                                contacts\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                asContact\n                            \n                            \n                                getColor\n                            \n                            \n                                hasUserInContacts\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/app-user.ts:14\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        contacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthUser\n\n                    \n                \n                    \n                        \n                                Defined in src/models/app-user.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        asContact\n                        \n                    \n                \n            \n            \n                \nasContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:56\n                        \n                    \n\n\n            \n                \n                        Return this user as a contact object\n\n\n                        \n                            Returns :         Contact\n\n                        \n                            \n                                contact\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves hexadecimal color string from color id.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                hex color\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUserInContacts\n                        \n                    \n                \n            \n            \n                \nhasUserInContacts(appUser: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:70\n                        \n                    \n\n\n            \n                \n                        Check if this user has another user in his contacts list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appUser\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/app-user.ts:34\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AuthUser } from './auth-user';\nimport { Contact } from './contact';\nimport { environment } from '../environments/environment.development';\n\n\n/**\n * Represents an in-app user, which has additional properties compared to AuthUser.\n * It contains the AuthUser as its \"user\" property.\n */\nexport class AppUser {\n    id: number;\n    user: AuthUser;\n    color_id: number;\n    contacts?: Contact[];\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.user = new AuthUser(obj.user ? obj.user : { id: -1 });\n        this.color_id = obj.color_id ? obj.color_id : -1;\n        this.contacts = obj.contacts ? obj.contacts : undefined;\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        return {\n            id: this.id,\n            user: this.user.toJson(),\n            color_id: this.color_id,\n        }\n    }\n\n\n    /**\n     * Retrieves hexadecimal color string from color id.\n     * @returns {string} hex color\n     */\n    getColor(): string {\n        return environment.BADGE_COLORS[this.color_id];\n    }\n\n\n    /**\n     * Return this user as a contact object\n     * @returns contact\n     */\n    asContact(): Contact {\n        return new Contact({\n            name: this.user.username,\n            email: this.user.email,\n            color_id: this.color_id\n        });\n    }\n\n\n    /**\n     * Check if this user has another user in his contacts list\n     * @param user the other user\n     * @returns check result\n     */\n    hasUserInContacts(appUser: AppUser): number {\n        if (this.contacts) {\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArrowBackBtnComponent.html":{"url":"components/ArrowBackBtnComponent.html","title":"component - ArrowBackBtnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArrowBackBtnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/arrow-back-btn/arrow-back-btn.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a small blue arrow button pointing to the left (\"back\").\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-arrow-back-btn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./arrow-back-btn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./arrow-back-btn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * This component displays a small blue arrow button pointing to the left (\"back\").\n */\n@Component({\n  selector: 'app-arrow-back-btn',\n  standalone: true,\n  imports: [],\n  templateUrl: './arrow-back-btn.component.html',\n  styleUrl: './arrow-back-btn.component.scss'\n})\nexport class ArrowBackBtnComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArrowBackBtnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles backend user authentication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteLocalSessionToken\n                            \n                            \n                                getCurrentUid\n                            \n                            \n                                getLocalRememberMe\n                            \n                            \n                                initUser\n                            \n                            \n                                logIn\n                            \n                            \n                                logInAsGuest\n                            \n                            \n                                logOut\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                requestPasswordReset\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                setLocalRememberMe\n                            \n                            \n                                    Async\n                                syncUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteLocalSessionToken\n                        \n                    \n                \n            \n            \n                \ndeleteLocalSessionToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        This function removes the session token from the local storage (not from the server!).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUid\n                        \n                    \n                \n            \n            \n                \ngetCurrentUid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Get current user ID, if it exists.\n\n\n                        \n                            Returns :     number | undefined\n\n                        \n                            \n                                user ID or undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalRememberMe\n                        \n                    \n                \n            \n            \n                \ngetLocalRememberMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Get \"remember_log_in\" item from local storage to handle log in remembrance\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initUser\n                        \n                    \n                \n            \n            \n                \ninitUser(userData: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Initialize the user data after authentication or registration.\nThis sets the current user in the AuthService and emits the user data to any subscribers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing user data to be set as current user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Log in user (with password and email)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logInAsGuest\n                        \n                    \n                \n            \n            \n                \nlogInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Log in as guest.\nThe guest log in is handled via local storage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Log out (both as guest and registered user)\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                log out result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Register user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        requestPasswordReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestPasswordReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Request password reset email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    user email address\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(newPassword: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Complete password reset\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                authentication result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLocalRememberMe\n                        \n                    \n                \n            \n            \n                \nsetLocalRememberMe(remember: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Set \"remember_log_in\" item in local storage to handle log in remembrance\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                remember\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Synchronize the current user data from the backend.\nFetches the latest data of the currently authenticated user.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when the user data has been successfully fetched and initialized.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, from, lastValueFrom } from \"rxjs\";\nimport { environment } from \"../../environments/environment.development\";\nimport { Router } from \"@angular/router\";\nimport { AppUser } from \"../../models/app-user\";\n\n\n/**\n * This injectable handles backend user authentication.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public currentUser$: Subject = new Subject();\n    currentUser: AppUser | null = null;\n\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n    ) { }\n\n    /**\n     * Register user\n     * @param name user name\n     * @param email user email\n     * @param password user password\n     * @returns authentication result\n     */\n    async register(username: string, email: string, password: string): Promise {\n        const url = environment.BASE_URL + 'register/';\n        const body = {\n            username: username.replace(' ', '_'),\n            email: email,\n            password: password,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log in user (with password and email)\n     * @param email user email\n     * @param password user password\n     * @returns authentication result\n     */\n    logIn(email: string, password: string): Promise {\n        const url = environment.BASE_URL + 'login/';\n        const body = {\n            email: email,\n            password: password,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Initialize the user data after authentication or registration.\n     * This sets the current user in the AuthService and emits the user data to any subscribers.\n     * @param userData Object containing user data to be set as current user.\n     */\n    initUser(userData: AppUser): void {\n        this.currentUser = new AppUser(userData);\n        this.currentUser$.next(this.currentUser);\n    }\n\n\n    /**\n     * Synchronize the current user data from the backend.\n     * Fetches the latest data of the currently authenticated user.\n     * @returns A Promise resolving when the user data has been successfully fetched and initialized.\n     */\n    async syncUser(): Promise {\n        const url = environment.BASE_URL + 'users/current/';\n        const resp: any = await lastValueFrom(this.http.get(url));\n        this.currentUser = new AppUser(resp);\n        this.currentUser$.next(this.currentUser);\n    }\n\n\n    /**\n     * Request password reset email\n     * @param email user email address\n     * @returns authentication result\n     */\n    async requestPasswordReset(email: string): Promise {\n        const url = environment.BASE_URL + 'resetPassword/request/';\n        const body = {\n            email: email,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Complete password reset\n     * @param password new password\n     * @param token password reset token\n     * @returns authentication result\n     */\n    async resetPassword(newPassword: string, key: string): Promise {\n        const url = environment.BASE_URL + 'resetPassword/';\n        const body = {\n            token: key,\n            new_password: newPassword,\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log in as guest.\n     * The guest log in is handled via local storage.\n     */\n    logInAsGuest() {\n        const url = environment.BASE_URL + 'login/guest/';\n        const body = {\n            username: localStorage.getItem('token') || '',\n            email: localStorage.getItem('token') + '@token.key' || '',\n            password: 'guestlogin',\n        };\n        return lastValueFrom(this.http.post(url, body));\n    }\n\n\n    /**\n     * Log out (both as guest and registered user)\n     * @returns log out result\n     */\n    logOut(): void {\n        this.deleteLocalSessionToken();\n        this.currentUser = null;\n        this.currentUser$.next(null);\n        this.router.navigateByUrl('');\n    }\n\n\n    /**\n     * This function removes the session token from the local storage (not from the server!).\n     */\n    deleteLocalSessionToken(): void {\n        localStorage.removeItem('token');\n    }\n\n\n    /**\n     * Get current user ID, if it exists.\n     * @returns {number | undefined} user ID or undefined\n     */\n    getCurrentUid(): number | undefined {\n        if (this.currentUser) {\n            return this.currentUser.id;\n        } return;\n    }\n\n\n    /**\n     * Set \"remember_log_in\" item in local storage to handle log in remembrance\n     * @param logIn desired value\n     */\n    setLocalRememberMe(remember: boolean) {\n        localStorage.setItem('remember_log_in', JSON.stringify(remember));\n    }\n\n\n    /**\n     * Get \"remember_log_in\" item from local storage to handle log in remembrance\n     */\n    getLocalRememberMe() {\n        const item = localStorage.getItem('remember_log_in');\n        return (item ? JSON.parse(item) : false);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUser.html":{"url":"classes/AuthUser.html","title":"class - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/auth-user.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user, but contains only the data necessary for authentication.\n(The password remains in the backend and is never sent to the frontend.)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/auth-user.ts:8\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/auth-user.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/auth-user.ts:27\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class AuthUser {\n    id: number;\n    username: string;\n    email: string;\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.username = obj.username ? obj.username.replace('_', ' ') : '';\n        this.email = obj.email ? obj.email : '';\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        return {\n            id: this.id,\n            username: this.username.replace(' ', '_'),\n            email: this.email,\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AutoscrollService.html":{"url":"injectables/AutoscrollService.html","title":"injectable - AutoscrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AutoscrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/autoscroll.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles automatic scrolling\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollIntoView\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                scrollWhileDragging\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollIntoView\n                        \n                    \n                \n            \n            \n                \nscrollIntoView(elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Scroll element into view\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTML element id attribute value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom(elementId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Scroll element to bottom\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elementId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    HTML element id attribute value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollWhileDragging\n                        \n                    \n                \n            \n            \n                \nscrollWhileDragging(scrollSpeed: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/autoscroll.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Handles scrolling during drag events.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                scrollSpeed\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nscrolling speed\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * This injectable handles automatic scrolling\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AutoscrollService {\n   \n   \n    /**\n     * Scroll element into view\n     * @param elementId HTML element id attribute value\n     */\n    scrollIntoView(elementId: string) {\n        const element = document.getElementById(elementId);\n        if (element) {element.scrollIntoView({ behavior: \"smooth\", inline: \"nearest\" })}\n    }\n\n\n    /**\n     * Scroll element to bottom\n     * @param elementId HTML element id attribute value\n     */\n    scrollToBottom(elementId: string) {\n        const element = document.getElementById(elementId);\n        if (element) {element.scrollTop = element.scrollHeight}\n    }\n\n\n    /**\n     * Handles scrolling during drag events.\n     * @param {number} scrollSpeed - scrolling speed \n     */\n    scrollWhileDragging(scrollSpeed: number) {\n        const wrapper = document.getElementById('pageWrapper');\n        if(wrapper) {wrapper.scrollBy(0, scrollSpeed)}\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/board.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the task board.\nIt contains an overview of all tasks sorted by their respective status.\nIt also contains a search function to filter tasks.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                TaskListComponent\n                                TaskViewComponent\n                                AddTaskComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closingTaskStatusDropdown\n                            \n                            \n                                dragCardHeight\n                            \n                            \n                                dragStartStatus\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                searchFilter\n                            \n                            \n                                statusList\n                            \n                            \n                                taskFormId\n                            \n                            \n                                taskFormWrapperTranslated\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                viewTaskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToStatus\n                            \n                            \n                                closeTaskStatusDropdown\n                            \n                            \n                                closeTaskView\n                            \n                            \n                                getTaskById\n                            \n                            \n                                hideTaskForm\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                setDragCardHeight\n                            \n                            \n                                setDragStartStatus\n                            \n                            \n                                showTaskForm\n                            \n                            \n                                slideTaskFormWrapper\n                            \n                            \n                                viewTask\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:91\n                        \n                    \n\n\n            \n                \n                        When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\nSmaller screens will use router navigation.\nIn case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\nIn this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToStatus\n                        \n                    \n                \n            \n            \n                \naddToStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Set task status to be used for \"add task\" initialization in adding mode (not for editing tasks)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status/list\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeTaskStatusDropdown\n                        \n                    \n                \n            \n            \n                \ncloseTaskStatusDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Close dropdown menu in \"task card\" element (child of \"task list\" element)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeTaskView\n                        \n                    \n                \n            \n            \n                \ncloseTaskView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:60\n                        \n                    \n\n\n            \n                \n                        This functon closes the \"task view\" component/overlay by unsetting the \"viewTaskId\" property\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:43\n                        \n                    \n\n\n            \n                \n                        This function returns a full task by its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                task\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideTaskForm\n                        \n                    \n                \n            \n            \n                \nhideTaskForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Hide \"add task\" component with slide animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:91\n                        \n                    \n\n\n            \n                \n                        When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\nSmaller screens will use router navigation.\nIn case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\nIn this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDragCardHeight\n                        \n                    \n                \n            \n            \n                \nsetDragCardHeight(height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Set \"dragCardHeight\" property to a certain height in pixels.\nThe height should be retrieved from the currently dragged task card HTML element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    card height\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDragStartStatus\n                        \n                    \n                \n            \n            \n                \nsetDragStartStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Set \"dragStartStatus\" property to a certain task status.\nThe status should be retrieved from the currently dragged task card HTML element or the task list containing it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTaskForm\n                        \n                    \n                \n            \n            \n                \nshowTaskForm(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Show the \"add task\" component.\nLeaving \"id\" empty ('') will result in \"add\" mode. Using an actual ID will result in editing the corresponding task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideTaskFormWrapper\n                        \n                    \n                \n            \n            \n                \nslideTaskFormWrapper()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Trigger slide animation for \"add task\" component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTask\n                        \n                    \n                \n            \n            \n                \nviewTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/board.component.ts:52\n                        \n                    \n\n\n            \n                \n                        This function sets the \"viewTaskId\" property, which will result in displaying the \"task view\" component\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closingTaskStatusDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragCardHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStartStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n\n                    \n                \n                \n                    \n                        Default value : 'To do'\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (\"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")[]\n\n                    \n                \n                \n                    \n                        Default value : ['To do', 'In progress', 'Await feedback', 'Done']\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFormId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFormWrapperTranslated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTaskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/board.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Task } from '../../../models/task';\nimport { TasksService } from '../../services/tasks.service';\nimport { TaskViewComponent } from './task-view/task-view.component';\nimport { AddTaskComponent } from '../add-task/add-task.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n\n/**\n * This component displays the task board.\n * It contains an overview of all tasks sorted by their respective status.\n * It also contains a search function to filter tasks.\n */\n@Component({\n  selector: 'app-board',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TaskListComponent, TaskViewComponent, AddTaskComponent],\n  templateUrl: './board.component.html',\n  styleUrl: './board.component.scss'\n})\nexport class BoardComponent {\n  private tasksService = inject(TasksService);\n  private router = inject(Router);\n  statusList: ('To do' | 'In progress' | 'Await feedback' | 'Done')[] = ['To do', 'In progress', 'Await feedback', 'Done'];\n  viewTaskId: number = -1;\n  taskFormId: number | null = null;\n  taskFormWrapperTranslated: boolean = true;\n  dragCardHeight: number = 160;\n  dragStartStatus: 'To do' | 'In progress' | 'Await feedback' | 'Done' = 'To do';\n  searchFilter: string = '';\n  closingTaskStatusDropdown: Subject = new Subject();\n\n\n  /**\n   * This function returns a full task by its ID\n   * @param id task ID\n   * @returns task\n   */\n  getTaskById(id: number): Task {\n    return this.tasksService.getTaskById(id) || new Task({});\n  }\n\n\n  /**\n   * This function sets the \"viewTaskId\" property, which will result in displaying the \"task view\" component\n   * @param id task ID\n   */\n  viewTask(id: number) {\n    this.viewTaskId = id;\n  }\n\n\n  /**\n   * This functon closes the \"task view\" component/overlay by unsetting the \"viewTaskId\" property\n   */\n  closeTaskView() {\n    this.viewTaskId = -1;\n  }\n\n\n  /**\n   * Show the \"add task\" component.\n   * Leaving \"id\" empty ('') will result in \"add\" mode. Using an actual ID will result in editing the corresponding task.\n   * @param id task ID\n   */\n  showTaskForm(id: number) {\n    this.taskFormId = id;\n  }\n\n\n  /**\n   * Hide \"add task\" component with slide animation.\n   */\n  hideTaskForm() {\n    this.slideTaskFormWrapper();\n    setTimeout(() => this.taskFormId = null, 125);\n  }\n\n\n  /**\n   * When the \"add task\" form is opened from the board, it depends on the screen resolution whether the form is displayed in an overlay or using router navigation.\n   * Smaller screens will use router navigation.\n   * In case the screen resolution is reduced below a certain threshold while the form is displayed in an overlay, close the overlay.\n   * In this case, the user will have to click another time to open the form. The previous form data will be lost since it is never saved or loaded. \n   */\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    if (this.taskFormId == -1 && window.innerWidth  768 ? this.showTaskForm(-1) : this.router.navigate(['/add_task']);\n    }\n  }\n\n\n  /**\n   * Trigger slide animation for \"add task\" component\n   */\n  slideTaskFormWrapper() {\n    this.taskFormWrapperTranslated = !this.taskFormWrapperTranslated;\n  }\n\n\n  /**\n   * Set \"dragCardHeight\" property to a certain height in pixels.\n   * The height should be retrieved from the currently dragged task card HTML element.\n   * @param height card height\n   */\n  setDragCardHeight(height: number) {\n    this.dragCardHeight = height;\n  }\n\n\n  /**\n   * Set \"dragStartStatus\" property to a certain task status.\n   * The status should be retrieved from the currently dragged task card HTML element or the task list containing it. \n   * @param status task status\n   */\n  setDragStartStatus(status: 'To do' | 'In progress' | 'Await feedback' | 'Done') {\n    this.dragStartStatus = status;\n  }\n\n\n  /**\n   * Close dropdown menu in \"task card\" element (child of \"task list\" element)\n   */\n  closeTaskStatusDropdown() {\n    this.closingTaskStatusDropdown.next();\n  }\n}\n\n    \n\n    \n        \n    \n        Board\n        \n            \n                \n                \n                \n            \n            \n                Add task\n                \n            \n        \n    \n    \n        @for (status of statusList; track status) {\n        \n        }\n    \n\n\n@if(taskFormId != null) {\n\n    \n        @if(taskFormId == -1) {\n        \n        } @else {\n        \n        }\n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Board                                                                                                            Add task                                                    @for (status of statusList; track status) {                }    @if(taskFormId != null) {            @if(taskFormId == -1) {                } @else {                }    }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseBtnComponent.html":{"url":"components/CloseBtnComponent.html","title":"component - CloseBtnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseBtnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/close-btn/close-btn.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a button in X shape.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close-btn\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./close-btn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close-btn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/close-btn/close-btn.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a button in X shape.\n */\n@Component({\n  selector: 'app-close-btn',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './close-btn.component.html',\n  styleUrl: './close-btn.component.scss'\n})\nexport class CloseBtnComponent {\n@Input() bright?: boolean;\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseBtnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Contact.html":{"url":"classes/Contact.html","title":"class - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a user contact.\nA contact can be added by the user from scratch.\nContacts are also created when additional data (email/phone)\nis added by the active user to other users.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color_id\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/contact.ts:15\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/contact.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/contact.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves hexadecimal color string from color id.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                hex color\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/contact.ts:36\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from '../environments/environment.development';\n\n\n/**\n * This class represents a user contact.\n * A contact can be added by the user from scratch.\n * Contacts are also created when additional data (email/phone)\n * is added by the active user to other users.\n */\nexport class Contact {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    color_id: number;\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.name = obj.name ? obj.name : '';\n        this.color_id = obj.color_id ? obj.color_id : -1;\n        this.email = obj.email ? obj.email : undefined;\n        this.phone = obj.phone ? obj.phone : undefined;\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const json: any = {\n            name: this.name,\n            color_id: this.color_id == -1 ? Math.floor(Math.random() * 25) : this.color_id,\n            email: this.email,\n            phone: this.phone,\n        };\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n\n\n    /**\n     * Retrieves hexadecimal color string from color id.\n     * @returns {string} hex color\n     */\n    getColor(): string {\n        return environment.BADGE_COLORS[this.color_id] || '#d1d1d1';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactListItemComponent.html":{"url":"components/ContactListItemComponent.html","title":"component - ContactListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/contact-list-item/contact-list-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a contact card including name and badge.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contact-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contact-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                designateAsYou\n                            \n                            \n                                email\n                            \n                            \n                                instance\n                            \n                            \n                                name\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#DDDDDD'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        designateAsYou\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n                \n                    \n                        Type :     \"contacts\" | \"task\"\n\n                    \n                \n                \n                    \n                        Default value : 'contacts'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/contact-list-item/contact-list-item.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PersonBadgeComponent } from '../../../templates/person-badge/person-badge.component';\nimport { EmailComponent } from '../email/email.component';\n\n\n/**\n * This component displays a contact card including name and badge.\n */\n@Component({\n  selector: 'app-contact-list-item',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, EmailComponent],\n  templateUrl: './contact-list-item.component.html',\n  styleUrl: './contact-list-item.component.scss'\n})\nexport class ContactListItemComponent {\n  @Input() name: string = 'name';\n  @Input() email?: string | undefined;\n  @Input() color: string = '#DDDDDD';\n  @Input() instance: 'contacts' | 'task' = 'contacts';\n  @Input() selected?: boolean = false;\n  @Input() designateAsYou?: boolean = false;\n}\n    \n\n    \n        \n    \n    \n        \n            {{name}}\n            @if(designateAsYou) {(you)}\n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{name}}            @if(designateAsYou) {(you)}                    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsService.html":{"url":"injectables/ContactsService.html","title":"injectable - ContactsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contacts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addContact\n                            \n                            \n                                addContactLocally\n                            \n                            \n                                    Async\n                                deleteContact\n                            \n                            \n                                deleteContactLocally\n                            \n                            \n                                    Async\n                                syncContacts\n                            \n                            \n                                    Async\n                                updateContact\n                            \n                            \n                                updateContactLocally\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/contacts.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    addContact(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Add a new contact to the current user's contact list.\nSends a POST request to the server to save the contact, and also updates the contact list locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addContactLocally\n                        \n                    \n                \n            \n            \n                \naddContactLocally(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Add a contact to the current user's contact list locally.\nThis does not communicate with the server and only updates the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object to be added locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteContact(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Delete a contact from the current user's contact list.\nSends a DELETE request to the server to remove the contact, and also removes it locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the contact to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContactLocally\n                        \n                    \n                \n            \n            \n                \ndeleteContactLocally(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Delete a contact from the current user's contact list locally.\nThis does not communicate with the server and only removes the contact from the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the contact to be removed locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncContacts\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Synchronize contacts from the backend for the current user.\nRetrieves the contacts list from the server and updates the current user's contacts locally.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when the contacts have been successfully synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateContact\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateContact(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Update an existing contact in the current user's contact list.\nSends a PUT request to the server to update the contact, and also updates the contact locally.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object containing updated information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContactLocally\n                        \n                    \n                \n            \n            \n                \nupdateContactLocally(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Update a contact in the current user's contact list locally.\nThis does not communicate with the server and only updates the in-memory contact list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact object containing updated information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contacts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Contact } from \"../../models/contact\";\nimport { AuthService } from './auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, lastValueFrom } from \"rxjs\";\nimport { environment } from \"../../environments/environment.development\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n  contacts$: Subject = new Subject();\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Synchronize contacts from the backend for the current user.\n   * Retrieves the contacts list from the server and updates the current user's contacts locally.\n   * @returns A Promise resolving when the contacts have been successfully synced.\n   */\n  async syncContacts(): Promise {\n    if (this.authService.currentUser && this.authService.currentUser.user.id != -1) {\n      const url = environment.BASE_URL + 'contacts/';\n      const resp = await lastValueFrom(this.http.get(url));\n      this.authService.currentUser.contacts = [];\n      (resp as Array).forEach(cData => {\n        this.authService.currentUser?.contacts?.push(new Contact(cData));\n      });\n      this.authService.currentUser$.next(this.authService.currentUser);\n      this.contacts$.next();\n    }\n  }\n\n\n  /**\n   * Add a new contact to the current user's contact list.\n   * Sends a POST request to the server to save the contact, and also updates the contact list locally.\n   * @param contact The contact object to be added.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated.\n   */\n  async addContact(contact: Contact): Promise {\n    if (this.authService.currentUser) {\n      this.addContactLocally(contact);\n      const url = environment.BASE_URL + 'contacts/';\n      const body = contact.toJson();\n      return lastValueFrom(this.http.post(url, body));\n    } return;\n  }\n\n\n  /**\n   * Add a contact to the current user's contact list locally.\n   * This does not communicate with the server and only updates the in-memory contact list.\n   * @param contact The contact object to be added locally.\n   */\n  addContactLocally(contact: Contact): void {\n    if (this.authService.currentUser) {\n      if (!this.authService.currentUser.contacts) {\n        this.authService.currentUser.contacts = [];\n      }\n      this.authService.currentUser.contacts.push(contact);\n      this.contacts$.next();\n    }\n  }\n\n\n  /**\n   * Update an existing contact in the current user's contact list.\n   * Sends a PUT request to the server to update the contact, and also updates the contact locally.\n   * @param contact The contact object containing updated information.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n   */\n  async updateContact(contact: Contact): Promise {\n    if (contact.id != -1 && this.authService.currentUser) {\n      this.updateContactLocally(contact);\n      const url = environment.BASE_URL + 'contacts/' + contact.id + '/';\n      const body = contact.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } return;\n  }\n\n\n  /**\n   * Update a contact in the current user's contact list locally.\n   * This does not communicate with the server and only updates the in-memory contact list.\n   * @param contact The contact object containing updated information.\n   */\n  updateContactLocally(contact: Contact): void {\n    if (this.authService.currentUser && this.authService.currentUser.contacts) {\n      const contactsArrayIndex = this.authService.currentUser.contacts.findIndex(c => c.id == contact.id);\n      if (contactsArrayIndex >= 0) {\n        this.authService.currentUser.contacts[contactsArrayIndex] = contact;\n        this.contacts$.next();\n      } else {\n        console.error('Task with ID', contact.id, 'could not be updated (task not found).');\n      }\n    }\n  }\n\n\n  /**\n   * Delete a contact from the current user's contact list.\n   * Sends a DELETE request to the server to remove the contact, and also removes it locally.\n   * @param id The ID of the contact to be deleted.\n   * @returns A Promise resolving to the server's response, or undefined if no user is authenticated or the contact has no valid ID.\n   */\n  async deleteContact(id: number): Promise {\n    if (id != -1 && this.authService.currentUser) {\n      this.deleteContactLocally(id);\n      const url = environment.BASE_URL + 'contacts/' + id + '/';\n      return lastValueFrom(this.http.delete(url));\n    } return;\n  }\n\n\n  /**\n   * Delete a contact from the current user's contact list locally.\n   * This does not communicate with the server and only removes the contact from the in-memory contact list.\n   * @param id The ID of the contact to be removed locally.\n   */\n  deleteContactLocally(id: number): void {\n    if (this.authService.currentUser && this.authService.currentUser.contacts) {\n      const contactsArrayIndex = this.authService.currentUser.contacts.findIndex(c => c.id == id);\n      if (contactsArrayIndex >= 0) {\n        this.authService.currentUser.contacts.splice(contactsArrayIndex, 1);\n        this.contacts$.next();\n      } else {\n        console.error('Task with ID', id, 'could not be deleted (task not found).');\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/contacts/email/email.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a linked email address.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n            \n                styleUrl\n                ./email.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/contacts/email/email.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a linked email address.\n */\n@Component({\n  selector: 'app-email',\n  standalone: true,\n  imports: [],\n  templateUrl: './email.component.html',\n  styleUrl: './email.component.scss'\n})\nexport class EmailComponent {\n@Input() email: string = 'email';\n}\n\n    \n\n    \n        {{email}}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{email}}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GreetingComponent.html":{"url":"components/GreetingComponent.html","title":"component - GreetingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GreetingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/greeting/greeting.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a personalized greeting formula to the user, which also corresponds the time of day.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-greeting\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./greeting.component.html\n            \n\n\n\n            \n                styleUrl\n                ./greeting.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                authSub\n                            \n                            \n                                currentUserName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGreeting\n                            \n                            \n                                initUsername\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGreeting\n                        \n                    \n                \n            \n            \n                \ngetGreeting()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Generate greeting by time of day and user name\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                greeting formula (does not yet include actual user name)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initUsername\n                        \n                    \n                \n            \n            \n                \ninitUsername(currentUser: AppUser | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Initializes the username. The local user name is set to \"null\"\nin case guest log in is being used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            AppUser | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe currently active app user\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/greeting/greeting.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Sets up username initialization. Performs a subscription to consider\nthe case that the username * has not yet been loaded into the\nauthentication service upon component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/greeting/greeting.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from '../../../../models/app-user';\n\n\n/**\n * This component displays a personalized greeting formula to the user, which also corresponds the time of day. \n */\n@Component({\n  selector: 'app-greeting',\n  standalone: true,\n  imports: [],\n  templateUrl: './greeting.component.html',\n  styleUrl: './greeting.component.scss'\n})\nexport class GreetingComponent implements OnInit, OnDestroy {\n  private authService = inject(AuthService);\n  authSub = new Subscription();\n  currentUserName: string | null = null;\n\n\n  /**\n   * Sets up username initialization. Performs a subscription to consider\n   * the case that the username * has not yet been loaded into the\n   * authentication service upon component initialization.\n   */\n  ngOnInit(): void {\n    this.initUsername(this.authService.currentUser);\n    this.authSub = this.authService.currentUser$.subscribe((u: AppUser | null) => this.initUsername(u));\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.authSub.unsubscribe();\n  }\n\n\n  /**\n   * Initializes the username. The local user name is set to \"null\"\n   * in case guest log in is being used.\n   * @param {AppUser | null} currentUser - The currently active app user \n   */\n  initUsername(currentUser: AppUser | null): void {\n    if (currentUser && currentUser.user.email.length > 0) {\n      this.currentUserName = currentUser.user.username;\n    } else {\n      this.currentUserName = null;\n    }\n  }\n\n\n  /**\n   * Generate greeting by time of day and user name\n   * @returns greeting formula (does not yet include actual user name)\n   */\n  getGreeting(): string {\n    const currentHour = new Date().getHours();\n    let greeting: string = '';\n    if(currentHour \n    \n\n    \n        \n    {{getGreeting()}}\n    @if(currentUserName) {\n    {{currentUserName}}\n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{getGreeting()}}    @if(currentUserName) {    {{currentUserName}}    }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GreetingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the header.\nIt contains a badge for the active user and a dropdown menu for secondary navigation and logging out.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                displayDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateDropdown\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         AppUser | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayDropdown\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateDropdown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Log out via \"authService\" and navigate to landing page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Toggle dropdown menu and emit corresponding event to parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { AppUser } from '../../../models/app-user';\nimport { PersonBadgeComponent } from '../../templates/person-badge/person-badge.component';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n\n/**\n * This component displays the header.\n * It contains a badge for the active user and a dropdown menu for secondary navigation and logging out.\n */\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, RouterModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  @Input() currentUser?: AppUser | null;\n  @Input() displayDropdown: boolean = false;\n  @Output() updateDropdown = new EventEmitter();\n  private authService = inject(AuthService);\n  private router = inject(Router); \n\n\n  /**\n   * Toggle dropdown menu and emit corresponding event to parent component\n   */\n  toggleDropdown() {\n    this.displayDropdown = !this.displayDropdown;\n    this.updateDropdown.emit(this.displayDropdown);\n  }\n\n\n  /**\n   * Log out via \"authService\" and navigate to landing page\n   */\n  logOut() {\n    this.authService.logOut();\n    this.router.navigate((['']));\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    Kanban Project Management Tool\n    \n        \n            \n        \n        @if(currentUser) {\n        \n        }\n    \n    \n        Help\n        Legal notice\n        Privacy policy\n        Log out\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kanban Project Management Tool                                        @if(currentUser) {                }                Help        Legal notice        Privacy policy        Log out    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeadlineOtherComponent.html":{"url":"components/HeadlineOtherComponent.html","title":"component - HeadlineOtherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeadlineOtherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/headline-other/headline-other.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a headline together with a functional inline arrow back button.\nIt is to be used for the components in the \"app/other\" directory.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-headline-other\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ArrowBackBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./headline-other.component.html\n            \n\n\n\n            \n                styleUrl\n                ./headline-other.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBackClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headline\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-other/headline-other.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBackClick\n                        \n                    \n                \n            \n            \n                \nonBackClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/headline-other/headline-other.component.ts:29\n                        \n                    \n\n\n            \n                \n                        On arrow back click, navigate...\n\nto the summary page if logged in\nto the general landing page if not logged in\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/headline-other/headline-other.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/headline-other/headline-other.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, inject } from '@angular/core';\nimport { ArrowBackBtnComponent } from '../arrow-back-btn/arrow-back-btn.component';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n\n/**\n * This component displays a headline together with a functional inline arrow back button.\n * It is to be used for the components in the \"app/other\" directory.\n */\n@Component({\n  selector: 'app-headline-other',\n  standalone: true,\n  imports: [ArrowBackBtnComponent],\n  templateUrl: './headline-other.component.html',\n  styleUrl: './headline-other.component.scss'\n})\nexport class HeadlineOtherComponent {\n  @Input() headline: string = '';\n  private router = inject(Router);\n  private authService = inject(AuthService);\n\n\n  /**\n   * On arrow back click, navigate...\n   * - to the summary page if logged in\n   * - to the general landing page if not logged in\n   */\n  onBackClick() {\n    const uid = this.authService.getCurrentUid();\n    uid ? this.router.navigate((['/summary'])) : this.router.navigate((['']));\n  }\n}\n    \n\n    \n        \n    {{headline}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{headline}}    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeadlineOtherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeadlineSloganComponent.html":{"url":"components/HeadlineSloganComponent.html","title":"component - HeadlineSloganComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeadlineSloganComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/headline-slogan/headline-slogan.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a headline together with an additional slogan.\nThey are separated by a blue separator.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-headline-slogan\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./headline-slogan.component.html\n            \n\n\n\n            \n                styleUrl\n                ./headline-slogan.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headline\n                            \n                            \n                                slogan\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-slogan/headline-slogan.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slogan\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/headline-slogan/headline-slogan.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a headline together with an additional slogan.\n * They are separated by a blue separator.\n */\n@Component({\n  selector: 'app-headline-slogan',\n  standalone: true,\n  imports: [],\n  templateUrl: './headline-slogan.component.html',\n  styleUrl: './headline-slogan.component.scss'\n})\nexport class HeadlineSloganComponent {\n@Input() headline: string = '';\n@Input() slogan: string = '';\n}\n\n    \n\n    \n        \n    {{headline}}\n    \n    {{slogan}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{headline}}        {{slogan}}    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeadlineSloganComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/help/help.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a join usage manual\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeadlineOtherComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n            \n                styleUrl\n                ./help.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeadlineOtherComponent } from '../../templates/headline-other/headline-other.component';\nimport { EmailComponent } from '../../main/contacts/email/email.component';\n\n\n/**\n * This component displays a join usage manual\n */\n@Component({\n  selector: 'app-help',\n  standalone: true,\n  imports: [HeadlineOtherComponent, EmailComponent],\n  templateUrl: './help.component.html',\n  styleUrl: './help.component.scss'\n})\nexport class HelpComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n        Welcome to the help page for Join, your\n        guide to using our kanban project management tool. Here, we'll\n        provide an overview of what Join is, how\n        it can benefit you, and how to use it.\n    \n    What is Join?\n    \n        Join is a kanban-based project management\n        tool designed and built by a group of dedicated students as part of\n        their web development bootcamp at the Developer Akademie.\n        Kanban, a Japanese term meaning \"billboard\", is a highly\n        effective method to visualize work, limit work-in-progress, and\n        maximize efficiency (or flow).\n        Join leverages the principles of kanban\n        to help users manage their tasks and projects in an intuitive,\n        visual interface.\n        It is important to note that\n        Join is designed as an educational\n        exercise and is not intended for extensive business usage. While we\n        strive to ensure the best possible user experience, we cannot\n        guarantee consistent availability, reliability, accuracy, or other\n        aspects of quality regarding Join.\n    \n    How to use it\n    \n        Here is a step-by-step guide on how to use\n        Join:\n    \n    \n        \n            \n                Exploring the board\n                When you log in to Join, you'll find a\n                default board. This board represents your project and contains\n                four default lists: \"To Do\", \"In Progress\", “Await feedback” and\n                \"Done\".\n            \n        \n        \n            \n                Creating contacts\n                In Join,\n                you can add contacts to collaborate on your projects. Go to the\n                \"Contacts\" section, click on \"New contact\", and fill in the\n                required information. Once added, these contacts can be assigned\n                tasks and they can interact with the tasks on the board.\n            \n        \n        \n            \n                Adding cards\n                Now that you've added your contacts,\n                you can start adding cards. Cards represent individual tasks.\n                Click the \"+\" button under the appropriate list to create a new\n                card. Fill in the task details in the card, like task name,\n                description, due date, assignees, etc.\n            \n        \n        \n            \n                Moving cards\n                As the task moves from one stage to\n                another, you can reflect that on the board by dragging and\n                dropping the card from one list to another.\n            \n        \n        \n            \n                Deleting cards\n                Once a task is completed, you can\n                either move it to the \"Done\" list or delete it. Deleting a card\n                will permanently remove it from the board. Please exercise caution\n                when deleting cards, as this action is irreversible. Remember that\n                using Join effectively requires\n                consistent updates from you and your team to ensure the board\n                reflects the current state of your project. Have more questions\n                about Join? Feel free to contact us at:\n                \n                \n                We're here to help you!\n            \n        \n    \n    \n        Enjoy using Join!\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Welcome to the help page for Join, your        guide to using our kanban project management tool. Here, we\\'ll        provide an overview of what Join is, how        it can benefit you, and how to use it.        What is Join?            Join is a kanban-based project management        tool designed and built by a group of dedicated students as part of        their web development bootcamp at the Developer Akademie.        Kanban, a Japanese term meaning \"billboard\", is a highly        effective method to visualize work, limit work-in-progress, and        maximize efficiency (or flow).        Join leverages the principles of kanban        to help users manage their tasks and projects in an intuitive,        visual interface.        It is important to note that        Join is designed as an educational        exercise and is not intended for extensive business usage. While we        strive to ensure the best possible user experience, we cannot        guarantee consistent availability, reliability, accuracy, or other        aspects of quality regarding Join.        How to use it            Here is a step-by-step guide on how to use        Join:                                            Exploring the board                When you log in to Join, you\\'ll find a                default board. This board represents your project and contains                four default lists: \"To Do\", \"In Progress\", “Await feedback” and                \"Done\".                                                        Creating contacts                In Join,                you can add contacts to collaborate on your projects. Go to the                \"Contacts\" section, click on \"New contact\", and fill in the                required information. Once added, these contacts can be assigned                tasks and they can interact with the tasks on the board.                                                        Adding cards                Now that you\\'ve added your contacts,                you can start adding cards. Cards represent individual tasks.                Click the \"+\" button under the appropriate list to create a new                card. Fill in the task details in the card, like task name,                description, due date, assignees, etc.                                                        Moving cards                As the task moves from one stage to                another, you can reflect that on the board by dragging and                dropping the card from one list to another.                                                        Deleting cards                Once a task is completed, you can                either move it to the \"Done\" list or delete it. Deleting a card                will permanently remove it from the board. Please exercise caution                when deleting cards, as this action is irreversible. Remember that                using Join effectively requires                consistent updates from you and your team to ensure the board                reflects the current state of your project. Have more questions                about Join? Feel free to contact us at:                                                We\\'re here to help you!                                    Enjoy using Join!        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalNoticeComponent.html":{"url":"components/LegalNoticeComponent.html","title":"component - LegalNoticeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalNoticeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/legal-notice/legal-notice.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a join legal notice\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-notice\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeadlineOtherComponent\n                                EmailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./legal-notice.component.html\n            \n\n\n\n            \n                styleUrl\n                ./legal-notice.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HeadlineOtherComponent } from '../../templates/headline-other/headline-other.component';\nimport { EmailComponent } from '../../main/contacts/email/email.component';\n\n\n/**\n * This component displays a join legal notice\n */\n@Component({\n  selector: 'app-legal-notice',\n  standalone: true,\n  imports: [HeadlineOtherComponent, EmailComponent],\n  templateUrl: './legal-notice.component.html',\n  styleUrl: './legal-notice.component.scss'\n})\nexport class LegalNoticeComponent {\n\n}\n\n    \n\n    \n        \n    \n    Imprint\n    \n        Bengt Früchtenicht, Daniel Schneider, Frederic Paetzold, Marcel Schiller\n        Unterm Berg 38b\n        26123 Oldenburg\n    \n    Exploring the Board\n    \n    Acceptance of terms\n    \n        By accessing and using Join (Product), you acknowledge and agree to the following terms and conditions, and any\n        policies, guidelines, or amendments thereto that may be presented to you from time to time. We, the listed\n        students, may update or change the terms and conditions from time to time without notice.\n    \n    Scope and ownership of the product\n    \n        Join has been developed as part of a student group project in a web development bootcamp at the Developer\n        Akademie GmbH. It has an educational purpose and is not intended for extensive personal & business usage. As\n        such, we cannot guarantee consistent availability, reliability, accuracy, or any other aspect of quality\n        regarding this Product.\n\n        The design of Join is owned by the Developer Akademie GmbH. Unauthorized use, reproduction, modification,\n        distribution, or replication of the design is strictly prohibited.\n    \n    Proprietary rights\n    \n        Aside from the design owned by Developer Akademie GmbH, we, the listed students, retain all proprietary rights\n        in Join, including any associated copyrighted material, trademarks, and other proprietary information.\n    \n    Use of the product\n    \n        Join is intended to be used for lawful purposes only, in accordance with all applicable laws and regulations.\n        Any use of Join for illegal activities, or to harass, harm, threaten, or intimidate another person, is strictly\n        prohibited. You are solely responsible for your interactions with other users of Join.\n    \n    Disclaimer of warranties and limitation of liability\n    \n        Join is provided \"as is\" without warranty of any kind, whether express or implied,\n        including but not limited to the implied warranties of merchantability, fitness for a particular purpose,\n        and non-infringement. In no event\n        will we, the listed students, or the Developer Akademie, be liable for any direct, indirect, incidental,\n        special, consequential or exemplary damages, including but not limited to, damages for loss of profits,\n        goodwill, use, data, or other intangible losses, even if we have been advised of the possibility of such\n        damages, arising out of or in connection with the use or performance of Join.\n    \n    Indemnity\n    \n        You agree to indemnify, defend and hold harmless us, the listed students, the Developer Akademie, and our\n        affiliates, partners, officers, directors, agents, and employees, from and against any claim, demand, loss,\n        damage, cost, or liability (including reasonable legal fees) arising out of or relating to your use of Join\n        and/or your breach of this Legal Notice.\n        For any questions or notices, please contact us at .\n        Date: July 26, 2023\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Imprint            Bengt Früchtenicht, Daniel Schneider, Frederic Paetzold, Marcel Schiller        Unterm Berg 38b        26123 Oldenburg        Exploring the Board        Acceptance of terms            By accessing and using Join (Product), you acknowledge and agree to the following terms and conditions, and any        policies, guidelines, or amendments thereto that may be presented to you from time to time. We, the listed        students, may update or change the terms and conditions from time to time without notice.        Scope and ownership of the product            Join has been developed as part of a student group project in a web development bootcamp at the Developer        Akademie GmbH. It has an educational purpose and is not intended for extensive personal & business usage. As        such, we cannot guarantee consistent availability, reliability, accuracy, or any other aspect of quality        regarding this Product.        The design of Join is owned by the Developer Akademie GmbH. Unauthorized use, reproduction, modification,        distribution, or replication of the design is strictly prohibited.        Proprietary rights            Aside from the design owned by Developer Akademie GmbH, we, the listed students, retain all proprietary rights        in Join, including any associated copyrighted material, trademarks, and other proprietary information.        Use of the product            Join is intended to be used for lawful purposes only, in accordance with all applicable laws and regulations.        Any use of Join for illegal activities, or to harass, harm, threaten, or intimidate another person, is strictly        prohibited. You are solely responsible for your interactions with other users of Join.        Disclaimer of warranties and limitation of liability            Join is provided \"as is\" without warranty of any kind, whether express or implied,        including but not limited to the implied warranties of merchantability, fitness for a particular purpose,        and non-infringement. In no event        will we, the listed students, or the Developer Akademie, be liable for any direct, indirect, incidental,        special, consequential or exemplary damages, including but not limited to, damages for loss of profits,        goodwill, use, data, or other intangible losses, even if we have been advised of the possibility of such        damages, arising out of or in connection with the use or performance of Join.        Indemnity            You agree to indemnify, defend and hold harmless us, the listed students, the Developer Akademie, and our        affiliates, partners, officers, directors, agents, and employees, from and against any claim, demand, loss,        damage, cost, or liability (including reasonable legal fees) arising out of or relating to your use of Join        and/or your breach of this Legal Notice.        For any questions or notices, please contact us at .        Date: July 26, 2023        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalNoticeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogInPageComponent.html":{"url":"components/LogInPageComponent.html","title":"component - LogInPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogInPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/log-in-page/log-in-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component represents the log in/sign up page, which serves as the general landing page.\nIt includes the intro animation and manages the login and registration modes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-in-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RegistrationFormComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./log-in-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./log-in-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                formMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFormMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/log-in-page/log-in-page.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component.\nIt disables the intro animation after 800 milliseconds.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFormMode\n                        \n                    \n                \n            \n            \n                \ntoggleFormMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/log-in-page/log-in-page.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Toggles the form mode between 'Log in' and 'Sign up' in the registration form component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/log-in-page/log-in-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"Log in\" | \"Sign up\"\n\n                    \n                \n                \n                    \n                        Default value : 'Log in'\n                    \n                \n                    \n                        \n                                Defined in src/app/log-in-page/log-in-page.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { RouterModule } from '@angular/router';\n\n\n/**\n * @component\n * This component represents the log in/sign up page, which serves as the general landing page. \n * It includes the intro animation and manages the login and registration modes.\n */\n@Component({\n  selector: 'app-log-in-page',\n  standalone: true,\n  imports: [CommonModule, RegistrationFormComponent, RouterModule],\n  templateUrl: './log-in-page.component.html',\n  styleUrl: './log-in-page.component.scss'\n})\nexport class LogInPageComponent implements OnInit {\n  animate: boolean = true;\n  formMode: 'Log in' | 'Sign up' = 'Log in';\n\n\n  /**\n   * Lifecycle hook that initializes the component.\n   * It disables the intro animation after 800 milliseconds.\n   */\n  ngOnInit() {\n    setTimeout(() => this.animate = false, 800);\n  }\n\n\n  /**\n   * Toggles the form mode between 'Log in' and 'Sign up' in the registration form component.\n   */\n  toggleFormMode() {\n    this.formMode == 'Log in' ? this.formMode = 'Sign up' : this.formMode = 'Log in';\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n        \n    \n    @if(formMode == 'Log in') {\n        \n    } @else {\n        \n    }\n    \n        \n            Not a Join user?\n            Sign up\n        \n        \n            \n                Privacy policy\n            \n            \n                Legal notice\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    @if(formMode == \\'Log in\\') {            } @else {            }                        Not a Join user?            Sign up                                            Privacy policy                                        Legal notice                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogInPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/menu/menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the primary menu.\nIt is supposed to be constantly visible when the user is logged in.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/menu/menu.component.ts:17\n                            \n                        \n\n                \n                    \n                            Create router instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentRoute\n                        \n                    \n                \n            \n            \n                \ngetCurrentRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/menu/menu.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Get current router route\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                current url\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\n\n\n/**\n * This component displays the primary menu.\n * It is supposed to be constantly visible when the user is logged in.\n */\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss'\n})\nexport class MenuComponent {\n\n\n  /**\n   * Create router instance\n   * @param router instance of Router\n   */\n  constructor(private router: Router ) {}\n\n\n  /**\n   * Get current router route\n   * @returns current url\n   */\n  getCurrentRoute() {\n    return this.router.url;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n            Summary\n        \n        \n            \n            Add Task\n        \n        \n            \n            Board\n        \n        \n            \n            Contacts\n        \n    \n    \n        Privacy policy\n        Legal notice\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Summary                                        Add Task                                        Board                                        Contacts                        Privacy policy        Legal notice    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordIconComponent.html":{"url":"components/PasswordIconComponent.html","title":"component - PasswordIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/password-icon/password-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the icon marking a password input field.\nDepending on the input state, there a three different icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-icon\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/password-icon/password-icon.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays the icon marking a password input field.\n * Depending on the input state, there a three different icons.\n */\n@Component({\n  selector: 'app-password-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './password-icon.component.html',\n  styleUrl: './password-icon.component.scss'\n})\nexport class PasswordIconComponent {\n@Input() state: 'default' | 'password' | 'text' = 'default';\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonBadgeComponent.html":{"url":"components/PersonBadgeComponent.html","title":"component - PersonBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/person-badge/person-badge.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a badge showing a Person's initials and individual background color.\nThere are some optional variables for styling in different contexts.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person-badge\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./person-badge.component.html\n            \n\n\n\n            \n                styleUrl\n                ./person-badge.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                currentUser\n                            \n                            \n                                large\n                            \n                            \n                                name\n                            \n                            \n                                responsive\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#d1d1d1'\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        large\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        responsive\n                    \n                \n                \n                    \n                        Type :     \"desktop\" | \"mobile\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/person-badge/person-badge.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/person-badge/person-badge.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Get capitalized initials from \"name\"\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                initials\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a badge showing a Person's initials and individual background color.\n * There are some optional variables for styling in different contexts. \n */\n@Component({\n  selector: 'app-person-badge',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './person-badge.component.html',\n  styleUrl: './person-badge.component.scss'\n})\nexport class PersonBadgeComponent {\n  @Input() name: string = '';\n  @Input() color: string = '#d1d1d1';\n  @Input() large?: boolean;\n  @Input() currentUser?: boolean;\n  @Input() responsive?: 'desktop' | 'mobile';\n\n\n  /**\n   * Get capitalized initials from \"name\"\n   * @returns initials\n   */\n  getInitials() {\n    const nameParts: string[] = this.name.split(' ');\n    const capitalized = nameParts.map(part => part.charAt(0).toUpperCase()).join('');\n    return capitalized.substring(0,3);\n  }\n}\n\n    \n\n    \n        \n    @if(name && name.length > 0) {\n    {{getInitials()}}\n    } @else {\n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(name && name.length > 0) {    {{getInitials()}}    } @else {        }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrioIconComponent.html":{"url":"components/PrioIconComponent.html","title":"component - PrioIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrioIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/prio-icon/prio-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a priority icon (i.e., one of three icons corresponding to the three priority values).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-prio-icon\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./prio-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./prio-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                prio\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        prio\n                    \n                \n                \n                    \n                        Type :     \"Urgent\" | \"Medium\" | \"Low\" | string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/prio-icon/prio-icon.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a priority icon (i.e., one of three icons corresponding to the three priority values).\n */\n@Component({\n  selector: 'app-prio-icon',\n  standalone: true,\n  imports: [],\n  templateUrl: './prio-icon.component.html',\n  styleUrl: './prio-icon.component.scss'\n})\nexport class PrioIconComponent {\n@Input() prio: 'Urgent' | 'Medium' | 'Low' | '' = '';\n}\n\n    \n\n    \n        @if(prio == 'Urgent') {\n\n} @else if(prio == 'Medium') {\n\n} @else if(prio == 'Low') {\n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(prio == \\'Urgent\\') {} @else if(prio == \\'Medium\\') {} @else if(prio == \\'Low\\') {}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrioIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/other/reset-password/reset-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a reset password form.\nThe component requires a reset password token (named \"token\") to be read from the route parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            FormsModule\n                                PasswordIconComponent\n                                ToastNotificationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authError\n                            \n                            \n                                formData\n                            \n                            \n                                paramSub\n                            \n                            \n                                    \n                                passwordConfirmationContainerRef\n                            \n                            \n                                passwordConfirmationFieldType\n                            \n                            \n                                    \n                                passwordContainerRef\n                            \n                            \n                                passwordFieldType\n                            \n                            \n                                showToastMsg\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPasswordConfirmation\n                            \n                            \n                                focusLastCharacter\n                            \n                            \n                                getFieldContainerRefInput\n                            \n                            \n                                isValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordFieldType\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                transferAfterReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/other/reset-password/reset-password.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordConfirmation\n                        \n                    \n                \n            \n            \n                \ncheckPasswordConfirmation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Check if both passwords match each other.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Password confirmation check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusLastCharacter\n                        \n                    \n                \n            \n            \n                \nfocusLastCharacter(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Focus the last position of the input element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input field\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldContainerRefInput\n                        \n                    \n                \n            \n            \n                \ngetFieldContainerRefInput(containerRef: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Get the input field HTML element from the reference to the parent element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                containerRef\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nReference to the parent container\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLInputElement\n\n                        \n                            \n                                The corresponding input element\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValid\n                        \n                    \n                \n            \n            \n                \nisValid(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Check if the registration form is valid, including custom password confirmation validation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Validation check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves the reset password token from the URL/route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Submit the registration form according to the current form mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration form\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordFieldType\n                        \n                    \n                \n            \n            \n                \ntogglePasswordFieldType(type: \"password\" | \"text\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Toggle the type variable of a password input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                        \"password\" | \"text\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML type attribute value in the input element\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"password\" | \"text\"\n\n                        \n                            \n                                The toggled attribute value\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(field: \"password\" | \"confirmation\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Toggle password visibility and re-focus the input field afterwards.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                        \"password\" | \"confirmation\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password or confirmation field identifier\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferAfterReset\n                        \n                    \n                \n            \n            \n                \ntransferAfterReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/other/reset-password/reset-password.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Transfer to the login form after resetting the password, displaying a toast notification.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    password: '',\n    passwordConfirmation: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paramSub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordConfirmationContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordConfirmationContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordConfirmationFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordFieldType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"password\" | \"text\"\n\n                    \n                \n                \n                    \n                        Default value : 'password'\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToastMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/other/reset-password/reset-password.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { PasswordIconComponent } from '../../templates/password-icon/password-icon.component';\nimport { ToastNotificationComponent } from '../../templates/toast-notification/toast-notification.component';\nimport { AuthService } from '../../services/auth.service';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * This component displays a reset password form.\n * The component requires a reset password token (named \"token\") to be read from the route parameters.\n */\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, PasswordIconComponent, ToastNotificationComponent],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent implements OnInit {\n  passwordFieldType: 'password' | 'text' = 'password';\n  passwordConfirmationFieldType: 'password' | 'text' = 'password';\n  @ViewChild('passwordContainer') passwordContainerRef!: ElementRef;\n  @ViewChild('passwordConfirmationContainer') passwordConfirmationContainerRef!: ElementRef;\n  formData = {\n    password: '',\n    passwordConfirmation: ''\n  };\n  token: string | null = null;\n  authError: string = '';\n  showToastMsg: boolean = false;\n  paramSub = new Subscription();\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Retrieves the reset password token from the URL/route.\n   */\n  ngOnInit(): void {\n    this.paramSub = this.route.paramMap.subscribe(params => {\n      this.token = params.get('token');\n      this.paramSub.unsubscribe();\n    });\n  }\n\n\n  /**\n   * Toggle password visibility and re-focus the input field afterwards.\n   * @param {'password' | 'confirmation'} field - The password or confirmation field identifier\n   */\n  toggleVisibility(field: 'password' | 'confirmation') {\n    if (field == 'password' && this.formData.password.length > 0) {\n      this.passwordFieldType = this.togglePasswordFieldType(this.passwordFieldType);\n      this.focusLastCharacter(this.getFieldContainerRefInput(this.passwordContainerRef));\n    } else if (this.formData.passwordConfirmation.length > 0) {\n      this.passwordConfirmationFieldType = this.togglePasswordFieldType(this.passwordConfirmationFieldType);\n      this.focusLastCharacter(this.getFieldContainerRefInput(this.passwordConfirmationContainerRef));\n    }\n  }\n\n\n  /**\n   * Get the input field HTML element from the reference to the parent element.\n   * @param {ElementRef} containerRef - Reference to the parent container\n   * @returns {HTMLInputElement} The corresponding input element\n   */\n  getFieldContainerRefInput(containerRef: ElementRef): HTMLInputElement {\n    return containerRef.nativeElement.getElementsByTagName('input')[0];\n  }\n\n\n  /**\n   * Focus the last position of the input element.\n   * @param {HTMLInputElement} input - The input field\n   */\n  focusLastCharacter(input: HTMLInputElement) {\n    setTimeout(() => {\n      input.focus();\n      input.setSelectionRange(input.value.length, input.value.length);\n    });\n  }\n\n\n  /**\n   * Toggle the type variable of a password input field.\n   * @param {'password' | 'text'} type - The HTML type attribute value in the input element\n   * @returns {'password' | 'text'} The toggled attribute value\n   */\n  togglePasswordFieldType(type: 'password' | 'text') {\n    return type == 'password' ? 'text' : 'password';\n  }\n\n\n  /**\n   * Submit the registration form according to the current form mode.\n   * @param {NgForm} form - The registration form\n   */\n  onSubmit(form: NgForm) {\n    if (form.submitted && this.isValid(form) && this.token) {\n      this.authService.resetPassword(this.formData.password, this.token)\n        .then((resp: any) => {console.log(resp); this.transferAfterReset()})\n        .catch((err) => this.authError = 'Oops! Something went wrong');\n    }\n  }\n\n\n  /**\n   * Check if the registration form is valid, including custom password confirmation validation.\n   * @param {NgForm} form - The registration form\n   * @returns {boolean} Validation check result\n   */\n  isValid(form: NgForm): boolean {\n    return form.form.valid && this.checkPasswordConfirmation();\n  }\n\n\n  /**\n   * Check if both passwords match each other.\n   * @returns {boolean} Password confirmation check result\n   */\n  checkPasswordConfirmation(): boolean {\n    return this.formData.password == this.formData.passwordConfirmation\n  }\n\n\n  /**\n   * Transfer to the login form after resetting the password, displaying a toast notification.\n   */\n  transferAfterReset() {\n    this.showToastMsg = true;\n    setTimeout(() => this.router.navigate(['']), 700);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n        Reset Password\n         0}\">\n            \n            @if(formData.password.length > 0) {\n            \n            }\n            @else {\n            \n            }\n            @if((password.touched || resetPasswordForm.submitted) && !password.valid) {\n            @if(password.value.length Your password must contain at least 6 characters. }\n                @else { Please enter a valid password.}\n                }\n        \n         0}\">\n            \n            @if(formData.passwordConfirmation.length > 0) {\n            \n            }\n            @else {\n            \n            }\n            @if(passwordConfirmation.touched && !checkPasswordConfirmation()) {\n            Oops! Your passwords don\\'t match.\n            } @else if(authError.includes('wrong')) {\n            {{authError}}\n            }\n        \n        Submit\n    \n    \n        \n            \n                Privacy policy\n            \n            \n                Legal notice\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Reset Password         0}\">                        @if(formData.password.length > 0) {                        }            @else {                        }            @if((password.touched || resetPasswordForm.submitted) && !password.valid) {            @if(password.value.length Your password must contain at least 6 characters. }                @else { Please enter a valid password.}                }                 0}\">                        @if(formData.passwordConfirmation.length > 0) {                        }            @else {                        }            @if(passwordConfirmation.touched && !checkPasswordConfirmation()) {            Oops! Your passwords don\\\\'t match.            } @else if(authError.includes(\\'wrong\\')) {            {{authError}}            }                Submit                                            Privacy policy                                        Legal notice                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideComponent.html":{"url":"components/SlideComponent.html","title":"component - SlideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/slide/slide.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is set up to slide in upon initialization and to slide out upon closing.\nFor the sliding to work, it requires certain [ngClass] settings.\nThe closing method (in the parent component or in a component class extending this component) also requires a 125ms timeout\nto prevent the slide component from disappearing immediately.\nIt is also recommended to use it within an overlay.\nExample of usage:\n\n    \n    \n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slide\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./slide.component.html\n            \n\n\n\n            \n                styleUrl\n                ./slide.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/slide/slide.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/slide/slide.component.ts:36\n                        \n                    \n\n\n            \n                \n                        When in translated state, slide in.\nThe timeout is only used as a workaround.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/templates/slide/slide.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/templates/slide/slide.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, OnInit } from '@angular/core';\n\n\n/**\n * This component is set up to slide in upon initialization and to slide out upon closing.\n * For the sliding to work, it requires certain [ngClass] settings.\n * The closing method (in the parent component or in a component class extending this component) also requires a 125ms timeout\n * to prevent the slide component from disappearing immediately. \n * It is also recommended to use it within an overlay.\n * \n * Example of usage:\n * \n * \n *     \n *     \n * \n */\n@Component({\n  selector: 'app-slide',\n  standalone: true,\n  imports: [],\n  templateUrl: './slide.component.html',\n  styleUrl: './slide.component.scss'\n})\nexport class SlideComponent implements OnInit {\n  translated: boolean = true;\n  @Output() slide = new EventEmitter();\n\n\n  /**\n   * When in translated state, slide in.\n   * The timeout is only used as a workaround.\n   */\n  ngOnInit(): void {\n    if (this.translated) {setTimeout(() => this.slideInOut(), 1)}\n  }\n\n\n  /**\n   * Toggle translation state and emit slide event to the parent component\n   */\n  slideInOut() {\n    this.translated = !this.translated;\n    this.slide.emit();\n  }\n}\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"components/StatsItemComponent.html":{"url":"components/StatsItemComponent.html","title":"component - StatsItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/stats-item/stats-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a task statistics item as seen on the summary/landing page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./stats-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deadline\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/summary/stats-item/stats-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            Create instance of Router\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of Router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deadline\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/summary/stats-item/stats-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/stats-item/stats-item.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Navigate to \"board\" page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n/**\n * This component displays a task statistics item as seen on the summary/landing page\n */\n@Component({\n  selector: 'app-stats-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './stats-item.component.html',\n  styleUrl: './stats-item.component.scss'\n})\nexport class StatsItemComponent {\n@Input() name: string = '';\n@Input() value: number | string = 0;\n@Input() deadline: string = '';\n\n\n/**\n * Create instance of Router\n * @param router instance of Router\n */\nconstructor(private router: Router) {}\n\n\n/**\n * Navigate to \"board\" page\n */\ngoToBoard() {\n  this.router.navigate(['/board']);\n}\n}\n\n    \n\n    \n        \n    \n        @switch(name) {\n        @case('To do') {}\n        @case('Done') {}\n        @case('Urgent') {}\n        }\n    \n    \n        {{value}}\n        {{name}}\n    \n    @if(name == 'Urgent') {\n    \n    \n        {{deadline}}\n        Upcoming Deadline\n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @switch(name) {        @case(\\'To do\\') {}        @case(\\'Done\\') {}        @case(\\'Urgent\\') {}        }                {{value}}        {{name}}        @if(name == \\'Urgent\\') {                {{deadline}}        Upcoming Deadline        }'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subtask.html":{"url":"classes/Subtask.html","title":"class - Subtask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/subtask.ts\n        \n\n\n            \n                Description\n            \n            \n                This model represents a subtask\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                task_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/subtask.ts:8\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"Done\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/subtask.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/subtask.ts:28\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Subtask {\n    id: number;\n    task_id: number;\n    name: string;\n    status: 'To do' | 'Done';\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.task_id = obj.task ? obj.task : -1;\n        this.name = obj.name ? obj.name : '';\n        this.status = obj.status ? obj.status : 'To do';\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const json: any = {\n            task: this.task_id,\n            name: this.name,\n            status: this.status,\n        };\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubtaskComponent.html":{"url":"components/SubtaskComponent.html","title":"component - SubtaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SubtaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/add-task/subtask/subtask.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a Task's Subtask.\nIt shows the task ('name') in an editable manner.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subtask\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./subtask.component.html\n            \n\n\n\n            \n                styleUrl\n                ./subtask.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                    \n                                editInputRef\n                            \n                            \n                                    Private\n                                formSubscription\n                            \n                            \n                                previousName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                            \n                                deleteTask\n                            \n                            \n                                edit\n                            \n                            \n                                focusLastPosition\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formClick\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                taskChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formClick\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new Subtask({\n    name: 'Task created',\n    status: 'To do'\n  })\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/add-task/subtask/subtask.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Cancels subtask editing.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(enter?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Confirms subtask editing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                enter\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nkeydown.enter event\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Deletes this subtask.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Edits subtask. Saves previous name to redeem the subtask in case editing is aborted.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusLastPosition\n                        \n                    \n                \n            \n            \n                \nfocusLastPosition()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Focuses input element at last character.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Unsubscribes when component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/add-task/subtask/subtask.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Subscribes to form click observable from parent component; calls \"cancel()\" method in case the form is clicked directly.\nSaves previous task name to reload when editing is aborted.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main/add-task/subtask/subtask.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subtask } from '../../../../models/subtask';\nimport { FormsModule } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\n\n/**\n * @component\n * This component displays a Task's Subtask.\n * It shows the task ('name') in an editable manner.\n */\n@Component({\n  selector: 'app-subtask',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './subtask.component.html',\n  styleUrl: './subtask.component.scss'\n})\nexport class SubtaskComponent implements OnInit {\n  @Input() task = new Subtask({\n    name: 'Task created',\n    status: 'To do'\n  });\n  editing: boolean = false;\n  previousName: string = '';\n  @Output() taskChange = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  private formSubscription = new Subscription();\n  @Input() formClick = new Observable();\n  @ViewChild('editInput') editInputRef!: ElementRef;\n\n\n  /**\n   * Subscribes to form click observable from parent component; calls \"cancel()\" method in case the form is clicked directly.\n   * Saves previous task name to reload when editing is aborted.\n   */\n  ngOnInit() {\n    this.formSubscription = this.formClick.subscribe(() => this.cancel());\n    this.previousName = this.task.name;\n  }\n\n\n  /**\n   * Unsubscribes when component is destroyed.\n   */\n  ngOnDestroy() {\n    this.formSubscription.unsubscribe();\n  }\n\n\n  /**\n   * Edits subtask. Saves previous name to redeem the subtask in case editing is aborted.\n   */\n  edit() {\n    this.editing = true;\n    this.previousName = this.task.name;\n    this.focusLastPosition();\n  }\n\n\n  /**\n   * Focuses input element at last character.\n   */\n  focusLastPosition() {\n    setTimeout(() => {\n      const input: HTMLInputElement = this.editInputRef.nativeElement;\n      input.focus();\n      input.setSelectionRange(input.value.length, input.value.length);\n    }, 0);\n  }\n\n\n  /**\n   * Confirms subtask editing.\n   * @param {Event} enter - keydown.enter event\n   */\n  confirm(enter?: Event) {\n    if (enter && this.editInputRef.nativeElement == document.activeElement) { enter.stopPropagation() }\n    this.editing = false;\n    this.taskChange.emit(this.task);\n  }\n\n\n  /**\n   * Cancels subtask editing.\n   */\n  cancel() {\n    if (this.editing) {\n      this.task.name = this.previousName;\n      this.confirm();\n    }\n  }\n\n\n  /**\n   * Deletes this subtask.\n   */\n  deleteTask() {\n    this.delete.emit(true);\n  }\n}\n\n    \n\n    \n        \n    \n        @if(editing) {\n        \n        }\n        @else {\n        &bull;{{task.name}}\n        }\n    \n    \n        @if(!editing) {\n        \n            \n        \n        } @else {\n        \n            \n        \n        }\n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @if(editing) {                }        @else {        •{{task.name}}        }                @if(!editing) {                                    } @else {                                    }                                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubtaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SummaryComponent.html":{"url":"components/SummaryComponent.html","title":"component - SummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/summary/summary.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a statistical summary of the tasks in board-\nIt also displays a personalized greeting message.\nIn one-column layout, the greeting message is only visible as an introductory animation.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-summary\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                StatsItemComponent\n                                HeadlineSloganComponent\n                                GreetingComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./summary.component.html\n            \n\n\n\n            \n                styleUrl\n                ./summary.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                currentUserName\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                unsubAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredTasks\n                            \n                            \n                                getMostUrgent\n                            \n                            \n                                getTaskNumber\n                            \n                            \n                                getUrgent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                printDate\n                            \n                            \n                                subAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/summary/summary.component.ts:27\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by status\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMostUrgent\n                        \n                    \n                \n            \n            \n                \ngetMostUrgent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Among the tasks with \"urgent\" priority, get the closest deadline\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                closest \"due\" value\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskNumber\n                        \n                    \n                \n            \n            \n                \ngetTaskNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Get total number of tasks in board\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                number of tasks\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrgent\n                        \n                    \n                \n            \n            \n                \ngetUrgent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by \"urgent\" priority\n\n\n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Unsubscribe\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printDate\n                        \n                    \n                \n            \n            \n                \nprintDate(due: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Generate string from due value which writes out the month\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                due\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    due value (as to be found as task property)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                date as string in the desired format\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAuth\n                        \n                    \n                \n            \n            \n                \nsubAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/summary/summary.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Subscribe to \"authService.currentUser$\" to retrieve and setuser name.\nThe user name is set to \"null\" in case guest log in is being used.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                subscription\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/main/summary/summary.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy } from '@angular/core';\nimport { Task } from '../../../models/task';\nimport { TasksService } from '../../services/tasks.service';\nimport { AuthService } from '../../services/auth.service';\nimport { StatsItemComponent } from './stats-item/stats-item.component';\nimport { HeadlineSloganComponent } from '../../templates/headline-slogan/headline-slogan.component';\nimport { CommonModule } from '@angular/common';\nimport { GreetingComponent } from './greeting/greeting.component';\n\n\n/**\n * This component displays a statistical summary of the tasks in board-\n * It also displays a personalized greeting message.\n * In one-column layout, the greeting message is only visible as an introductory animation. \n */\n@Component({\n  selector: 'app-summary',\n  standalone: true,\n  imports: [CommonModule, StatsItemComponent, HeadlineSloganComponent, GreetingComponent],\n  templateUrl: './summary.component.html',\n  styleUrl: './summary.component.scss'\n})\nexport class SummaryComponent implements OnDestroy {\n  private authService = inject(AuthService);\n  unsubAuth;\n  private tasksService = inject(TasksService);\n  currentUserName: string | null = null;\n\n\n  /**\n   * Create subscription\n   */\n  constructor() {\n    this.unsubAuth = this.subAuth;\n  }\n\n\n  /**\n   * Unsubscribe\n   */\n  ngOnDestroy(): void {\n    this.unsubAuth();\n  }\n\n\n  /**\n   * Subscribe to \"authService.currentUser$\" to retrieve and setuser name.\n   * The user name is set to \"null\" in case guest log in is being used.\n   * @returns subscription\n   */\n  subAuth() {\n    return this.authService.currentUser$.subscribe(u => this.currentUserName = (u ? u.user.username : null));\n  }\n\n\n  /**\n   * Get tasks filtered by status\n   * @param status task status\n   * @returns filtered tasks array\n   */\n  getFilteredTasks(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): Task[] {\n    return this.tasksService.getFilteredTasks(status);\n  }\n\n\n  /**\n   * Get tasks filtered by \"urgent\" priority\n   * @returns filtered tasks array\n   */\n  getUrgent(): Task[] {\n    return this.tasksService.tasks.filter(t => t.prio == 'Urgent');\n  }\n\n\n  /**\n   * Get total number of tasks in board\n   * @returns number of tasks\n   */\n  getTaskNumber(): number {\n    return this.tasksService.tasks.length;\n  }\n\n\n  /**\n   * Among the tasks with \"urgent\" priority, get the closest deadline\n   * @returns closest \"due\" value\n   */\n  getMostUrgent(): string {\n    if (this.tasksService.tasks.length > 0) {\n      let tasks: Task[] = this.getUrgent();\n      if (tasks.length == 0) { tasks = this.tasksService.tasks }\n      tasks.sort((a, b) => { return a.due.localeCompare(b.due) });\n      return tasks[0].due;\n    } else return '';\n  }\n\n\n  /**\n   * Generate string from due value which writes out the month\n   * @param due due value (as to be found as task property)\n   * @returns date as string in the desired format\n   */\n  printDate(due: string): string {\n    if (due.length > 0) {\n      const date = new Date(due);\n      const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const month = months[date.getMonth()];\n      const day = date.getDate();\n      const year = date.getFullYear();\n      return month + ' ' + day + ', ' + year;\n    } else {\n      return 'None';\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n            \n            \n                \n            \n            \n                \n                \n                \n            \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/task.ts\n        \n\n\n            \n                Description\n            \n            \n                This model represents a task\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assigned\n                            \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                due\n                            \n                            \n                                id\n                            \n                            \n                                prio\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                subtasks\n                            \n                            \n                                timestamp\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDueToText\n                            \n                            \n                                isAssignedTo\n                            \n                            \n                                toJson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/task.ts:18\n                            \n                        \n\n                \n                    \n                            Create class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to initialize properties\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        assigned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         \"Technical Task\" | \"User Story\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        due\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | \"Urgent\" | \"Medium\" | \"Low\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subtasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subtask[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/task.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDueToText\n                        \n                    \n                \n            \n            \n                \ngetDueToText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:79\n                        \n                    \n\n\n            \n                \n                        Transform the default date format used for \"due\" (yyyy-mm-dd)\nto the text date format displayed to the user (dd/mm/yyyy)\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                transformed date string (or undefined if due is empty or does not exist)\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAssignedTo\n                        \n                    \n                \n            \n            \n                \nisAssignedTo(appUser: AppUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:69\n                        \n                    \n\n\n            \n                \n                        Check if this task is assigned to a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appUser\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJson\n                        \n                    \n                \n            \n            \n                \ntoJson()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/task.ts:46\n                        \n                    \n\n\n            \n                \n                        Converts the data to JSON format.\nIn detail, the data is formatted to meet the backend naming and requirements.\n\n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                data JSON\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AppUser } from '../models/app-user';\nimport { Subtask } from './subtask';\n\n\n/**\n * This model represents a task\n */\nexport class Task {\n    id: number;\n    title: string;\n    description: string = '';\n    assigned: number[] = [];\n    due: string;\n    prio: '' | 'Urgent' | 'Medium' | 'Low';\n    category: 'Technical Task' | 'User Story';\n    subtasks?: Subtask[];\n    timestamp: number = Date.now();\n    status: 'To do' | 'In progress' | 'Await feedback' | 'Done';\n\n\n    /**\n     * Create class instance\n     * @param obj data to initialize properties\n     */\n    constructor(obj: any) {\n        this.id = obj.id ? obj.id : -1;\n        this.title = obj.title ? obj.title : '';\n        this.description = obj.description ? obj.description : '';\n        this.assigned = obj.assigned_to ? obj.assigned_to : [];\n        this.due = obj.due ? obj.due : getCurrentDate();\n        this.prio = obj.prio ? obj.prio : 'Medium';\n        this.category = obj.category ? obj.category : 'Technical Task';\n        this.status = obj.status ? obj.status : 'To Do';\n        if (obj.subtasks) {\n            this.subtasks = [];\n            obj.subtasks.forEach((sData: any) => this.subtasks?.push(new Subtask(sData)));\n        }\n    }\n\n\n    /**\n     * Converts the data to JSON format.\n     * In detail, the data is formatted to meet the backend naming and requirements.\n     * @returns data JSON\n     */\n    toJson(): {} {\n        const jsonSubtasks: {}[] = [];\n        this.subtasks?.forEach(s => jsonSubtasks.push(s.toJson()));\n        const json: any = {\n            title: this.title,\n            description: this.description,\n            assigned_to: this.assigned,\n            due: this.due,\n            prio: this.prio,\n            category: this.category,\n            subtasks: jsonSubtasks,\n            status: this.status,\n        }\n        if (this.id != -1) { json.id = this.id }\n        return json;\n    }\n\n\n    /**\n     * Check if this task is assigned to a user\n     * @param user user to check for\n     * @returns check result\n     */\n    isAssignedTo(appUser: AppUser): boolean {\n        return this.assigned ? this.assigned.includes(appUser.id) : false;\n    }\n\n\n    /**\n     * Transform the default date format used for \"due\" (yyyy-mm-dd)\n     * to the text date format displayed to the user (dd/mm/yyyy)\n     * @returns transformed date string (or undefined if due is empty or does not exist)\n     */\n    getDueToText(): string | undefined {\n        if (this.due && this.due.length > 0) {\n            const parts = this.due.split('-');\n            const year = parts[0];\n            let month: string | number = parseInt(parts[1]);\n            let day: string | number = parseInt(parts[2]);\n            month = (month \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskCardComponent.html":{"url":"components/TaskCardComponent.html","title":"component - TaskCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-list/task-card/task-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a task as a small card which can be clicked to edit.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                PersonBadgeComponent\n                                TaskCategoryComponent\n                                PrioIconComponent\n                                ArrowBackBtnComponent\n                                CloseBtnComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayDropdown\n                            \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSubtasksDoneNumber\n                            \n                            \n                                isBreak\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printDescription\n                            \n                            \n                                setStatus\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeDropdown\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeDropdown\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : new Task('')\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-card.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtasksDoneNumber\n                        \n                    \n                \n            \n            \n                \ngetSubtasksDoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:81\n                        \n                    \n\n\n            \n                \n                        This function returns the number of subtasks whose status is set to \"Done\"\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                \"Done\" number\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBreak\n                        \n                    \n                \n            \n            \n                \nisBreak(char: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Check if a character marks a cesura/break between words\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                char\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    character to check\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                check result\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Initialize users array and closing dropdown menu subscription\n(to react to clicks onto the \"board\" component)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printDescription\n                        \n                    \n                \n            \n            \n                \nprintDescription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:50\n                        \n                    \n\n\n            \n                \n                        This function prints the task description as displayed to the user.\nThe description is only to be displayed up to a certain length.\nThus, longer descriptions are cut off, which is signaled to the user by adding dots (\"...\").\n\n\n                        \n                            Returns :         String\n\n                        \n                            \n                                transformed description\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatus\n                        \n                    \n                \n            \n            \n                \nsetStatus(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-list/task-card/task-card.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-list/task-card/task-card.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, inject } from '@angular/core';\nimport { Task } from '../../../../../models/task';\nimport { UsersService } from '../../../../services/users.service';\nimport { PersonBadgeComponent } from '../../../../templates/person-badge/person-badge.component';\nimport { TaskCategoryComponent } from './task-category/task-category.component';\nimport { PrioIconComponent } from '../../../../templates/prio-icon/prio-icon.component';\nimport { ArrowBackBtnComponent } from '../../../../templates/arrow-back-btn/arrow-back-btn.component';\nimport { TasksService } from '../../../../services/tasks.service';\nimport { CloseBtnComponent } from '../../../../templates/close-btn/close-btn.component';\nimport { Observable } from 'rxjs';\nimport { AppUser } from '../../../../../models/app-user';\n\n\n/**\n * This component displays a task as a small card which can be clicked to edit.\n */\n@Component({\n  selector: 'app-task-card',\n  standalone: true,\n  imports: [CommonModule, PersonBadgeComponent, TaskCategoryComponent, PrioIconComponent, ArrowBackBtnComponent, CloseBtnComponent],\n  templateUrl: './task-card.component.html',\n  styleUrl: './task-card.component.scss'\n})\nexport class TaskCardComponent implements OnInit {\n  users: AppUser[] = [];\n  @Input() task: Task = new Task('');\n  displayDropdown: boolean = false;\n  @Input() closeDropdown: Observable = new Observable();\n  public usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n\n\n  /**\n   * Initialize users array and closing dropdown menu subscription\n   * (to react to clicks onto the \"board\" component)\n   */\n  ngOnInit(): void {\n    this.users = this.usersService.users;\n    this.closeDropdown.subscribe(() => this.displayDropdown = false);\n  }\n\n\n  /**\n   * This function prints the task description as displayed to the user.\n   * The description is only to be displayed up to a certain length.\n   * Thus, longer descriptions are cut off, which is signaled to the user by adding dots (\"...\").\n   * @returns transformed description\n   */\n  printDescription(): String {\n    let printed = this.task.description.slice(0, 35);\n    if (this.task.description.length > 36) {\n      for (let i = 35; i  s.status == 'Done').length;\n    } else {\n      return 0;\n    }\n  }\n\n\n  toggleDropdown(): void {\n    this.displayDropdown = !this.displayDropdown;\n  }\n\n\n  setStatus(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): void {\n    this.task.status = status;\n    this.tasksService.updateTask(this.task);\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    \n        \n            \n        \n        {{'To do'}}\n        {{'In progress'}}\n        {{'Await feedback'}}\n        {{'Done'}}\n    \n    {{task.title}}\n     0\">{{printDescription()}}\n     0\">\n        \n            \n        \n        {{getSubtasksDoneNumber()}}/{{task.subtasks.length}} Subtasks\n    \n     0 || task.prio != null\">\n        \n            @for(assignment of task.assigned; track assignment) {\n            \n            }\n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{\\'To do\\'}}        {{\\'In progress\\'}}        {{\\'Await feedback\\'}}        {{\\'Done\\'}}        {{task.title}}     0\">{{printDescription()}}     0\">                                    {{getSubtasksDoneNumber()}}/{{task.subtasks.length}} Subtasks         0 || task.prio != null\">                    @for(assignment of task.assigned; track assignment) {                        }                                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskCategoryComponent.html":{"url":"components/TaskCategoryComponent.html","title":"component - TaskCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-list/task-card/task-category/task-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-category\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-category.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-category.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         \"Technical Task\" | \"User Story\"\n\n                    \n                \n                \n                    \n                        Default value : 'Technical Task'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-list/task-card/task-category/task-category.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-task-category',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './task-category.component.html',\n  styleUrl: './task-category.component.scss'\n})\nexport class TaskCategoryComponent {\n@Input() category: 'Technical Task' | 'User Story' = 'Technical Task';\n}\n\n    \n\n    \n        \n{{category}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{category}}'\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskViewComponent.html":{"url":"components/TaskViewComponent.html","title":"component - TaskViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/board/task-view/task-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a \"task viewer\" within an overlay.\nThe viewer contains more detailed information than the \"task card\" component.\nIt also allows task editing.\n\n    \n\n    \n        Extends\n    \n    \n                    SlideComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-view\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CloseBtnComponent\n                                TaskCategoryComponent\n                                PrioIconComponent\n                                ContactListItemComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-view.component.html\n            \n\n\n\n            \n                styleUrl\n                ./task-view.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasksService\n                            \n                            \n                                    Public\n                                usersService\n                            \n                            \n                                translated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                    Async\n                                toggleSubtaskStatus\n                            \n                            \n                                slideInOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOverlay\n                            \n                            \n                                editThisTask\n                            \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main/board/task-view/task-view.component.ts:32\n                            \n                        \n\n                \n                    \n                            Call super constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelOverlay\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editThisTask\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main/board/task-view/task-view.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        slide\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         SlideComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SlideComponent:29\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Cancel task viewer overlay with slide animation\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Completely delete this task\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Edit this task (aside from subtask checking) by emitting the corresponding event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:46\n\n                        \n                    \n\n\n            \n                \n                        Extend super class \"ngOnInit()\" method by initializing users array\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleSubtaskStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleSubtaskStatus(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main/board/task-view/task-view.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Toggle subtask status between options \"To do\" and \"Done\".\nImmediately update the task in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    subtask array index\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideInOut\n                        \n                    \n                \n            \n            \n                \nslideInOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         SlideComponent\n\n                        \n                    \n                    \n                        \n                                Defined in         SlideComponent:44\n\n                        \n                    \n\n\n            \n                \n                        Toggle translation state and emit slide event to the parent component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasksService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TasksService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-view/task-view.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UsersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main/board/task-view/task-view.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         SlideComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         SlideComponent:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\nimport { Task } from '../../../../models/task';\nimport { TasksService } from '../../../services/tasks.service';\nimport { UsersService } from '../../../services/users.service';\nimport { TaskCategoryComponent } from '../task-list/task-card/task-category/task-category.component';\nimport { ContactListItemComponent } from '../../contacts/contact-list-item/contact-list-item.component';\nimport { CloseBtnComponent } from '../../../templates/close-btn/close-btn.component';\nimport { PrioIconComponent } from '../../../templates/prio-icon/prio-icon.component';\nimport { CommonModule } from '@angular/common';\nimport { SlideComponent } from '../../../templates/slide/slide.component';\nimport { AppUser } from '../../../../models/app-user';\n\n\n/**\n * This component displays a \"task viewer\" within an overlay.\n * The viewer contains more detailed information than the \"task card\" component.\n * It also allows task editing.\n */\n@Component({\n  selector: 'app-task-view',\n  standalone: true,\n  imports: [CommonModule, CloseBtnComponent, TaskCategoryComponent, PrioIconComponent, ContactListItemComponent],\n  templateUrl: './task-view.component.html',\n  styleUrl: './task-view.component.scss'\n})\nexport class TaskViewComponent extends SlideComponent {\n  @Input() task?: Task;\n  @Input() users: AppUser[] = [];\n  @Output() cancelOverlay = new EventEmitter();\n  @Output() editThisTask = new EventEmitter();\n  public usersService = inject(UsersService);\n  private tasksService = inject(TasksService);\n\n\n  /**\n   * Call super constructor\n   */\n  constructor() {\n    super();\n  }\n\n\n  /**\n   * Extend super class \"ngOnInit()\" method by initializing users array\n   */\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.users = this.usersService.users;\n  }\n\n\n  /**\n   * Cancel task viewer overlay with slide animation\n   */\n  cancel() {\n    this.slideInOut();\n    setTimeout(() => this.cancelOverlay.emit(), 125);\n  }\n\n\n  /**\n   * Toggle subtask status between options \"To do\" and \"Done\".\n   * Immediately update the task in the database.\n   * @param index subtask array index\n   */\n  async toggleSubtaskStatus(index: number) {\n    if (this.task && this.task.subtasks) {\n      const subtask = this.task.subtasks[index];\n      subtask.status = (subtask.status == 'To do' ? 'Done' : 'To do');\n      await this.tasksService.updateSubtask(subtask);\n    }\n  }\n\n\n  /**\n   * Completely delete this task\n   */\n  deleteTask() {\n    if (this.task) {\n      this.cancel();\n      this.tasksService.deleteTask(this.task.id);\n    }\n  }\n\n\n  /**\n   * Edit this task (aside from subtask checking) by emitting the corresponding event to the parent component\n   */\n  editTask() {\n    this.editThisTask.emit();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n        \n        {{task.title}}\n         0\">{{task.description}}\n        \n            \n                Due date:\n                {{task.getDueToText()}}\n            \n            \n                Priority:\n                \n                    \n                        {{task.prio}}\n                        \n                    \n                \n            \n        \n         0\">\n            Assigned to:\n            @for(assignment of task.assigned; track assignment) {\n            @if(assignment) {\n            \n            }\n            }\n        \n         0\">\n            Subtasks\n            @for (subtask of task.subtasks; track subtask; let i = $index) {\n            \n                \n                {{subtask.name}}\n            \n            }\n        \n        \n            \n                \n                Delete\n            \n            \n            \n                \n                Edit\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{task.title}}         0\">{{task.description}}                                    Due date:                {{task.getDueToText()}}                                        Priority:                                                            {{task.prio}}                                                                                         0\">            Assigned to:            @for(assignment of task.assigned; track assignment) {            @if(assignment) {                        }            }                 0\">            Subtasks            @for (subtask of task.subtasks; track subtask; let i = $index) {                                            {{subtask.name}}                        }                                                            Delete                                                                    Edit                        '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tasks.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles generic tasks operations, including backend communication.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTaskStatus\n                            \n                            \n                                    Public\n                                syncingSubtasks\n                            \n                            \n                                tasks\n                            \n                            \n                                tasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSubtask\n                            \n                            \n                                addSubtasksToTasks\n                            \n                            \n                                addSubtaskToTask\n                            \n                            \n                                    Async\n                                addTask\n                            \n                            \n                                addTaskLocally\n                            \n                            \n                                clearSubtasks\n                            \n                            \n                                    Async\n                                deleteSubtask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                deleteTaskLocally\n                            \n                            \n                                getFilteredTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                init\n                            \n                            \n                                    Async\n                                syncSubtasks\n                            \n                            \n                                    Async\n                                syncTasks\n                            \n                            \n                                    Async\n                                updateSubtask\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                            \n                                updateTaskLocally\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tasks.service.ts:21\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Add task to database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtasksToTasks\n                        \n                    \n                \n            \n            \n                \naddSubtasksToTasks(subtasksData: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Add subtasks to their respective tasks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtasksData\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of subtask data from the server.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubtaskToTask\n                        \n                    \n                \n            \n            \n                \naddSubtaskToTask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Add a subtask to its corresponding task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The subtask to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Add task to database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTaskLocally\n                        \n                    \n                \n            \n            \n                \naddTaskLocally(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Add a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The task to add locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSubtasks\n                        \n                    \n                \n            \n            \n                \nclearSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Clear all subtasks from the tasks.\nThis method is used before re-adding subtasks during synchronization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:242\n                        \n                    \n\n\n            \n                \n                        Delete subtask from database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of subtask to be deleted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:169\n                        \n                    \n\n\n            \n                \n                        Delete task from database\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID of task to be deleted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTaskLocally\n                        \n                    \n                \n            \n            \n                \ndeleteTaskLocally(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:182\n                        \n                    \n\n\n            \n                \n                        Delete a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the task to delete locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredTasks\n                        \n                    \n                \n            \n            \n                \ngetFilteredTasks(status: \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Get tasks filtered by task status\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                        \"To do\" | \"In progress\" | \"Await feedback\" | \"Done\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task status\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                filtered tasks array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:198\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete task object from task ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task | undefined\n\n                        \n                            \n                                task object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Initialize task and subtask streaming from the server.\nListens for server-sent events to synchronize tasks and subtasks in real-time.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncSubtasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Synchronize subtasks with the backend.\nFetches the latest subtasks and associates them with their respective tasks.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when subtasks are synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Synchronize tasks with the backend.\nFetches the latest tasks from the server and updates the local task list.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise resolving when tasks are synced.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSubtask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:229\n                        \n                    \n\n\n            \n                \n                        Update subtask in database.\nThe update will only be executed if the task has a valid database ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Update task in database.\nThe update will only be executed if the task has a valid database ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    task to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskLocally\n                        \n                    \n                \n            \n            \n                \nupdateTaskLocally(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/tasks.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Update a task locally without communicating with the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The task to update locally.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newTaskStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"To do\" | \"In progress\" | \"Await feedback\"\n\n                    \n                \n                \n                    \n                        Default value : 'To do'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        syncingSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/tasks.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from '../../models/task';\nimport { AuthService } from './auth.service';\nimport { environment } from '../../environments/environment.development';\nimport { lastValueFrom, Subject } from 'rxjs';\nimport { Subtask } from '../../models/subtask';\n\n\n/**\n * This injectable handles generic tasks operations, including backend communication.\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TasksService {\n  tasks: Task[] = [];\n  tasks$: Subject = new Subject();\n  newTaskStatus: 'To do' | 'In progress' | 'Await feedback' = 'To do';\n  public syncingSubtasks: boolean = false;\n\n\n  /**\n   * Create subscription\n   */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {  }\n\n\n  /**\n   * Initialize task and subtask streaming from the server.\n   * Listens for server-sent events to synchronize tasks and subtasks in real-time.\n   */\n  init() {\n    const tasksEvents = new EventSource(environment.BASE_URL + 'tasks/stream/');\n    const subtasksEvents = new EventSource(environment.BASE_URL + 'subtasks/stream/');\n    tasksEvents.onmessage = () => this.syncTasks();\n    subtasksEvents.onmessage = () => this.syncSubtasks();\n    this.syncTasks();\n  }\n\n\n  /**\n   * Synchronize tasks with the backend.\n   * Fetches the latest tasks from the server and updates the local task list.\n   * @returns A Promise resolving when tasks are synced.\n   */\n  async syncTasks(): Promise {\n    const url = environment.BASE_URL + 'tasks/';\n    const resp = await lastValueFrom(this.http.get(url));\n    this.tasks = [];\n    (resp as Array).forEach(tData => {\n      this.tasks.push(new Task(tData));\n    });\n    this.syncSubtasks();\n    this.tasks$.next();\n  }\n\n\n  /**\n   * Synchronize subtasks with the backend.\n   * Fetches the latest subtasks and associates them with their respective tasks.\n   * @returns A Promise resolving when subtasks are synced.\n   */\n  async syncSubtasks(): Promise {\n    if (this.tasks.length > 0) {\n      this.syncingSubtasks = true;\n      const url = environment.BASE_URL + 'subtasks/';\n      const resp = await lastValueFrom(this.http.get(url));\n      this.addSubtasksToTasks(resp as Array);\n      this.syncingSubtasks = false;\n      this.tasks$.next();\n    }\n  }\n\n\n  /**\n   * Add subtasks to their respective tasks.\n   * @param subtasksData Array of subtask data from the server.\n   */\n  addSubtasksToTasks(subtasksData: Array) {\n    this.clearSubtasks();\n    subtasksData.forEach(stData => this.addSubtaskToTask(new Subtask(stData)));\n  }\n\n\n  /**\n   * Clear all subtasks from the tasks.\n   * This method is used before re-adding subtasks during synchronization.\n   */\n  clearSubtasks() {\n    this.tasks.forEach(t => t.subtasks = []);\n  }\n\n\n  /**\n   * Add a subtask to its corresponding task.\n   * @param subtask The subtask to add.\n   */\n  addSubtaskToTask(subtask: Subtask) {\n    const tasksArrayIndex: number = this.tasks.findIndex(t => t.id == subtask.task_id);\n    if (tasksArrayIndex == -1) {\n      console.error('Task with index', subtask.task_id, 'not found!');\n    } else {\n      this.tasks[tasksArrayIndex].subtasks?.push(subtask);\n    }\n  }\n\n\n  /**\n   * Add task to database\n   * @param task task to be added\n   */\n  async addTask(task: Task): Promise {\n    this.addTaskLocally(task);\n    const url = environment.BASE_URL + 'tasks/';\n    const body = task.toJson();\n    return lastValueFrom(this.http.post(url, body));\n  }\n\n\n  /**\n   * Add a task locally without communicating with the backend.\n   * @param task The task to add locally.\n   */\n  addTaskLocally(task: Task): void {\n    this.tasks.push(task);\n    this.tasks$.next();\n  }\n\n\n  /**\n   * Update task in database.\n   * The update will only be executed if the task has a valid database ID.\n   * @param task task to be updated\n   */\n  async updateTask(task: Task): Promise {\n    if (task.id != -1) {\n      this.updateTaskLocally(task);\n      const url = environment.BASE_URL + 'tasks/' + task.id + '/';\n      const body = task.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } else return;\n  }\n\n\n  /**\n   * Update a task locally without communicating with the backend.\n   * @param task The task to update locally.\n   */\n  updateTaskLocally(task: Task): void {\n    const tasksArrayIndex = this.tasks.findIndex(t => t.id == task.id);\n    if(tasksArrayIndex >= 0) {\n      this.tasks[tasksArrayIndex] = task;\n      this.tasks$.next();\n    } else {\n      console.error('Task with ID', task.id, 'could not be updated (task not found).');\n    }\n  }\n\n\n  /**\n   * Delete task from database\n   * @param id ID of task to be deleted\n   */\n  async deleteTask(id: number): Promise {\n    if (id != -1) {\n      this.deleteTaskLocally(id);\n      const url = environment.BASE_URL + 'tasks/' + id + '/';\n      return lastValueFrom(this.http.delete(url));\n    } else return;\n  }\n\n\n  /**\n   * Delete a task locally without communicating with the backend.\n   * @param id The ID of the task to delete locally.\n   */\n  deleteTaskLocally(id: number): void {\n    const tasksArrayIndex = this.tasks.findIndex(t => t.id == id);\n    if(tasksArrayIndex >= 0) {\n      this.tasks.splice(tasksArrayIndex, 1);\n      this.tasks$.next();\n    } else {\n      console.error('Task with ID', id, 'could not be deleted (task not found).');\n    }\n  }\n\n\n  /**\n   * Retrieve a complete task object from task ID\n   * @param id task ID\n   * @returns task object\n   */\n  getTaskById(id: number): Task | undefined {\n    return this.tasks.find(t => t.id == id);\n  }\n\n\n  /**\n   * Get tasks filtered by task status\n   * @param status task status\n   * @returns filtered tasks array\n   */\n  getFilteredTasks(status: 'To do' | 'In progress' | 'Await feedback' | 'Done'): Task[] {\n    return this.tasks.filter(t => t.status == status);\n  }\n\n\n  /**\n   * Add task to database\n   * @param task task to be added\n   */\n  async addSubtask(subtask: Subtask): Promise {\n    const url = environment.BASE_URL + 'subtasks/';\n    const body = subtask.toJson();\n    return lastValueFrom(this.http.post(url, body));\n  }\n\n\n  /**\n   * Update subtask in database.\n   * The update will only be executed if the task has a valid database ID.\n   * @param task task to be updated\n   */\n  async updateSubtask(subtask: Subtask): Promise {\n    if (subtask.id != -1) {\n      const url = environment.BASE_URL + 'subtasks/' + subtask.id + '/';\n      const body = subtask.toJson();\n      return lastValueFrom(this.http.put(url, body));\n    } else return;\n  }\n\n\n  /**\n   * Delete subtask from database\n   * @param id ID of subtask to be deleted\n   */\n  async deleteSubtask(id: number): Promise {\n    const url = environment.BASE_URL + 'subtasks/' + id + '/';\n    return lastValueFrom(this.http.delete(url));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastNotificationComponent.html":{"url":"components/ToastNotificationComponent.html","title":"component - ToastNotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastNotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/templates/toast-notification/toast-notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a toast notification sliding in from below the viewport.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast-notification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast-notification.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast-notification.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/toast-notification/toast-notification.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/templates/toast-notification/toast-notification.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n\n/**\n * This component displays a toast notification sliding in from below the viewport.\n */\n@Component({\n  selector: 'app-toast-notification',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './toast-notification.component.html',\n  styleUrl: './toast-notification.component.scss'\n})\nexport class ToastNotificationComponent {\n  @Input() message: string = '';\n  @Input() show: boolean = false;\n}\n\n    \n\n    \n        \n    \n        {{message}}\n        @if(message == 'Task added to board') {\n            \n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{message}}        @if(message == \\'Task added to board\\') {                    }    '\n    var COMPONENTS = [{'name': 'AddContactComponent', 'selector': 'app-add-contact'},{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArrowBackBtnComponent', 'selector': 'app-arrow-back-btn'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CloseBtnComponent', 'selector': 'app-close-btn'},{'name': 'ContactListItemComponent', 'selector': 'app-contact-list-item'},{'name': 'ContactsComponent', 'selector': 'app-contacts'},{'name': 'EmailComponent', 'selector': 'app-email'},{'name': 'GreetingComponent', 'selector': 'app-greeting'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeadlineOtherComponent', 'selector': 'app-headline-other'},{'name': 'HeadlineSloganComponent', 'selector': 'app-headline-slogan'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LogInPageComponent', 'selector': 'app-log-in-page'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'PasswordIconComponent', 'selector': 'app-password-icon'},{'name': 'PersonBadgeComponent', 'selector': 'app-person-badge'},{'name': 'PrioIconComponent', 'selector': 'app-prio-icon'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SlideComponent', 'selector': 'app-slide'},{'name': 'StatsItemComponent', 'selector': 'app-stats-item'},{'name': 'SubtaskComponent', 'selector': 'app-subtask'},{'name': 'SummaryComponent', 'selector': 'app-summary'},{'name': 'TaskCardComponent', 'selector': 'app-task-card'},{'name': 'TaskCategoryComponent', 'selector': 'app-task-category'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'TaskViewComponent', 'selector': 'app-task-view'},{'name': 'ToastNotificationComponent', 'selector': 'app-toast-notification'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastNotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This injectable handles generic users operations.\nPOST / ADD only via registration\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByAppId\n                            \n                            \n                                getUserByAuthId\n                            \n                            \n                                init\n                            \n                            \n                                isEmailAvailable\n                            \n                            \n                                isUser\n                            \n                            \n                                    Async\n                                syncRegisteredUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            Create subscription\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByAppId\n                        \n                    \n                \n            \n            \n                \ngetUserByAppId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete app user object from app user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    app user ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AppUser\n\n                        \n                            \n                                app user object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByAuthId\n                        \n                    \n                \n            \n            \n                \ngetUserByAuthId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Retrieve a complete app user object from auth user ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    auth user ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AppUser\n\n                        \n                            \n                                app user object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Initialize user data streaming.\nSets up a connection to listen for user-related server-sent events to keep the list of users in sync.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailAvailable\n                        \n                    \n                \n            \n            \n                \nisEmailAvailable(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Check if an email address is available for registration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email address to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the email is available, false if it is already in use by a registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Check if a contact is a registered user.\nA contact is considered a registered user if their email is found in the user list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The contact to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if the contact is a registered user, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncRegisteredUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncRegisteredUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/users.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Synchronize the list of registered users with the backend.\nFetches all registered users from the server and updates the local user list.\nOnly users with a valid email address are added to the list.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the users have been synchronized.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom, Subject } from 'rxjs';\nimport { AppUser } from '../../models/app-user';\nimport { environment } from \"../../environments/environment.development\";\nimport { AuthService } from \"./auth.service\";\nimport { Contact } from \"../../models/contact\";\n\n\n/**\n * This injectable handles generic users operations.\n * POST / ADD only via registration\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UsersService {\n  users: AppUser[] = [];\n  users$: Subject = new Subject();\n\n\n  /**\n   * Create subscription\n   */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) { }\n\n\n  /**\n   * Initialize user data streaming.\n   * Sets up a connection to listen for user-related server-sent events to keep the list of users in sync.\n   */\n  init() {\n    const tasksEvents = new EventSource(environment.BASE_URL + 'users/stream/');\n    tasksEvents.onmessage = () => this.syncRegisteredUsers();\n    this.syncRegisteredUsers();\n  }\n\n\n  /**\n   * Synchronize the list of registered users with the backend.\n   * Fetches all registered users from the server and updates the local user list.\n   * Only users with a valid email address are added to the list.\n   * @returns A Promise that resolves when the users have been synchronized.\n   */\n  async syncRegisteredUsers(): Promise {\n    const url = environment.BASE_URL + 'users/';\n    const resp = await lastValueFrom(this.http.get(url));\n    this.users = [];\n    (resp as Array).forEach(uData => {\n      if (uData.user.email && uData.user.email != '') {\n        this.users.push(new AppUser(uData));\n      }\n    });\n    this.users$.next();\n  }\n\n\n  /**\n   * Retrieve a complete app user object from app user ID\n   * @param id app user ID\n   * @returns app user object\n   */\n  getUserByAppId(id: number): AppUser {\n    let user = new AppUser({});\n    this.users.forEach(u => {\n      if (u.id == id) { user = u }\n    });\n    return user;\n  }\n\n\n  /**\n   * Retrieve a complete app user object from auth user ID\n   * @param id auth user ID\n   * @returns app user object\n   */\n  getUserByAuthId(id: number): AppUser {\n    let user = new AppUser({});\n    this.users.forEach(u => {\n      if (u.user.id == id) { user = u }\n    });\n    return user;\n  }\n\n\n\n  /**\n   * Check if an email address is available for registration.\n   * @param email The email address to check.\n   * @returns `true` if the email is available, `false` if it is already in use by a registered user.\n   */\n  isEmailAvailable(email: string): boolean {\n    if (this.users.find(u => u.user.email == email)) { return false }\n    return true;\n  }\n\n\n  /**\n   * Check if a contact is a registered user.\n   * A contact is considered a registered user if their email is found in the user list.\n   * @param contact The contact to check.\n   * @returns `true` if the contact is a registered user, `false` otherwise.\n   */\n  isUser(contact: Contact): boolean {\n    return contact.email ? !this.isEmailAvailable(contact.email) : true;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                34 %\n                (8/23)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/log-in-page/log-in-page.component.ts\n            \n            component\n            LogInPageComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/log-in-page/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                65 %\n                (26/40)\n            \n        \n        \n            \n                \n                src/app/main/add-task/add-task.component.ts\n            \n            component\n            AddTaskComponent\n            \n                60 %\n                (33/55)\n            \n        \n        \n            \n                \n                src/app/main/add-task/subtask/subtask.component.ts\n            \n            component\n            SubtaskComponent\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/main/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-card/task-card.component.ts\n            \n            component\n            TaskCardComponent\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-card/task-category/task-category.component.ts\n            \n            component\n            TaskCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main/board/task-list/task-list.component.ts\n            \n            component\n            TaskListComponent\n            \n                40 %\n                (14/35)\n            \n        \n        \n            \n                \n                src/app/main/board/task-view/task-view.component.ts\n            \n            component\n            TaskViewComponent\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                src/app/main/contacts/add-contact/add-contact.component.ts\n            \n            component\n            AddContactComponent\n            \n                38 %\n                (7/18)\n            \n        \n        \n            \n                \n                src/app/main/contacts/contact-list-item/contact-list-item.component.ts\n            \n            component\n            ContactListItemComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/main/contacts/contacts.component.ts\n            \n            component\n            ContactsComponent\n            \n                62 %\n                (22/35)\n            \n        \n        \n            \n                \n                src/app/main/contacts/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/main/summary/greeting/greeting.component.ts\n            \n            component\n            GreetingComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/main/summary/stats-item/stats-item.component.ts\n            \n            component\n            StatsItemComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/main/summary/summary.component.ts\n            \n            component\n            SummaryComponent\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/other/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/other/legal-notice/legal-notice.component.ts\n            \n            component\n            LegalNoticeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/other/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/other/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/services/auth-token.interceptor.ts\n            \n            variable\n            AUTH_TOKEN_INTERCEPTOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                src/app/services/autoscroll.service.ts\n            \n            injectable\n            AutoscrollService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contacts.service.ts\n            \n            injectable\n            ContactsService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/services/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/shared/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/templates/arrow-back-btn/arrow-back-btn.component.ts\n            \n            component\n            ArrowBackBtnComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/templates/close-btn/close-btn.component.ts\n            \n            component\n            CloseBtnComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/headline-other/headline-other.component.ts\n            \n            component\n            HeadlineOtherComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/templates/headline-slogan/headline-slogan.component.ts\n            \n            component\n            HeadlineSloganComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/templates/password-icon/password-icon.component.ts\n            \n            component\n            PasswordIconComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/person-badge/person-badge.component.ts\n            \n            component\n            PersonBadgeComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/templates/prio-icon/prio-icon.component.ts\n            \n            component\n            PrioIconComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/templates/slide/slide.component.ts\n            \n            component\n            SlideComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/templates/toast-notification/toast-notification.component.ts\n            \n            component\n            ToastNotificationComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/app-user.ts\n            \n            class\n            AppUser\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/models/auth-user.ts\n            \n            class\n            AuthUser\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/models/contact.ts\n            \n            class\n            Contact\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/models/subtask.ts\n            \n            class\n            Subtask\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/models/task.ts\n            \n            class\n            Task\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/models/task.ts\n            \n            function\n            getCurrentDate\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getCurrentDate   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCurrentDate\n                        \n                    \n                \n            \n            \n                \ngetCurrentDate()\n                \n            \n\n\n\n\n            \n                \n                        This function returns the current date in the default date string format (yyyy-mm-dd)\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                current date\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJoin\nThis project was generated with Angular CLI version 17.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AUTH_TOKEN_INTERCEPTOR   (src/.../auth-token.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withFetch()),\n    provideHttpClient(withInterceptors([AUTH_TOKEN_INTERCEPTOR])),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth-token.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN_INTERCEPTOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (request, next) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    request = request.clone({\n      setHeaders: { Authorization: `Token ${token}` }\n    });\n  }\n  return next(request);\n}\n                    \n                \n\n            \n                \n                    Intercepts HTTP requests by setting auth token headers.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    BASE_URL: 'http://localhost:8000/api/',\n    BADGE_COLORS: [\n        '#FDDC2F',\n        '#33DA81',\n        '#E98366',\n        '#C27177',\n        '#42F9B9',\n        '#2AEC8B',\n        '#6DD44A',\n        '#C7ACC0',\n        '#309CF4',\n        '#B663F3',\n        '#b579d2',\n        '#809283',\n        '#58AC47',\n        '#2FB287',\n        '#2AFDC3',\n        '#D2FA60',\n        '#A8EE51',\n        '#A9DDC7',\n        '#FE68C4',\n        '#DC3DF5',\n        '#05CDD7',\n        '#E07D47',\n        '#8EA906',\n        '#36B3F0',\n        '#BF59F2'\n    ],\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    AUTH_TOKEN_HEADERS: new HttpHeaders().set('Authorization', 'Token ' + localStorage.getItem('token')),\n    BASE_URL: 'http://localhost:8000/api/',\n    BADGE_COLORS: [\n        '#FDDC2F',\n        '#33DA81',\n        '#E98366',\n        '#C27177',\n        '#42F9B9',\n        '#2AEC8B',\n        '#6DD44A',\n        '#C7ACC0',\n        '#309CF4',\n        '#B663F3',\n        '#b579d2',\n        '#809283',\n        '#58AC47',\n        '#2FB287',\n        '#2AFDC3',\n        '#D2FA60',\n        '#A8EE51',\n        '#A9DDC7',\n        '#FE68C4',\n        '#DC3DF5',\n        '#05CDD7',\n        '#E07D47',\n        '#8EA906',\n        '#36B3F0',\n        '#BF59F2'\n    ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
